{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOVZIOoIWaaXIanQNy2GY35"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "! pip install pulp\n",
        "! pip install veroviz"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l7xXibVr38BQ",
        "outputId": "956a6d33-e4c2-4851-e8fb-db0d98293cd3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pulp\n",
            "  Downloading PuLP-2.7.0-py3-none-any.whl (14.3 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m14.3/14.3 MB\u001b[0m \u001b[31m86.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: pulp\n",
            "Successfully installed pulp-2.7.0\n",
            "Collecting veroviz\n",
            "  Downloading veroviz-0.4.5-py3-none-any.whl (181 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m181.6/181.6 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from veroviz) (1.23.5)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from veroviz) (1.5.3)\n",
            "Requirement already satisfied: geopy in /usr/local/lib/python3.10/dist-packages (from veroviz) (2.3.0)\n",
            "Collecting psycopg2-binary (from veroviz)\n",
            "  Downloading psycopg2_binary-2.9.9-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m41.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from veroviz) (2.0.7)\n",
            "Requirement already satisfied: folium in /usr/local/lib/python3.10/dist-packages (from veroviz) (0.14.0)\n",
            "Collecting tripy (from veroviz)\n",
            "  Downloading tripy-1.0.0-py3-none-any.whl (3.7 kB)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from veroviz) (1.11.4)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from veroviz) (3.7.1)\n",
            "Requirement already satisfied: branca>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from folium->veroviz) (0.7.0)\n",
            "Requirement already satisfied: jinja2>=2.9 in /usr/local/lib/python3.10/dist-packages (from folium->veroviz) (3.1.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from folium->veroviz) (2.31.0)\n",
            "Requirement already satisfied: geographiclib<3,>=1.52 in /usr/local/lib/python3.10/dist-packages (from geopy->veroviz) (2.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (1.2.0)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (4.45.1)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (1.4.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (23.2)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (9.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (3.1.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->veroviz) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->veroviz) (2023.3.post1)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2>=2.9->folium->veroviz) (2.1.3)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->veroviz) (1.16.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->folium->veroviz) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->folium->veroviz) (3.6)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->folium->veroviz) (2023.11.17)\n",
            "Installing collected packages: tripy, psycopg2-binary, veroviz\n",
            "Successfully installed psycopg2-binary-2.9.9 tripy-1.0.0 veroviz-0.4.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UEw78CrC36qZ"
      },
      "outputs": [],
      "source": [
        "# Import the libraries needed.\n",
        "from pulp import *\n",
        "import pandas as pd\n",
        "import veroviz as vrv\n",
        "import time"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Units of each product available at each depot\n",
        "depot_product_availabilities = {'D1':{'P1':3, 'P2': 5, 'P3': 3, 'P4':0},\n",
        "                                'D2':{'P1':2, 'P2': 4, 'P3': 0, 'P4':4}}\n",
        "\n",
        "# The volume (cubic feet) required per unit of each product\n",
        "product_volumes = {'P1':12, 'P2':8, 'P3':9, 'P4':16}\n",
        "\n",
        "# Truck data (capacity is cubic feet available).\n",
        "trucks = {'T1':{'base':'D1', 'capacity':50, 'cost_per_mile':0.47},\n",
        "          'T2':{'base':'D1', 'capacity':40, 'cost_per_mile':0.41},\n",
        "          'T3':{'base':'D2', 'capacity':30, 'cost_per_mile':0.35},\n",
        "          'T4':{'base':'D2', 'capacity':90, 'cost_per_mile':0.55}}\n",
        "\n",
        "# Number of units of each product ordered by each customer.\n",
        "customer_orders = {'C1':{'P1':0, 'P2':1, 'P3':1, 'P4':0},\n",
        "                   'C2':{'P1':0, 'P2':0, 'P3':0, 'P4':1},\n",
        "                   'C3':{'P1':1, 'P2':0, 'P3':0, 'P4':0},\n",
        "                   'C4':{'P1':0, 'P2':0, 'P3':0, 'P4':2},\n",
        "                   'C5':{'P1':2, 'P2':0, 'P3':0, 'P4':0},\n",
        "                   'C6':{'P1':0, 'P2':2, 'P3':1, 'P4':0},\n",
        "                   'C7':{'P1':0, 'P2':1, 'P3':1, 'P4':0},\n",
        "                   'C8':{'P1':1, 'P2':1, 'P3':0, 'P4':0}}\n",
        "\n",
        "# Labels for trucks, depots, customers, and products.\n",
        "truck_labels = sorted(trucks.keys())\n",
        "depot_labels = sorted(depot_product_availabilities.keys())\n",
        "customer_labels = sorted(customer_orders.keys())\n",
        "product_labels = sorted(product_volumes.keys())\n",
        "\n",
        "# These is the scenario node (i.e., locations of depots and customers) data, initially generated by the Veroviz sketch tool.\n",
        "# The leafletIconType was then manually set to 'home' for depot nodes and 'star' for customer nodes.\n",
        "nodesArray = [\n",
        "    {'id': 0, 'lat': 48.089630, 'lon': -1.780950, 'altMeters': 0.0, 'nodeName': 'D1', 'nodeType': 'Depot', 'popupText': 'D1', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'home', 'leafletColor': 'blue', 'leafletIconText': '0', 'cesiumIconType': 'pin', 'cesiumColor': 'blue', 'cesiumIconText': '0', 'elevMeters': None},\n",
        "    {'id': 1, 'lat': 48.110630, 'lon': -1.534622, 'altMeters': 0.0, 'nodeName': 'D2', 'nodeType': 'Depot', 'popupText': 'D2', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'home', 'leafletColor': 'blue', 'leafletIconText': '1', 'cesiumIconType': 'pin', 'cesiumColor': 'blue', 'cesiumIconText': '1', 'elevMeters': None},\n",
        "    {'id': 2, 'lat': 48.1090057, 'lon': -1.68361, 'altMeters': 0.0, 'nodeName': 'C1', 'nodeType': 'Customer', 'popupText': 'C1', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '2', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '2', 'elevMeters': None},\n",
        "    {'id': 3, 'lat': 48.1196207, 'lon': -1.6669879, 'altMeters': 0.0, 'nodeName': 'C2', 'nodeType': 'Customer', 'popupText': 'C2', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '3', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '3', 'elevMeters': None},\n",
        "    {'id': 4, 'lat': 48.122445, 'lon': -1.6839187, 'altMeters': 0.0, 'nodeName': 'C3', 'nodeType': 'Customer', 'popupText': 'C3', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '4', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '4', 'elevMeters': None},\n",
        "    {'id': 5, 'lat': 48.1174576, 'lon': -1.7077382, 'altMeters': 0.0, 'nodeName': 'C4', 'nodeType': 'Customer', 'popupText': 'C4', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '5', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '5', 'elevMeters': None},\n",
        "    {'id': 6, 'lat': 48.0849474, 'lon': -1.6923783, 'altMeters': 0.0, 'nodeName': 'C5', 'nodeType': 'Customer', 'popupText': 'C5', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '6', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '6', 'elevMeters': None},\n",
        "    {'id': 7, 'lat': 48.1208677, 'lon': -1.6723544, 'altMeters': 0.0, 'nodeName': 'C6', 'nodeType': 'Customer', 'popupText': 'C6', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '7', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '7', 'elevMeters': None},\n",
        "    {'id': 8, 'lat': 48.1126842986276, 'lon': -1.6934232628134347, 'altMeters': 0.0, 'nodeName': 'C7', 'nodeType': 'Customer', 'popupText': 'C7', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '8', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '8', 'elevMeters': None},\n",
        "    {'id': 9, 'lat': 48.1195623, 'lon': -1.602953, 'altMeters': 0.0, 'nodeName': 'C8', 'nodeType': 'Customer', 'popupText': 'C8', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '9', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '9', 'elevMeters': None},\n",
        "]\n",
        "nodesDF = pd.DataFrame(nodesArray)\n",
        "\n",
        "# Get the raw distance matrix from Veroviz. NOTE: This takes ~ 30 seconds - not instantaneous.\n",
        "[_, dist] = vrv.getTimeDist2D(nodes           = nodesDF,\n",
        "                              matrixType      = 'all2all',\n",
        "                              routeType       = 'fastest',\n",
        "                              dataProvider    = 'OSRM-online',\n",
        "                              outputDistUnits = 'miles')\n",
        "\n",
        "# This is the \"Big M\" in linear programming terminology - a large constant\n",
        "# used to impose prohibitively high costs on infeasible choices.\n",
        "BIG_M = 9999.9\n",
        "\n",
        "# Set distances from each node to itself as BIG_M to ensure these paths are\n",
        "# never taken.\n",
        "dist = {(nodesArray[i]['nodeName'], nodesArray[j]['nodeName']):dist[i,j] if i != j else BIG_M\n",
        "          for i in range(len(nodesArray)) for j in range(len(nodesArray))}\n",
        "\n",
        "\n",
        "# View the nodes on a map - blue/home markers are depots and orange/star markers are customers.\n",
        "vrv.createLeaflet(nodes=nodesDF, mapBackground='Arcgis Topo')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 804
        },
        "id": "pDdYjrDH4JK6",
        "outputId": "98ee74bb-c714-4ded-def6-82245396e486"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<folium.folium.Map at 0x7e1ac0072950>"
            ],
            "text/html": [
              "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
              "&lt;html&gt;\n",
              "&lt;head&gt;\n",
              "    \n",
              "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
              "    \n",
              "        &lt;script&gt;\n",
              "            L_NO_TOUCH = false;\n",
              "            L_DISABLE_3D = false;\n",
              "        &lt;/script&gt;\n",
              "    \n",
              "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
              "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
              "    \n",
              "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
              "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
              "            &lt;style&gt;\n",
              "                #map_95f0cff5f50aa30664061b2ee06a30ae {\n",
              "                    position: relative;\n",
              "                    width: 100.0%;\n",
              "                    height: 100.0%;\n",
              "                    left: 0.0%;\n",
              "                    top: 0.0%;\n",
              "                }\n",
              "                .leaflet-container { font-size: 1rem; }\n",
              "            &lt;/style&gt;\n",
              "        \n",
              "&lt;/head&gt;\n",
              "&lt;body&gt;\n",
              "    \n",
              "    \n",
              "            &lt;div class=&quot;folium-map&quot; id=&quot;map_95f0cff5f50aa30664061b2ee06a30ae&quot; &gt;&lt;/div&gt;\n",
              "        \n",
              "&lt;/body&gt;\n",
              "&lt;script&gt;\n",
              "    \n",
              "    \n",
              "            var map_95f0cff5f50aa30664061b2ee06a30ae = L.map(\n",
              "                &quot;map_95f0cff5f50aa30664061b2ee06a30ae&quot;,\n",
              "                {\n",
              "                    center: [48.1036962, -1.657786],\n",
              "                    crs: L.CRS.EPSG3857,\n",
              "                    zoom: 3,\n",
              "                    zoomControl: true,\n",
              "                    preferCanvas: false,\n",
              "                }\n",
              "            );\n",
              "\n",
              "            \n",
              "\n",
              "        \n",
              "    \n",
              "            var tile_layer_9cf2620f970441d6298bf8ee3cb93664 = L.tileLayer(\n",
              "                &quot;https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}&quot;,\n",
              "                {&quot;attribution&quot;: &quot;Tiles \\u0026copy; Esri \\u0026mdash; Source: Esri&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            map_95f0cff5f50aa30664061b2ee06a30ae.fitBounds(\n",
              "                [[48.0749474, -1.524622], [48.132445, -1.79095]],\n",
              "                {}\n",
              "            );\n",
              "        \n",
              "    \n",
              "            var marker_7853943a964dcc3b276551123a4c88b9 = L.marker(\n",
              "                [48.08963, -1.78095],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_1f116b943540cf892555233a15fd9aaa = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;home&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;blue&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_7853943a964dcc3b276551123a4c88b9.setIcon(icon_1f116b943540cf892555233a15fd9aaa);\n",
              "        \n",
              "    \n",
              "        var popup_822e90e3d795182e34aef963834f656a = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_b7e6da0eb15fcf674c879ecd243c632d = $(`&lt;div id=&quot;html_b7e6da0eb15fcf674c879ecd243c632d&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;D1&lt;/div&gt;`)[0];\n",
              "                popup_822e90e3d795182e34aef963834f656a.setContent(html_b7e6da0eb15fcf674c879ecd243c632d);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_7853943a964dcc3b276551123a4c88b9.bindPopup(popup_822e90e3d795182e34aef963834f656a)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_f957ea93de70eeb3a67c0fac8e088860 = L.marker(\n",
              "                [48.11063, -1.534622],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_9ae99f12c297a104bfbd630ee18b9545 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;home&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;blue&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_f957ea93de70eeb3a67c0fac8e088860.setIcon(icon_9ae99f12c297a104bfbd630ee18b9545);\n",
              "        \n",
              "    \n",
              "        var popup_90bd8c370e98f6ec1b674bf1ef0836de = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_f264ba993146fe3174d9663656a9892b = $(`&lt;div id=&quot;html_f264ba993146fe3174d9663656a9892b&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;D2&lt;/div&gt;`)[0];\n",
              "                popup_90bd8c370e98f6ec1b674bf1ef0836de.setContent(html_f264ba993146fe3174d9663656a9892b);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_f957ea93de70eeb3a67c0fac8e088860.bindPopup(popup_90bd8c370e98f6ec1b674bf1ef0836de)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_d7bd9eebfed524740094585c77b3f3c5 = L.marker(\n",
              "                [48.1090057, -1.68361],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_831d4dcc4ed3b47d816f82eced4f3204 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_d7bd9eebfed524740094585c77b3f3c5.setIcon(icon_831d4dcc4ed3b47d816f82eced4f3204);\n",
              "        \n",
              "    \n",
              "        var popup_c0c0093baccf3a2d45b263c6868d1a1a = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_f9d424a0f5d0807f094289672a410789 = $(`&lt;div id=&quot;html_f9d424a0f5d0807f094289672a410789&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C1&lt;/div&gt;`)[0];\n",
              "                popup_c0c0093baccf3a2d45b263c6868d1a1a.setContent(html_f9d424a0f5d0807f094289672a410789);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_d7bd9eebfed524740094585c77b3f3c5.bindPopup(popup_c0c0093baccf3a2d45b263c6868d1a1a)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_bd2bf56096646d6bfe540538a64f4b5c = L.marker(\n",
              "                [48.1196207, -1.6669879],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_f94198273bf69efafe37eb170936ff5d = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_bd2bf56096646d6bfe540538a64f4b5c.setIcon(icon_f94198273bf69efafe37eb170936ff5d);\n",
              "        \n",
              "    \n",
              "        var popup_975b4deafc94cd617521d92263344001 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_0cd5aa64d72ef5b2b020a6f425fb2f07 = $(`&lt;div id=&quot;html_0cd5aa64d72ef5b2b020a6f425fb2f07&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C2&lt;/div&gt;`)[0];\n",
              "                popup_975b4deafc94cd617521d92263344001.setContent(html_0cd5aa64d72ef5b2b020a6f425fb2f07);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_bd2bf56096646d6bfe540538a64f4b5c.bindPopup(popup_975b4deafc94cd617521d92263344001)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_50dc94b8396df303e037c4bfef5d08d2 = L.marker(\n",
              "                [48.122445, -1.6839187],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_9b04784e670d4b93ea12e51ff3b83f43 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_50dc94b8396df303e037c4bfef5d08d2.setIcon(icon_9b04784e670d4b93ea12e51ff3b83f43);\n",
              "        \n",
              "    \n",
              "        var popup_8b129d4f7e4a189c200c3831b3436665 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_6a2f7751a9c4e0437d501d16ad8701f9 = $(`&lt;div id=&quot;html_6a2f7751a9c4e0437d501d16ad8701f9&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C3&lt;/div&gt;`)[0];\n",
              "                popup_8b129d4f7e4a189c200c3831b3436665.setContent(html_6a2f7751a9c4e0437d501d16ad8701f9);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_50dc94b8396df303e037c4bfef5d08d2.bindPopup(popup_8b129d4f7e4a189c200c3831b3436665)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_7823c0dd626e5cec0a3d3cf9202390e8 = L.marker(\n",
              "                [48.1174576, -1.7077382],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_37233070ea7d5df21bfb2265a2fc5eb5 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_7823c0dd626e5cec0a3d3cf9202390e8.setIcon(icon_37233070ea7d5df21bfb2265a2fc5eb5);\n",
              "        \n",
              "    \n",
              "        var popup_6ef25971ad6dce4995827fe600f49730 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_02aee025a983956ab6d046040540f35f = $(`&lt;div id=&quot;html_02aee025a983956ab6d046040540f35f&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C4&lt;/div&gt;`)[0];\n",
              "                popup_6ef25971ad6dce4995827fe600f49730.setContent(html_02aee025a983956ab6d046040540f35f);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_7823c0dd626e5cec0a3d3cf9202390e8.bindPopup(popup_6ef25971ad6dce4995827fe600f49730)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_c4ed67688fd7e32cc97d5838b5345c43 = L.marker(\n",
              "                [48.0849474, -1.6923783],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_45ef0e4b11cd155dc6516621bc7656a1 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_c4ed67688fd7e32cc97d5838b5345c43.setIcon(icon_45ef0e4b11cd155dc6516621bc7656a1);\n",
              "        \n",
              "    \n",
              "        var popup_9e10601d5da82e7dda26609ff76276f7 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_2808714cf0b4305db46237a3c3b993cb = $(`&lt;div id=&quot;html_2808714cf0b4305db46237a3c3b993cb&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C5&lt;/div&gt;`)[0];\n",
              "                popup_9e10601d5da82e7dda26609ff76276f7.setContent(html_2808714cf0b4305db46237a3c3b993cb);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_c4ed67688fd7e32cc97d5838b5345c43.bindPopup(popup_9e10601d5da82e7dda26609ff76276f7)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_4f70cf81e65564ac04b3aa1747b3c6af = L.marker(\n",
              "                [48.1208677, -1.6723544],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_e63845f46358f5daa52838440d588a9c = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_4f70cf81e65564ac04b3aa1747b3c6af.setIcon(icon_e63845f46358f5daa52838440d588a9c);\n",
              "        \n",
              "    \n",
              "        var popup_7990a998a0ec5411aa893bca0d269c1c = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_8cc92704df69dc1573cb0f871422e970 = $(`&lt;div id=&quot;html_8cc92704df69dc1573cb0f871422e970&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C6&lt;/div&gt;`)[0];\n",
              "                popup_7990a998a0ec5411aa893bca0d269c1c.setContent(html_8cc92704df69dc1573cb0f871422e970);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_4f70cf81e65564ac04b3aa1747b3c6af.bindPopup(popup_7990a998a0ec5411aa893bca0d269c1c)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_c1bcf817fa658aaf9beb36e1251962c0 = L.marker(\n",
              "                [48.1126842986276, -1.6934232628134347],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_0f47aa4b310319aa6f36efea0e7eadb0 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_c1bcf817fa658aaf9beb36e1251962c0.setIcon(icon_0f47aa4b310319aa6f36efea0e7eadb0);\n",
              "        \n",
              "    \n",
              "        var popup_f0d7461e26887b79330e95facb82d217 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_7c7ca046cc61a8b2d6f0fe64b572acf6 = $(`&lt;div id=&quot;html_7c7ca046cc61a8b2d6f0fe64b572acf6&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C7&lt;/div&gt;`)[0];\n",
              "                popup_f0d7461e26887b79330e95facb82d217.setContent(html_7c7ca046cc61a8b2d6f0fe64b572acf6);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_c1bcf817fa658aaf9beb36e1251962c0.bindPopup(popup_f0d7461e26887b79330e95facb82d217)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_bfaf8d59c191e6a73e519499a1322c69 = L.marker(\n",
              "                [48.1195623, -1.602953],\n",
              "                {}\n",
              "            ).addTo(map_95f0cff5f50aa30664061b2ee06a30ae);\n",
              "        \n",
              "    \n",
              "            var icon_f69b029bf7c18f7ed982f4c87b1622d2 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_bfaf8d59c191e6a73e519499a1322c69.setIcon(icon_f69b029bf7c18f7ed982f4c87b1622d2);\n",
              "        \n",
              "    \n",
              "        var popup_d41e5a715d21defc387b3afc96bea415 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_cd35d1452fbbfa14b89e91150dcefd2b = $(`&lt;div id=&quot;html_cd35d1452fbbfa14b89e91150dcefd2b&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C8&lt;/div&gt;`)[0];\n",
              "                popup_d41e5a715d21defc387b3afc96bea415.setContent(html_cd35d1452fbbfa14b89e91150dcefd2b);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_bfaf8d59c191e6a73e519499a1322c69.bindPopup(popup_d41e5a715d21defc387b3afc96bea415)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "&lt;/script&gt;\n",
              "&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# The inputs for this function are as follows:\n",
        "# trucks: A list of distinct truck labels (e.g., ['T1', 'T2', ...])\n",
        "# depots: A list of distinct depot labels (e.g., ['D1', 'D2', ...])\n",
        "# customers: A list of distinct customer labels (e.g., ['C1', 'C2', ...])\n",
        "# products: A list of distinct product labels (e.g., ['C1', 'C2', ...])\n",
        "# prod_availability: A dict of form {<depot label>:{<product label>:<units available>, ...}, ...}\n",
        "# prod_volume: A dict of form {<product label>:<volume>}\n",
        "# truck_cap: A dict of form {<truck label>:<volume capacity>}\n",
        "# demand: A dict of form {<customer label>}:{<product label>:<units ordered>, ...}, ...}\n",
        "# cost_per_mile: A dict of form {<truck label>:<cost per mile>}\n",
        "# dist_matrix: dict of form {(<location label>, <location label>):<distance>, ...}. Locations are depots + customers\n",
        "# truck_base: A dict of form {<truck label>:<depot label>}\n",
        "# big_m: An arbitrarily large constant.\n",
        "def build_model(trucks, depots, customers, products, prod_availability,\n",
        "                prod_volume, truck_cap, demand, cost_per_mile,\n",
        "                dist_matrix, truck_base, big_m):\n",
        "    H = trucks\n",
        "    I = depots\n",
        "    J = customers\n",
        "    K = products\n",
        "    L = I + J # Set of all distinct locations\n",
        "    a = prod_availability\n",
        "    e = prod_volume\n",
        "    E = truck_cap\n",
        "    r = demand\n",
        "    d = dist_matrix\n",
        "    c = cost_per_mile\n",
        "    b = {h:{i:1 if truck_base[h] == i else 0 for i in I} for h in H}\n",
        "\n",
        "    # u[h][j][k] = Units of product k delivered to customer j on truck h\n",
        "    u = LpVariable.dicts(\"u\", (H, J, K), 0, None, LpInteger)\n",
        "\n",
        "    # x[h][i][j] == 1 if truck h travels directly from location i to j, 0 otherwise\n",
        "    x = LpVariable.dicts(\"x\", (H, L, L), 0, 1, LpInteger)\n",
        "\n",
        "    prob = LpProblem(\"MultiDepot_VRP\", LpMinimize)\n",
        "    prob += (lpSum([c[h] * d[i,j] * x[h][i][j] for h in H for i in L for j in L]),\n",
        "                   'Total_Cost') # Objective Function\n",
        "    for h in H:\n",
        "        prob += (lpSum([e[k] * u[h][j][k] for j in J for k in K]) <= E[h]) # Ensure no truck capacity exceeded\n",
        "        for i in L:\n",
        "            prob += (lpSum([x[h][j][i] for j in L]) == lpSum([x[h][i][j] for j in L])) # For each loc, truck in -> truck out\n",
        "        for i in I:\n",
        "            prob += (lpSum([x[h][i][j] for j in L]) <= b[h][i]) # Ensure no truck leaves a non-base depot\n",
        "        for W in allcombinations(J, len(J)):\n",
        "            prob += (lpSum([x[h][i][j] for i in W for j in W]) <= len(W) - 1) # Ensure no subset of customers contains a circuit.\n",
        "\n",
        "    for k in K:\n",
        "        for i in I:\n",
        "            prob += (lpSum([b[h][i] * u[h][j][k] for h in H for j in J]) <= a[i][k]) # No depot ships more of a product than it has\n",
        "        for j in J:\n",
        "            prob += (lpSum(u[h][j][k] for h in H) == r[j][k]) # Each customer gets the products they ordered\n",
        "            for h in H:\n",
        "                prob += (u[h][j][k] <= big_m * lpSum(x[h][i][j] for i in L)) # No truck carries products for a customer unless it visits the customer.\n",
        "    return prob\n"
      ],
      "metadata": {
        "id": "Uo_9XORJIdsn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Construct the model\n",
        "model = build_model(truck_labels,\n",
        "                    depot_labels,\n",
        "                    customer_labels,\n",
        "                    product_labels,\n",
        "                    depot_product_availabilities,\n",
        "                    product_volumes,\n",
        "                    {t:trucks[t]['capacity'] for t in trucks.keys()},\n",
        "                    customer_orders,\n",
        "                    {t:trucks[t]['cost_per_mile'] for t in trucks.keys()},\n",
        "                    dist,\n",
        "                    {t:trucks[t]['base'] for t in trucks.keys()},\n",
        "                    BIG_M)\n",
        "\n",
        "# Set the initial time\n",
        "start_time = time.time()\n",
        "\n",
        "# Solve the model using the CBC solver that comes with PuLP\n",
        "\n",
        "solver = pulp.PULP_CBC_CMD(maxSeconds=300, msg=1, fracGap=0)\n",
        "model.solve(solver)\n",
        "\n",
        "\n",
        "\n",
        "# If you have the faster CPLEX solver and want to use it, uncomment the two\n",
        "# lines below and comment out the one above.\n",
        "#solver = getSolver('CPLEX_CMD')\n",
        "#model.solve(solver)\n",
        "\n",
        "# Compute the elapsed time\n",
        "elapsed_time = time.time() - start_time\n",
        "\n",
        "\n",
        "# Output the total cost of transportation and computational time\n",
        "print(\"Total Cost of Transportation = \", value(model.objective))\n",
        "print(\"Computational Time = \", round(elapsed_time, 1), 'seconds')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jAzRiL8gIikD",
        "outputId": "4a5a8a6a-8272-4798-945a-796dbea36549"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/pulp/apis/coin_api.py:89: UserWarning: Parameter fracGap is being depreciated for gapRel\n",
            "  warnings.warn(\"Parameter fracGap is being depreciated for gapRel\")\n",
            "/usr/local/lib/python3.10/dist-packages/pulp/apis/coin_api.py:95: UserWarning: Parameter maxSeconds is being depreciated for timeLimit\n",
            "  warnings.warn(\"Parameter maxSeconds is being depreciated for timeLimit\")\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total Cost of Transportation =  30.608370512135412\n",
            "Computational Time =  300.3 seconds\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Populate truck path and customer order dicts by extracting variable values\n",
        "# from the solved model.\n",
        "path, order = {}, {}\n",
        "for v in model.variables():\n",
        "    var, truck, i, j, val = v.name.split('_') + [v.varValue]\n",
        "    if var == 'x' and val == 1:\n",
        "        if not(truck in path):\n",
        "            path[truck] = {}\n",
        "        path[truck][i] = j\n",
        "        if i.startswith('D'):\n",
        "            path[truck]['depot'] = i\n",
        "    elif var == 'u' and val > 0:\n",
        "        if not(truck in order):\n",
        "            order[truck] = {}\n",
        "        if not(i in order[truck]):\n",
        "            order[truck][i] = []\n",
        "        order[truck][i].append((j, val))\n",
        "\n",
        "# Utility function - given a truck label, build its route as a list (excluding the depot).\n",
        "def build_truck_route(truck):\n",
        "    h = path[truck]\n",
        "    depot = h['depot']\n",
        "    curr_loc = depot\n",
        "    route = []\n",
        "    while h[curr_loc] != depot:\n",
        "        route.append(h[curr_loc])\n",
        "        curr_loc = h[curr_loc]\n",
        "    return route\n",
        "\n",
        "# Build a dict for all truck routes including the depots. We will use this later.\n",
        "truck_routes = {}\n",
        "\n",
        "# Build Itinerary Table\n",
        "itinerary_list = []\n",
        "for t in truck_labels:\n",
        "    if t in path :\n",
        "        depot = path[t]['depot']\n",
        "        route = build_truck_route(t)\n",
        "        truck_routes[t] = [depot] + route + [depot]\n",
        "        stop_num = 1\n",
        "        for stop in route:\n",
        "            delivery = str(order[t][stop]).replace('[', '').replace(']', '').replace(\"'\", '')\n",
        "            itinerary_list.append({'Truck':t, 'Stop Number':str(stop_num),\n",
        "                                   'Customer':stop, 'Delivery (Product, Quantity)':delivery})\n",
        "            stop_num += 1\n",
        "\n",
        "# Create a data frame to hold the truck iteneraries and show it\n",
        "itinerary_df = pd.DataFrame(itinerary_list)\n",
        "itinerary_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "9ATwTo2sRqrn",
        "outputId": "46ef2565-d818-478e-a239-6775a0f8db13"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-7-7021a7c474bc>\u001b[0m in \u001b[0;36m<cell line: 35>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     40\u001b[0m         \u001b[0mstop_num\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     41\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mstop\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mroute\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 42\u001b[0;31m             \u001b[0mdelivery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'['\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m']'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"'\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     43\u001b[0m             itinerary_list.append({'Truck':t, 'Stop Number':str(stop_num), \n\u001b[1;32m     44\u001b[0m                                    'Customer':stop, 'Delivery (Product, Quantity)':delivery})\n",
            "\u001b[0;31mKeyError\u001b[0m: 'C2'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Populate truck path and customer order dicts by extracting variable values\n",
        "# from the solved model.\n",
        "path, order = {}, {}\n",
        "for v in model.variables():\n",
        "    var, truck, i, j, val = v.name.split('_') + [v.varValue]\n",
        "    if var == 'x' and val == 1:\n",
        "        if not(truck in path):\n",
        "            path[truck] = {}\n",
        "        path[truck][i] = j\n",
        "        if i.startswith('D'):\n",
        "            path[truck]['depot'] = i\n",
        "    elif var == 'u' and val > 0:\n",
        "        if not(truck in order):\n",
        "            order[truck] = {}\n",
        "        if not(i in order[truck]):\n",
        "            order[truck][i] = []\n",
        "        order[truck][i].append((j, val))\n",
        "\n",
        "# Utility function - given a truck label, build its route as a list (excluding the depot).\n",
        "def build_truck_route(truck):\n",
        "    h = path[truck]\n",
        "    depot = h['depot']\n",
        "    curr_loc = depot\n",
        "    route = []\n",
        "    while h[curr_loc] != depot:\n",
        "        route.append(h[curr_loc])\n",
        "        curr_loc = h[curr_loc]\n",
        "    return route\n",
        "\n",
        "# Build a dict for all truck routes including the depots. We will use this later.\n",
        "truck_routes = {}\n",
        "\n",
        "# Build Itinerary Table\n",
        "itinerary_list = []\n",
        "for t in truck_labels:\n",
        "    if t in path:\n",
        "        depot = path[t]['depot']\n",
        "        route = build_truck_route(t)\n",
        "        truck_routes[t] = [depot] + route + [depot]\n",
        "        stop_num = 1\n",
        "        for stop in route:\n",
        "            # Check if the customer 'stop' has an entry in the 'order' dictionary for truck 't'\n",
        "            if stop in order[t]:\n",
        "                delivery = str(order[t][stop]).replace('[', '').replace(']', '').replace(\"'\", '')\n",
        "            else:\n",
        "                # Handle the case where the customer 'stop' does not have an entry in 'order[t]'\n",
        "                delivery = \"No delivery\"\n",
        "            itinerary_list.append({'Truck': t, 'Stop Number': str(stop_num),\n",
        "                                   'Customer': stop, 'Delivery (Product, Quantity)': delivery})\n",
        "            stop_num += 1\n",
        "\n",
        "# Create a data frame to hold the truck itineraries and show it\n",
        "itinerary_df = pd.DataFrame(itinerary_list)\n",
        "itinerary_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "d0dv-9CJBEC4",
        "outputId": "efd90f44-aeb5-44db-91df-ac15b0801cbe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Truck Stop Number Customer Delivery (Product, Quantity)\n",
              "0     T1           1       C1         (P2, 1.0), (P3, 1.0)\n",
              "1     T1           2       C2                  No delivery\n",
              "2     T1           3       C6         (P2, 2.0), (P3, 1.0)\n",
              "3     T1           4       C4                  No delivery\n",
              "4     T1           5       C3                  No delivery\n",
              "5     T2           1       C4                  No delivery\n",
              "6     T2           2       C2                  No delivery\n",
              "7     T2           3       C6                  No delivery\n",
              "8     T2           4       C3                  No delivery\n",
              "9     T2           5       C5                    (P1, 2.0)\n",
              "10    T2           6       C7                    (P3, 1.0)\n",
              "11    T4           1       C8         (P1, 1.0), (P2, 1.0)\n",
              "12    T4           2       C7                    (P2, 1.0)\n",
              "13    T4           3       C4                    (P4, 2.0)\n",
              "14    T4           4       C3                    (P1, 1.0)\n",
              "15    T4           5       C2                    (P4, 1.0)"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0a08ec21-3e51-4f10-bc57-35528aed5648\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Truck</th>\n",
              "      <th>Stop Number</th>\n",
              "      <th>Customer</th>\n",
              "      <th>Delivery (Product, Quantity)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>T1</td>\n",
              "      <td>1</td>\n",
              "      <td>C1</td>\n",
              "      <td>(P2, 1.0), (P3, 1.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>T1</td>\n",
              "      <td>2</td>\n",
              "      <td>C2</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>T1</td>\n",
              "      <td>3</td>\n",
              "      <td>C6</td>\n",
              "      <td>(P2, 2.0), (P3, 1.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>T1</td>\n",
              "      <td>4</td>\n",
              "      <td>C4</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>T1</td>\n",
              "      <td>5</td>\n",
              "      <td>C3</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>T2</td>\n",
              "      <td>1</td>\n",
              "      <td>C4</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>T2</td>\n",
              "      <td>2</td>\n",
              "      <td>C2</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>T2</td>\n",
              "      <td>3</td>\n",
              "      <td>C6</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>T2</td>\n",
              "      <td>4</td>\n",
              "      <td>C3</td>\n",
              "      <td>No delivery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>T2</td>\n",
              "      <td>5</td>\n",
              "      <td>C5</td>\n",
              "      <td>(P1, 2.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>T2</td>\n",
              "      <td>6</td>\n",
              "      <td>C7</td>\n",
              "      <td>(P3, 1.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>T4</td>\n",
              "      <td>1</td>\n",
              "      <td>C8</td>\n",
              "      <td>(P1, 1.0), (P2, 1.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>T4</td>\n",
              "      <td>2</td>\n",
              "      <td>C7</td>\n",
              "      <td>(P2, 1.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>T4</td>\n",
              "      <td>3</td>\n",
              "      <td>C4</td>\n",
              "      <td>(P4, 2.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>T4</td>\n",
              "      <td>4</td>\n",
              "      <td>C3</td>\n",
              "      <td>(P1, 1.0)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>T4</td>\n",
              "      <td>5</td>\n",
              "      <td>C2</td>\n",
              "      <td>(P4, 1.0)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a08ec21-3e51-4f10-bc57-35528aed5648')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0a08ec21-3e51-4f10-bc57-35528aed5648 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0a08ec21-3e51-4f10-bc57-35528aed5648');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4add9f3a-bdad-4694-9752-612afae16a24\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4add9f3a-bdad-4694-9752-612afae16a24')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4add9f3a-bdad-4694-9752-612afae16a24 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Construct a mapping from node labels (depots + customers) to node objects\n",
        "node_dict = {x['nodeName']:x for x in nodesArray}\n",
        "\n",
        "# Specify the truck colors\n",
        "truck_colors = {'T1':'blue', 'T2':'red', 'T3':'black', 'T4':'green'}\n",
        "\n",
        "# Construct an empty data frame to hold the routes\n",
        "assignmentsDF = vrv.initDataframe('assignments')\n",
        "\n",
        "# For each truck, add each one of its stops in order to the assignmentsDF\n",
        "for t in truck_routes:\n",
        "    for i in range(1, len(truck_routes[t])):\n",
        "        start_node = truck_routes[t][i - 1]\n",
        "        end_node = truck_routes[t][i]\n",
        "        shapepointsDF = vrv.getShapepoints2D(\n",
        "                    objectID         = t,\n",
        "                    modelFile        = 'veroviz/models/ub_truck.gltf',\n",
        "                    startLoc         = [node_dict[start_node]['lat'], node_dict[start_node]['lon']],\n",
        "                    endLoc           = [node_dict[end_node]['lat'], node_dict[end_node]['lon']],\n",
        "                    routeType        = 'fastest',\n",
        "                    leafletColor     = truck_colors[t],\n",
        "                    dataProvider     = 'OSRM-online')\n",
        "        assignmentsDF = pd.concat([assignmentsDF, shapepointsDF],\n",
        "                                   ignore_index=True, sort=False)\n",
        "\n",
        "# Construct the leaflet map and view.\n",
        "vrv.createLeaflet(nodes=nodesDF, arcs=assignmentsDF, mapBackground='Arcgis Topo')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ZdGx7xfkBTM5",
        "outputId": "0ae2caf6-02a3-477c-e629-5f16c54e620d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.08963, lon: -1.78095) is 126.6 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1090057, lon: -1.68361) is 37.8 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "<ipython-input-9-41084ef87113>:23: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignmentsDF = pd.concat([assignmentsDF, shapepointsDF],\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1090057, lon: -1.68361) is 37.8 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1196207, lon: -1.6669879) is 13.0 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1196207, lon: -1.6669879) is 13.0 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1208677, lon: -1.6723544) is 16.3 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1208677, lon: -1.6723544) is 16.3 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1174576, lon: -1.7077382) is 15.6 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1174576, lon: -1.7077382) is 15.6 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.122445, lon: -1.6839187) is 12.1 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.122445, lon: -1.6839187) is 12.1 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.08963, lon: -1.78095) is 126.6 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.08963, lon: -1.78095) is 126.6 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1174576, lon: -1.7077382) is 15.6 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1174576, lon: -1.7077382) is 15.6 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1196207, lon: -1.6669879) is 13.0 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1196207, lon: -1.6669879) is 13.0 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1208677, lon: -1.6723544) is 16.3 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1208677, lon: -1.6723544) is 16.3 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.122445, lon: -1.6839187) is 12.1 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.122445, lon: -1.6839187) is 12.1 meters away from the road. You might find a gap between the origin point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The destination point (lat: 48.08963, lon: -1.78095) is 126.6 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The destination point (lat: 48.1195623, lon: -1.602953) is 53.0 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1195623, lon: -1.602953) is 53.0 meters away from the road. You might find a gap between the origin point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The destination point (lat: 48.1174576, lon: -1.7077382) is 15.6 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1174576, lon: -1.7077382) is 15.6 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.122445, lon: -1.6839187) is 12.1 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.122445, lon: -1.6839187) is 12.1 meters away from the road. You might find a gap between the origin point and the route.\n",
            "Message: The destination point (lat: 48.1196207, lon: -1.6669879) is 13.0 meters away from the road. You might find a gap between destination point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Message: The origin point (lat: 48.1196207, lon: -1.6669879) is 13.0 meters away from the road. You might find a gap between the origin point and the route.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_getShapepoints.py:138: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  assignments = assignments.append({\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:48: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n",
            "/usr/local/lib/python3.10/dist-packages/veroviz/_deconstructAssignments.py:59: FutureWarning: In a future version, object-dtype columns with all-bool values will not be included in reductions with bool_only=True. Explicitly cast to bool dtype instead.\n",
            "  tmpSubAssignment = pd.concat([tmpSubAssignment, collection.loc[i: i, :].copy()], ignore_index= True, sort=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<folium.folium.Map at 0x7e1ab44fddb0>"
            ],
            "text/html": [
              "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
              "&lt;html&gt;\n",
              "&lt;head&gt;\n",
              "    \n",
              "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
              "    \n",
              "        &lt;script&gt;\n",
              "            L_NO_TOUCH = false;\n",
              "            L_DISABLE_3D = false;\n",
              "        &lt;/script&gt;\n",
              "    \n",
              "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
              "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
              "    \n",
              "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
              "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
              "            &lt;style&gt;\n",
              "                #map_40f5a78893ed8ed0521268bf60f71f27 {\n",
              "                    position: relative;\n",
              "                    width: 100.0%;\n",
              "                    height: 100.0%;\n",
              "                    left: 0.0%;\n",
              "                    top: 0.0%;\n",
              "                }\n",
              "                .leaflet-container { font-size: 1rem; }\n",
              "            &lt;/style&gt;\n",
              "        \n",
              "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/leaflet-dvf/0.3.0/leaflet-dvf.markers.min.js&quot;&gt;&lt;/script&gt;\n",
              "&lt;/head&gt;\n",
              "&lt;body&gt;\n",
              "    \n",
              "    \n",
              "            &lt;div class=&quot;folium-map&quot; id=&quot;map_40f5a78893ed8ed0521268bf60f71f27&quot; &gt;&lt;/div&gt;\n",
              "        \n",
              "&lt;/body&gt;\n",
              "&lt;script&gt;\n",
              "    \n",
              "    \n",
              "            var map_40f5a78893ed8ed0521268bf60f71f27 = L.map(\n",
              "                &quot;map_40f5a78893ed8ed0521268bf60f71f27&quot;,\n",
              "                {\n",
              "                    center: [48.10505, -1.6637415],\n",
              "                    crs: L.CRS.EPSG3857,\n",
              "                    zoom: 3,\n",
              "                    zoomControl: true,\n",
              "                    preferCanvas: false,\n",
              "                }\n",
              "            );\n",
              "\n",
              "            \n",
              "\n",
              "        \n",
              "    \n",
              "            var tile_layer_af148527237db18bf051dd4656c388c9 = L.tileLayer(\n",
              "                &quot;https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}&quot;,\n",
              "                {&quot;attribution&quot;: &quot;Tiles \\u0026copy; Esri \\u0026mdash; Source: Esri&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            map_40f5a78893ed8ed0521268bf60f71f27.fitBounds(\n",
              "                [[48.067399, -1.52293], [48.142700999999995, -1.804553]],\n",
              "                {}\n",
              "            );\n",
              "        \n",
              "    \n",
              "            var poly_line_15303810cda03e64c1c972e04aded7b0 = L.polyline(\n",
              "                [[48.088766, -1.779844], [48.082481, -1.789176]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_489bbf82e69a795fc496a7d73c4adc23 = new L.RegularPolygonMarker(\n",
              "                [48.0856235, -1.78451],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.76985964024388, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_325807d5d745f02359835e12bb95d94e = L.polyline(\n",
              "                [[48.109346, -1.683611], [48.109349, -1.681997]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_59ae9fac2a4d8e76fe2ffbca46b62164 = new L.RegularPolygonMarker(\n",
              "                [48.1093475, -1.682804],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.16009705331408952, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eb1abddb80ddd436a2564acb257a0cd7 = L.polyline(\n",
              "                [[48.119523, -1.666892], [48.119286, -1.667432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_232c829668e79ed05f3fbf4f6f3c40ed = new L.RegularPolygonMarker(\n",
              "                [48.1194045, -1.667162],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.67799280013247, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c0e2321285ba8c74c226470d11c8efc2 = L.polyline(\n",
              "                [[48.12075, -1.672223], [48.120865, -1.67181]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f4b5f3d475b38c1a42e2069af5c7da9f = new L.RegularPolygonMarker(\n",
              "                [48.1208075, -1.6720165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -22.641914058888574, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_475293cf0aa9df8b7f19dfa0571ef706 = L.polyline(\n",
              "                [[48.117461, -1.707947], [48.117312, -1.707957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_26c829571b12884ec41727af37b84f76 = new L.RegularPolygonMarker(\n",
              "                [48.117386499999995, -1.7079520000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 92.56547203125885, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_05ddaa7bedd075e8ffb3129700a0dc72 = L.polyline(\n",
              "                [[48.122377, -1.684046], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_83247c51575a50896fbd479b21712f27 = new L.RegularPolygonMarker(\n",
              "                [48.122499000000005, -1.6841255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.49123695744242, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4cfb373772e40ad98fd4e6f1fabf5d81 = L.polyline(\n",
              "                [[48.117312, -1.707957], [48.117027, -1.707985]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e55883b6993e1c3d01d46f7dd7dff80e = new L.RegularPolygonMarker(\n",
              "                [48.1171695, -1.7079710000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 93.75264847739328, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e60d74547ab454c448d34c7fafa58a65 = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.123517, -1.68462]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8fe89a78f50b753aacb6da67f3126ff7 = new L.RegularPolygonMarker(\n",
              "                [48.123069, -1.6844125],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 252.81954258733236, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b40171b5fe3626aefec063c1a7e9e653 = L.polyline(\n",
              "                [[48.120865, -1.67181], [48.120663, -1.672035]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a141ec7719f815effc6d427f20806ec0 = new L.RegularPolygonMarker(\n",
              "                [48.120764, -1.6719225],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 126.63355757507415, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_312aa72bdaff09fd717c1044ffd0b044 = L.polyline(\n",
              "                [[48.117027, -1.707985], [48.116895, -1.707995]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cd322ce684099fbecc57989d2aac7bca = new L.RegularPolygonMarker(\n",
              "                [48.116961, -1.7079900000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 92.89536699554003, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c5ca80fce02534497a39b8855beef89f = L.polyline(\n",
              "                [[48.120663, -1.672035], [48.119717, -1.672162]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9345b44c9a4ee3cb9a141b4dd813dc12 = new L.RegularPolygonMarker(\n",
              "                [48.12019, -1.6720985],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 95.12126769163947, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f1c5ba7dbb9fc38a4caee7b03c9c790c = L.polyline(\n",
              "                [[48.116895, -1.707995], [48.116333, -1.708121]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_905ed1aab99b1d2a9a1568bd8e91a231 = new L.RegularPolygonMarker(\n",
              "                [48.116614, -1.7080579999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 98.51283502619594, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cac1cbafe8362cf19280bdccde6672f2 = L.polyline(\n",
              "                [[48.119286, -1.667432], [48.120433, -1.668164]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d13b57697ff3c56ac56a1045df36e282 = new L.RegularPolygonMarker(\n",
              "                [48.119859500000004, -1.667798],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.92446878725946, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_732274a8ce257eb607abde471c773096 = L.polyline(\n",
              "                [[48.123517, -1.68462], [48.124109, -1.684868]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_25a5e794db871b006bf667530a62c009 = new L.RegularPolygonMarker(\n",
              "                [48.123813, -1.684744],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 254.3770767990033, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f2910201e9ebfb0bef47692f9d56ee6c = L.polyline(\n",
              "                [[48.116333, -1.708121], [48.116205, -1.708064]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7f8618f4e2c9e5d275b90459089fbd9d = new L.RegularPolygonMarker(\n",
              "                [48.116269, -1.7080925],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 73.44276207086133, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_acd308da2d8cfc1aeed8c69397f607fd = L.polyline(\n",
              "                [[48.124109, -1.684868], [48.124177, -1.684902]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_da81531ec2b46953763e0f5455a6bf1c = new L.RegularPolygonMarker(\n",
              "                [48.124143000000004, -1.684885],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 251.5430944089391, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_01c54ea0349b2120a85a8e191b4985f9 = L.polyline(\n",
              "                [[48.116205, -1.708064], [48.115764, -1.705571]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3ad0b9c77b30fdc377b14ebcae6caba3 = new L.RegularPolygonMarker(\n",
              "                [48.115984499999996, -1.7068175],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 14.83927133572466, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2e87531f116cc9e86b83b5aac37152fa = L.polyline(\n",
              "                [[48.124177, -1.684902], [48.124729, -1.68515]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1481021fba3835f113ec68c9fea3ac33 = new L.RegularPolygonMarker(\n",
              "                [48.124453, -1.685026],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 253.30621151933667, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4c61a56e1d13216e61d53fdde2e1f825 = L.polyline(\n",
              "                [[48.119717, -1.672162], [48.11817, -1.672344]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6af1e7ed0d129a965db223c2c915ed10 = new L.RegularPolygonMarker(\n",
              "                [48.1189435, -1.672253],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.49083563469213, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_58acf93272a163248cdcfb1fbffba5e4 = L.polyline(\n",
              "                [[48.109349, -1.681997], [48.108583, -1.681972]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2b3f59702429ae6b8f4fa07bfb127ab5 = new L.RegularPolygonMarker(\n",
              "                [48.108966, -1.6819845],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 88.75158147738921, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_acbf50fd897ed19b5636934b9431f835 = L.polyline(\n",
              "                [[48.124729, -1.68515], [48.125725, -1.685583]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a58f698dcdc37fd080a2fbb6243472d1 = new L.RegularPolygonMarker(\n",
              "                [48.125227, -1.6853665],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 253.8179436364884, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4013ef56c2ffab6a918af102515fa74c = L.polyline(\n",
              "                [[48.120433, -1.668164], [48.122435, -1.669444]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2bd293f1d0ba74adc44c14d4a635f251 = new L.RegularPolygonMarker(\n",
              "                [48.121434, -1.668804],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.8873092841688, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_aa7c4733d96d83bcfcb2b241175c1fce = L.polyline(\n",
              "                [[48.125725, -1.685583], [48.125997, -1.685723]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3d20282bac353bbff0e430bf5e58dd17 = L.polyline(\n",
              "                [[48.125997, -1.685723], [48.127089, -1.68642]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_af7f796e575e01f33340eb507e319948 = new L.RegularPolygonMarker(\n",
              "                [48.126410722809425, -1.6859870703279956],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.92417182765797, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_02a80f95a83ee9b4fd229a7864d10820 = L.polyline(\n",
              "                [[48.108583, -1.681972], [48.107941, -1.681971]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e91d64e3fa8962fe93c370af1ceeb44f = new L.RegularPolygonMarker(\n",
              "                [48.108261999999996, -1.6819715],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 89.9404080029488, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_471c421861a677a2fdc4bd5a41e297e7 = L.polyline(\n",
              "                [[48.11817, -1.672344], [48.117989, -1.67313]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2b2d5c27d443bd0c9536b3b0486734ec = new L.RegularPolygonMarker(\n",
              "                [48.1180795, -1.6727370000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 160.9690253139392, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ba7cd1d26bde81247d93d98588331b2d = L.polyline(\n",
              "                [[48.115764, -1.705571], [48.115672, -1.705086]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_95756d7e6d73b672cc4a2e9663a46329 = L.polyline(\n",
              "                [[48.115672, -1.705086], [48.115202, -1.702755]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_04cf94b9b0de2d56f48aa75578890773 = new L.RegularPolygonMarker(\n",
              "                [48.11548566096496, -1.7041618376794057],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 16.803868369814467, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b73d2afaf8319545d56378a38bf37e0c = L.polyline(\n",
              "                [[48.127089, -1.68642], [48.127141, -1.686446]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_80fcc33c14343d1d4535a999aa15f943 = new L.RegularPolygonMarker(\n",
              "                [48.127115, -1.686433],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 251.54408702029497, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d2c3f2a813f4ea858a366fe5f652dd1d = L.polyline(\n",
              "                [[48.117989, -1.67313], [48.117925, -1.673537]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dab1d4e2f645be4bd05491ef8697a7a9 = new L.RegularPolygonMarker(\n",
              "                [48.117957000000004, -1.6733335],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 166.74613453412326, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_356247abc9b9a2c5c48eac6280097b79 = L.polyline(\n",
              "                [[48.127141, -1.686446], [48.127217, -1.686489]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8c39762d67517b04bf0c130a08f3c187 = L.polyline(\n",
              "                [[48.127217, -1.686489], [48.127196, -1.686637]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4ed02fa880bb901ba34f7065b433a6a4 = new L.RegularPolygonMarker(\n",
              "                [48.127214925083294, -1.6865036232225241],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.9988362988289, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a24879b4fd857d174c31a8eac98d2fd4 = L.polyline(\n",
              "                [[48.107941, -1.681971], [48.107894, -1.681997]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0698cbaf28519402e655b75df449ee73 = new L.RegularPolygonMarker(\n",
              "                [48.1079175, -1.681984],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 110.27335148471872, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_43f13149a1574f3df554784bef62d71f = L.polyline(\n",
              "                [[48.127196, -1.686637], [48.12714, -1.687021]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ce9c89842cadac438dd0fbb65eccb84e = new L.RegularPolygonMarker(\n",
              "                [48.127168, -1.686829],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.6756231893525, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5696331670b5525afb7c91f75ac5430c = L.polyline(\n",
              "                [[48.107894, -1.681997], [48.107407, -1.680312]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f99d119f89fc37a2228fe1540582bf25 = new L.RegularPolygonMarker(\n",
              "                [48.107650500000005, -1.6811544999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 23.404202534074997, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1991c9d044be26fc2bd9c4c626bcaae5 = L.polyline(\n",
              "                [[48.117925, -1.673537], [48.117934, -1.674027]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e1459f2e10d2b7c18d962cef61c213ab = new L.RegularPolygonMarker(\n",
              "                [48.1179295, -1.673782],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 181.5761360848278, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_28eed1f3a4c7de62b42a91d56dd93a15 = L.polyline(\n",
              "                [[48.12714, -1.687021], [48.126265, -1.692885]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3cc5b97f2af7843f53e6e9d73382f4fe = new L.RegularPolygonMarker(\n",
              "                [48.12670249999999, -1.689953],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.40096968802783, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_db45109d760c7d4a4b84ef184192bdf2 = L.polyline(\n",
              "                [[48.117934, -1.674027], [48.118, -1.675493]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_01e5e08ec81272273b35bef3ef21e198 = new L.RegularPolygonMarker(\n",
              "                [48.117967, -1.67476],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 183.8585241593214, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fad71d75900184e020f68f6fea27cd62 = L.polyline(\n",
              "                [[48.115202, -1.702755], [48.114677, -1.700999]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c7df6b1c0d21dc7773e8052296086a6d = new L.RegularPolygonMarker(\n",
              "                [48.1149395, -1.701877],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 24.122641980004374, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6c82e29ed0ff5745e1b9372eed8b6e74 = L.polyline(\n",
              "                [[48.118, -1.675493], [48.118222, -1.676312]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b6420f72c43414a4f25d42dcbd37d9a2 = new L.RegularPolygonMarker(\n",
              "                [48.118111, -1.6759024999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 202.09876795714797, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7e2a5548428f692a6da08d14571a7e1b = L.polyline(\n",
              "                [[48.122435, -1.669444], [48.121257, -1.671224]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8f391daee0516bce51f905be1c3a9572 = new L.RegularPolygonMarker(\n",
              "                [48.121846000000005, -1.670334],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 135.2485315738096, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_48308f4f231f56c1fdf73522de623cf3 = L.polyline(\n",
              "                [[48.107407, -1.680312], [48.10741, -1.679105]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2fca54e8200aab3d68679ce38bb2a6f8 = new L.RegularPolygonMarker(\n",
              "                [48.107408500000005, -1.6797085],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.21371917097894766, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_654b2975ddcf127ffe9965610b58caf3 = L.polyline(\n",
              "                [[48.082481, -1.789176], [48.08083, -1.791984]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_48ac1eb36a55a1a20ecf9b46a5a4c49f = new L.RegularPolygonMarker(\n",
              "                [48.0816555, -1.79058],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 138.65033699876903, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3729a7a3dd1d3efa6d52b4ab9af7c5c5 = L.polyline(\n",
              "                [[48.118222, -1.676312], [48.118406, -1.676532]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e91c90c46eee0fe1160bbbb77d01247a = L.polyline(\n",
              "                [[48.118406, -1.676532], [48.118845, -1.677347]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ae2a1412f2b9ed5e847e8908c44436f2 = new L.RegularPolygonMarker(\n",
              "                [48.1185516297552, -1.6768023604794824],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 218.89888068648622, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_46b5b71641ae2d166793dcab6d757d40 = L.polyline(\n",
              "                [[48.114677, -1.700999], [48.114585, -1.700692]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_170fd55e998f6de181af863e0473d6c0 = new L.RegularPolygonMarker(\n",
              "                [48.114631, -1.7008455],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 24.17302357715603, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6a893079a4ce94ffd023132afea80bb9 = L.polyline(\n",
              "                [[48.118845, -1.677347], [48.119785, -1.680226]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1dbcfc48bb26e1ab518b50748ac8ca5b = new L.RegularPolygonMarker(\n",
              "                [48.119315, -1.6787865],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 206.06350423206732, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_84e7cd69482d4074cfd85a9d66f30b6b = L.polyline(\n",
              "                [[48.114585, -1.700692], [48.114481, -1.699927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a9c2b3b100a680455fb269d9b5736b7b = new L.RegularPolygonMarker(\n",
              "                [48.114532999999994, -1.7003095],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 11.509114102347553, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5e814d9f9f44adff329390740f6c7aaf = L.polyline(\n",
              "                [[48.126265, -1.692885], [48.126238, -1.693065]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1d568dcced8099938aa5d9ded481c2cc = new L.RegularPolygonMarker(\n",
              "                [48.126251499999995, -1.6929750000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.33484644972725, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ecd805c6dd42952cf310aff2ba07fa9e = L.polyline(\n",
              "                [[48.10741, -1.679105], [48.107413, -1.678464]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_281a281d955bf32400297e7cfb876f4a = new L.RegularPolygonMarker(\n",
              "                [48.1074115, -1.6787845],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.4018201545266322, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b3bab6bd8b1ad79471e7724bcb4ade03 = L.polyline(\n",
              "                [[48.126238, -1.693065], [48.125105, -1.700201]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b4692bb97d0b3b66a878d7792bf9b528 = new L.RegularPolygonMarker(\n",
              "                [48.125671499999996, -1.696633],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 166.62282461858211, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9dfc47c9dfba446cd01fff1d1a42bf7b = L.polyline(\n",
              "                [[48.114481, -1.699927], [48.114787, -1.699668]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7dd7e5e35683b8c8ab547d6c1d3c82b4 = new L.RegularPolygonMarker(\n",
              "                [48.114633999999995, -1.6997974999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -60.529477069896956, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dba739042493147d9a2be9e86b998e17 = L.polyline(\n",
              "                [[48.08083, -1.791984], [48.080389, -1.793711]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6e4d0acf03bd84abf84d6e6de719427e = new L.RegularPolygonMarker(\n",
              "                [48.080609499999994, -1.7928475000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 159.08272033055295, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6cc3f253a10cff17c9dea78f1cbb1606 = L.polyline(\n",
              "                [[48.107413, -1.678464], [48.10739, -1.677785]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_711ab5f7fe58e0103fe0ea081f51fc95 = new L.RegularPolygonMarker(\n",
              "                [48.1074015, -1.6781245],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.903793477112629, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c5f2553a47e6a14935f302f4f319e676 = L.polyline(\n",
              "                [[48.114787, -1.699668], [48.118157, -1.69263]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ac4ec9e3e9265f1204912717d2972bbb = new L.RegularPolygonMarker(\n",
              "                [48.116472, -1.6961490000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -35.65145830913803, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a973c8ee5bbbff6980799ad512ba7895 = L.polyline(\n",
              "                [[48.121257, -1.671224], [48.120865, -1.67181]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9775611bf1971bf1f6e27ec7555a81ca = new L.RegularPolygonMarker(\n",
              "                [48.121061, -1.6715170000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.94092615092077, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_00b3b5fb1c8f953f6d8509d7acb6d91e = L.polyline(\n",
              "                [[48.080389, -1.793711], [48.080674, -1.793978]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_97293dc563bbcae545412bdd0c960a37 = new L.RegularPolygonMarker(\n",
              "                [48.0805315, -1.7938445],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 237.95803856130493, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_65ad35dbbb5f0a4c09bc0562cfba1ded = L.polyline(\n",
              "                [[48.10739, -1.677785], [48.107391, -1.677666]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a2e8f5458a1779b920e520e810dfd65f = L.polyline(\n",
              "                [[48.107391, -1.677666], [48.107423, -1.67606]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9409603fa0b31d9feb3f76d4598d43b0 = new L.RegularPolygonMarker(\n",
              "                [48.10740581487649, -1.6769224783860681],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.70979904273824, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_90605b17cb98207eb439586e08a5507b = L.polyline(\n",
              "                [[48.080674, -1.793978], [48.080662, -1.7944]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_070a5ffb93b5b479b606d2007b4b5f03 = L.polyline(\n",
              "                [[48.080662, -1.7944], [48.08022, -1.794553]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5f7bd2ebb31787dfae9d2c613f81bc97 = new L.RegularPolygonMarker(\n",
              "                [48.08057885691738, -1.794428780297831],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 103.02140870784754, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_67a92c5ca6def5ccdf5d69b97ec2cce2 = L.polyline(\n",
              "                [[48.120865, -1.67181], [48.12075, -1.672223]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4f34cb68724b9b79a5317f73ceecb042 = new L.RegularPolygonMarker(\n",
              "                [48.1208075, -1.6720165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 157.35839344108865, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_de198c94c6930d34f0d8e7b4b888d243 = L.polyline(\n",
              "                [[48.08022, -1.794553], [48.080102, -1.794319]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7e88eefed5ea846ca9c28e8ddbb1f47b = new L.RegularPolygonMarker(\n",
              "                [48.080161, -1.7944360000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 37.04536304927491, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e4b332a42b36c82457435c2f6c210446 = L.polyline(\n",
              "                [[48.119785, -1.680226], [48.119884, -1.680631]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_989d0ba15536f510cc2b06f939051b44 = new L.RegularPolygonMarker(\n",
              "                [48.119834499999996, -1.6804285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 200.11125682994657, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e62d62bb55d2e3343bf269ec7b637792 = L.polyline(\n",
              "                [[48.080102, -1.794319], [48.07968, -1.794047]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_481e35742f14cb507354601d31734313 = new L.RegularPolygonMarker(\n",
              "                [48.079891, -1.7941829999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 66.70223689254746, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4d6b7093e808f0affd049e4e599d84c6 = L.polyline(\n",
              "                [[48.119884, -1.680631], [48.119964, -1.680667]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_facda750ee6ad6f48fc6fa79046e0a03 = L.polyline(\n",
              "                [[48.119964, -1.680667], [48.120054, -1.680831]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e738c01f246ebd1a552f2283acfd5298 = new L.RegularPolygonMarker(\n",
              "                [48.1199825183724, -1.680700744589704],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 219.42210055691152, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f58bdb217d2d85bd5f0f8f68d002b96d = L.polyline(\n",
              "                [[48.07968, -1.794047], [48.07843, -1.793683]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_481e66b11a858e3bd0f22a6a4d0629a2 = new L.RegularPolygonMarker(\n",
              "                [48.079055, -1.7938649999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 78.9903825762506, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8fe35ad9162210dd72b2524fb9196029 = L.polyline(\n",
              "                [[48.120054, -1.680831], [48.120664, -1.681778]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5641e24028d8af3c2bcd198cdc914ba7 = new L.RegularPolygonMarker(\n",
              "                [48.120359, -1.6813045],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 223.97709085568727, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_10160dbddfbfc158a7f7d3248438ce03 = L.polyline(\n",
              "                [[48.107423, -1.67606], [48.107429, -1.675578]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_865be43a3f29d2d9f547bbec3f81a43d = new L.RegularPolygonMarker(\n",
              "                [48.107426000000004, -1.6758190000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.068180494664034, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_10ec696782190258b330082f4a77e89a = L.polyline(\n",
              "                [[48.07843, -1.793683], [48.078038, -1.793711]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7ed9f9683169ee6fe8f49c953c2505e7 = new L.RegularPolygonMarker(\n",
              "                [48.078233999999995, -1.7936969999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 92.73223642823581, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_926b0146680d9384458d18417f87be10 = L.polyline(\n",
              "                [[48.120664, -1.681778], [48.120742, -1.681908]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f27418341ca5f8ae8df0062e8205d0bd = new L.RegularPolygonMarker(\n",
              "                [48.120703, -1.681843],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 221.94896090350045, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6ca6cb8f59dcc268a64b6118a2836e2d = L.polyline(\n",
              "                [[48.078038, -1.793711], [48.077749, -1.793922]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3d1d5b4f5b6f2631b57f3cb845258c84 = new L.RegularPolygonMarker(\n",
              "                [48.0778935, -1.7938165000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 116.00304697668733, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0cf507907a8ceb491df18d10a08a300a = L.polyline(\n",
              "                [[48.120742, -1.681908], [48.121162, -1.682564]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7e642954239303b8d1d734329445b14d = new L.RegularPolygonMarker(\n",
              "                [48.120952, -1.682236],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 223.80366721821213, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fca944e2d4c9214ef1691caa9cbad240 = L.polyline(\n",
              "                [[48.107429, -1.675578], [48.107431, -1.675428]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c083c3660948423fc7f72603d9280c27 = new L.RegularPolygonMarker(\n",
              "                [48.10743, -1.675503],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.1439842452308682, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d5bca64f0bcac7bbc2dca5eba59cb60e = L.polyline(\n",
              "                [[48.125105, -1.700201], [48.124841, -1.701938]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5c226fcffcc400447f8bdd6107198e76 = new L.RegularPolygonMarker(\n",
              "                [48.124973, -1.7010695],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.17354538596624, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1c74de83faee91304c64996502f184ac = L.polyline(\n",
              "                [[48.077749, -1.793922], [48.077635, -1.793891]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_219ee8ac5f3c269c4804dc572b0b9cfb = L.polyline(\n",
              "                [[48.077635, -1.793891], [48.077421, -1.793574]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b23b089050b810d415e4c9ae477ae09 = new L.RegularPolygonMarker(\n",
              "                [48.077569119141614, -1.7937934101303352],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 45.29652824916252, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a699a19162b2fe4f9df0e265a9efcbe9 = L.polyline(\n",
              "                [[48.107431, -1.675428], [48.107442, -1.674532]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_116a90eb72ab13dd76558cf7cbc729c2 = new L.RegularPolygonMarker(\n",
              "                [48.1074365, -1.67498],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.0536372260595783, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eb7abb14d0b10b6108404ebe70424c4b = L.polyline(\n",
              "                [[48.077421, -1.793574], [48.077399, -1.793401]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bcb6b6e21e229c539279e8a345486371 = L.polyline(\n",
              "                [[48.077399, -1.793401], [48.077536, -1.79297]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_77c9a0c1dd845c95ab3cda3ac19fcf34 = new L.RegularPolygonMarker(\n",
              "                [48.07744221425212, -1.7932650485936936],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -25.443269096333594, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1e87189c59d210e9686bf6b761724fe4 = L.polyline(\n",
              "                [[48.121162, -1.682564], [48.121527, -1.683112]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f53d39f279d3f3043bffb3f90530e05b = new L.RegularPolygonMarker(\n",
              "                [48.1213445, -1.6828379999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 224.935895798608, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ec75c36604827880ad5182b43e728a9a = L.polyline(\n",
              "                [[48.077536, -1.79297], [48.077814, -1.792865]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_463005258affb0f5ddd5a6abc773c0d6 = L.polyline(\n",
              "                [[48.077814, -1.792865], [48.078018, -1.793031]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_909f1a51a52c0d690dd8e48b7a5010e1 = new L.RegularPolygonMarker(\n",
              "                [48.07778762779932, -1.7928749607232775],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -75.83722537630426, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1d044ab3d84bc54be23795031a91a9b6 = L.polyline(\n",
              "                [[48.124841, -1.701938], [48.124708, -1.703008]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dbda67e1cbc1a489a5a0f002ba90444e = new L.RegularPolygonMarker(\n",
              "                [48.1247745, -1.702473],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 169.45200294364696, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_287572b7040fa36c522e5f8207d32cf9 = L.polyline(\n",
              "                [[48.078018, -1.793031], [48.082416, -1.789078]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b3f30c31b2116d96b550381bbfb58cb9 = new L.RegularPolygonMarker(\n",
              "                [48.080217000000005, -1.7910545],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -59.01704830703278, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1ae1f3248eac476c3b8f276c94af180e = L.polyline(\n",
              "                [[48.121527, -1.683112], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_05066012cb5d3b815343b8419f80c353 = new L.RegularPolygonMarker(\n",
              "                [48.122074, -1.6836585],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 236.2996746411274, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2f877c332825fc7e0084f13ca730801a = L.polyline(\n",
              "                [[48.107442, -1.674532], [48.107456, -1.673348]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4d0bfd81d7cf75a11dab7da9d2406f8a = new L.RegularPolygonMarker(\n",
              "                [48.107449, -1.67394],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.0149333866418857, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4f0ed1e7fbc6a9b664d7bc28aa7ccf41 = L.polyline(\n",
              "                [[48.124708, -1.703008], [48.124703, -1.703115]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_03764352ee4f4af890e732da614f5f13 = L.polyline(\n",
              "                [[48.124703, -1.703115], [48.124692, -1.703365]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5728f982945a0305bfe41b39ca7d0ce1 = L.polyline(\n",
              "                [[48.124692, -1.703365], [48.12456, -1.709275]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6751f493f616d4a98acf64d13ed1a5cf = new L.RegularPolygonMarker(\n",
              "                [48.12462999350425, -1.7061411999233715],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 178.08579382334773, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_279fd6b5e36e2a0177645f45f662049e = L.polyline(\n",
              "                [[48.107456, -1.673348], [48.107792, -1.673442]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bd5fdfcf9688d40ab7f630307006f185 = new L.RegularPolygonMarker(\n",
              "                [48.107624, -1.6733950000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 259.41877530732546, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8faa97ea921b7955fff07571da1909b8 = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.122655, -1.685427]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6387fd9452c2be572e39780fdebb7b96 = new L.RegularPolygonMarker(\n",
              "                [48.122638, -1.684816],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 182.38718208340993, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f1796ab3d7ed33c3626286b3d220b932 = L.polyline(\n",
              "                [[48.107792, -1.673442], [48.107919, -1.673476]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3e2feff5983a793bd1d307a27eedc9f2 = L.polyline(\n",
              "                [[48.107919, -1.673476], [48.108706, -1.673736]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8a44a43208fe7dbd33348c84dd7f8296 = new L.RegularPolygonMarker(\n",
              "                [48.108249510769205, -1.6735851903430667],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 257.56015671695064, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e107e2f7ab27ecde645163b3ff848d81 = L.polyline(\n",
              "                [[48.122655, -1.685427], [48.122721, -1.68676]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6a621b336fec240b4ebc0c1c7302ae8f = new L.RegularPolygonMarker(\n",
              "                [48.122688, -1.6860935000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 184.24245121796548, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_692a39a13ee1d67bea507ff35d3261d7 = L.polyline(\n",
              "                [[48.118157, -1.69263], [48.11973, -1.69028]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_afa4feb9a833613642fc7e5579a16716 = new L.RegularPolygonMarker(\n",
              "                [48.1189435, -1.691455],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -45.076955219134724, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ccb0f4a1caa394aecbc8c4dc4961f577 = L.polyline(\n",
              "                [[48.122721, -1.68676], [48.122733, -1.687115]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_089a7cf0e9e1510dd157e58316866083 = new L.RegularPolygonMarker(\n",
              "                [48.122727, -1.6869375],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 182.89900533086495, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1f9ea1c49a93452a3fc31a67b0e5ac4c = L.polyline(\n",
              "                [[48.108706, -1.673736], [48.108892, -1.673785]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8aa5191fe84d936acc4bc0d36f132e1d = new L.RegularPolygonMarker(\n",
              "                [48.108799, -1.6737605],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 260.02350926619636, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b38411b316de3af8717f5cdef0ba00ed = L.polyline(\n",
              "                [[48.122733, -1.687115], [48.122762, -1.687643]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_568ec9e9f0fd62705c979dd96a831412 = new L.RegularPolygonMarker(\n",
              "                [48.1227475, -1.687379],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 184.703837897131, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_79407518bd0a4601865483b0c6692e01 = L.polyline(\n",
              "                [[48.082416, -1.789078], [48.098695, -1.757549]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f7538425f773f961e6cf6beda46373c1 = new L.RegularPolygonMarker(\n",
              "                [48.0905555, -1.7733135],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -37.71515899455727, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6db58b91f290ddc1251a7f7cc1cf6750 = L.polyline(\n",
              "                [[48.12456, -1.709275], [48.124526, -1.709779]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4174f4f4d49a15df4651d903bbb8820a = new L.RegularPolygonMarker(\n",
              "                [48.124543, -1.709527],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 174.22935081426147, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_70fb667a1a8ab51bb1ce9e9959a4131f = L.polyline(\n",
              "                [[48.108892, -1.673785], [48.109379, -1.67392]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_faf5bd36ff8b58224b19b52b6e3ff346 = new L.RegularPolygonMarker(\n",
              "                [48.109135499999994, -1.6738525000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 259.51355698827706, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_32520d8683b3c6a45a51999cc0dc019d = L.polyline(\n",
              "                [[48.122762, -1.687643], [48.122816, -1.688693]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_679596624218e25e946c55df1e49a466 = new L.RegularPolygonMarker(\n",
              "                [48.122789, -1.6881680000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 184.40588932909384, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4f55483a5fb42f1676b42951edcde6db = L.polyline(\n",
              "                [[48.124526, -1.709779], [48.1245, -1.710135]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7b1cc941bfb2b4bc44c005ba6973e6fb = L.polyline(\n",
              "                [[48.1245, -1.710135], [48.124333, -1.712625]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7b2ad5ffcd1448822ca5452e7a3eea21 = new L.RegularPolygonMarker(\n",
              "                [48.12442844914411, -1.7112018361147285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 174.2634169456524, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_edf872c55a610c61c1275d6682311573 = L.polyline(\n",
              "                [[48.109379, -1.67392], [48.109885, -1.673955]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f17085d3e32bb1f182598ea1bbc1d33c = new L.RegularPolygonMarker(\n",
              "                [48.109632, -1.6739375],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 267.3556696324518, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_914ad425553fccfd1866f48996e03a03 = L.polyline(\n",
              "                [[48.122816, -1.688693], [48.120523, -1.689899]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_43b01ebce98cb5974a0d1b0dc1aec266 = new L.RegularPolygonMarker(\n",
              "                [48.121669499999996, -1.6892960000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 109.34649450933418, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bf1ba24704bc48e3b52261401985d710 = L.polyline(\n",
              "                [[48.11973, -1.69028], [48.120523, -1.689899]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_14f37aacec72503893f23a762d31b066 = new L.RegularPolygonMarker(\n",
              "                [48.1201265, -1.6900895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -72.21716517655358, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_49409867e772645f731e99417b23badf = L.polyline(\n",
              "                [[48.109885, -1.673955], [48.109898, -1.672833]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_97ea658c22f26465d4391938246d79c1 = new L.RegularPolygonMarker(\n",
              "                [48.1098915, -1.673394],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.9945530113592582, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f0d84824155dd2c81be674ddc5dea97f = L.polyline(\n",
              "                [[48.124333, -1.712625], [48.123493, -1.7185]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fbe75bc02237810ad8e7ee5229882595 = new L.RegularPolygonMarker(\n",
              "                [48.123913, -1.7155624999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.91249149357913, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b789b58d116e776d01cf4ff0cb4b10c3 = L.polyline(\n",
              "                [[48.120523, -1.689899], [48.122816, -1.688693]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2f02bba9e6fc9b6eec2f771967205498 = new L.RegularPolygonMarker(\n",
              "                [48.121669499999996, -1.6892960000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -70.65440343493117, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c8e422feaefb5c171217a3edbe9bc294 = L.polyline(\n",
              "                [[48.109898, -1.672833], [48.109891, -1.67155]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bbef80a3d70df2a40b62c6256d2f43ea = new L.RegularPolygonMarker(\n",
              "                [48.109894499999996, -1.6721915],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.46768898535692927, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_abaac3eac135d12c2c7a49992c43e29f = L.polyline(\n",
              "                [[48.120523, -1.689899], [48.11973, -1.69028]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5cba5012390880d5ceb6c5d68e81d1b5 = new L.RegularPolygonMarker(\n",
              "                [48.1201265, -1.6900895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 107.78311849553697, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_98beac74927405a952be4853eb995b8f = L.polyline(\n",
              "                [[48.109891, -1.67155], [48.10989, -1.670958]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e3ca9994261029f073c430f24618e596 = new L.RegularPolygonMarker(\n",
              "                [48.1098905, -1.671254],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.14472890257709992, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_87e07a27686d4c164cf41f3d533e134e = L.polyline(\n",
              "                [[48.11973, -1.69028], [48.118157, -1.69263]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_68564fe086fdbf8e467bb9817b3c233a = new L.RegularPolygonMarker(\n",
              "                [48.1189435, -1.691455],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.92479443178146, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_367538bea24faeabcbc9aceab3dbcfc0 = L.polyline(\n",
              "                [[48.122816, -1.688693], [48.122762, -1.687643]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5d0bfd4f3349e326b6209018fb2eb495 = new L.RegularPolygonMarker(\n",
              "                [48.122789, -1.6881680000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 4.405107523144537, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9bc2233b63fc09082bc74a817e2db830 = L.polyline(\n",
              "                [[48.123493, -1.7185], [48.122635, -1.719278]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ddf879d600efe411e54aaaabda96d7d3 = new L.RegularPolygonMarker(\n",
              "                [48.123064, -1.718889],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 121.1864760805924, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2274b27aa46ce8025bc8241af8f4be77 = L.polyline(\n",
              "                [[48.10989, -1.670958], [48.10987, -1.669546]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_29ba33afdf091ebfc1f6ef3afd6d7447 = new L.RegularPolygonMarker(\n",
              "                [48.109880000000004, -1.670252],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 1.2147330034368622, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8f47ff28ab6a1d1f56677a4d3b602b07 = L.polyline(\n",
              "                [[48.122635, -1.719278], [48.121998, -1.719564]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_59d8ce23c27c29197c6023de31828a02 = new L.RegularPolygonMarker(\n",
              "                [48.1223165, -1.719421],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 106.68426355067717, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6c5b1ca7014f1807c574d3beb5e2d7c4 = L.polyline(\n",
              "                [[48.122762, -1.687643], [48.122733, -1.687115]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e851f1fc1f6e4a1b625074191d965ef1 = L.polyline(\n",
              "                [[48.122733, -1.687115], [48.122721, -1.68676]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_869fdd8de3c48cc14f1b4bba6ea553e9 = new L.RegularPolygonMarker(\n",
              "                [48.12273777120571, -1.6872018688488715],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 4.703444760517044, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6eb8f21026b7c3e91791b91141ea9e01 = L.polyline(\n",
              "                [[48.121998, -1.719564], [48.119879, -1.720199]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b15db81efd5ff97e9551eb6a06b53efb = new L.RegularPolygonMarker(\n",
              "                [48.120938499999994, -1.7198815],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 101.31279270024424, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6a3b8757b3946df69e8f73dfa9e4ed35 = L.polyline(\n",
              "                [[48.122721, -1.68676], [48.122655, -1.685427]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ba2ed7432cfa121c0353e248cf076cc7 = new L.RegularPolygonMarker(\n",
              "                [48.122688, -1.6860935000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 4.241458698300434, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9f73b1d86cf75382f01c1a1306c17083 = L.polyline(\n",
              "                [[48.10987, -1.669546], [48.109872, -1.669438]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a5abfb30b60d5344ce0d999af53371de = L.polyline(\n",
              "                [[48.109872, -1.669438], [48.109872, -1.666773]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c427eb961f66f0b13fea581c77278bc3 = new L.RegularPolygonMarker(\n",
              "                [48.109872, -1.6681595206414923],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.0009919484757432429, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_af92089613c849041bb228095ada2d52 = L.polyline(\n",
              "                [[48.118157, -1.69263], [48.114787, -1.699668]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5ca4900e07398d0da0fbb962558b7a95 = new L.RegularPolygonMarker(\n",
              "                [48.116472, -1.6961490000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 144.35378150655959, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_07c9542fd5e24c64f325c2911af8f446 = L.polyline(\n",
              "                [[48.122655, -1.685427], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7771258eb33ca3c1c111d43c3b6ed51a = new L.RegularPolygonMarker(\n",
              "                [48.122638, -1.684816],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.386272212344494, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bf438976d7a2b0a66d5c4dd0f0bf242e = L.polyline(\n",
              "                [[48.119879, -1.720199], [48.116707, -1.719663]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c6de7bede8ad850842a3baed67d2120f = new L.RegularPolygonMarker(\n",
              "                [48.118292999999994, -1.7199309999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 83.56351856296251, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bf1db8f933e1485e00f3f9393ce9ebe0 = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.122377, -1.684046]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f91f2ac37edcf85a97a905f6c9cabfb3 = new L.RegularPolygonMarker(\n",
              "                [48.122499000000005, -1.6841255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 66.49111857052387, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a9ec0c2b51cef112ed1e3c77dad1053c = L.polyline(\n",
              "                [[48.109872, -1.666773], [48.10987, -1.665653]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cd251a14d8fea10b65bc432edf94fe20 = new L.RegularPolygonMarker(\n",
              "                [48.109871, -1.666213],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.15281509215098765, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5c7e1ef6fc9da2f61b79adb193635100 = L.polyline(\n",
              "                [[48.116707, -1.719663], [48.110357, -1.718212]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ff10c8f0f26287b27550383d6cdf9e0c = new L.RegularPolygonMarker(\n",
              "                [48.113532, -1.7189375],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 81.32517592794002, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_91b9aec73cde0cd3c27080247808be35 = L.polyline(\n",
              "                [[48.10987, -1.665653], [48.110276, -1.665655]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_76f66a5d6066c089a9f5f8316c16aa43 = L.polyline(\n",
              "                [[48.110276, -1.665655], [48.110673, -1.665745]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5e9375aa1cb05f3a3e66a2dd98e67e52 = L.polyline(\n",
              "                [[48.110673, -1.665745], [48.111474, -1.665952]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9656145b259b6632c2c74822e705fb74 = new L.RegularPolygonMarker(\n",
              "                [48.11067563874688, -1.665745681923353],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 260.2101602411526, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7feb91032d5c787547c697c2d4782706 = L.polyline(\n",
              "                [[48.114787, -1.699668], [48.114625, -1.700187]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1afaafa47c5c4c9689ac1ceda326814a = new L.RegularPolygonMarker(\n",
              "                [48.114706, -1.6999274999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 154.94295426948688, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_891bc04946f1bc78e310c743f6eb5f76 = L.polyline(\n",
              "                [[48.111474, -1.665952], [48.112069, -1.666121]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0a36f1e28a7dca9132641d8723c65ae2 = new L.RegularPolygonMarker(\n",
              "                [48.1117715, -1.6660365000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 259.2618138261098, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b8fecc7024eb1df0ac7d0f2b515dd4fa = L.polyline(\n",
              "                [[48.114625, -1.700187], [48.114591, -1.700289]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0d4e336d009d3aa09ee8b6b2099d73db = L.polyline(\n",
              "                [[48.114591, -1.700289], [48.114756, -1.700846]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eecdfa643383f4f729014cfa1832287c = L.polyline(\n",
              "                [[48.114756, -1.700846], [48.115311, -1.702733]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_99478aebf49746672358bf637e08d7ad = new L.RegularPolygonMarker(\n",
              "                [48.11493615113234, -1.701458513849964],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.77587870828341, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_43974b1e31a1de2dc98bfdc5a53caeda = L.polyline(\n",
              "                [[48.112069, -1.666121], [48.112488, -1.666225]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_079a14b33e0d3d77ba630f13fd445ff8 = L.polyline(\n",
              "                [[48.112488, -1.666225], [48.115064, -1.66585]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ef44ccbfa4cff8655e9ae17e18ba0dcd = new L.RegularPolygonMarker(\n",
              "                [48.113564627594755, -1.666068270439428],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -84.44880685077577, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3fa103369b80b4d2d02e276877ebbe35 = L.polyline(\n",
              "                [[48.110357, -1.718212], [48.107653, -1.718815]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f3b67a018658842f739cbcb335d83cef = new L.RegularPolygonMarker(\n",
              "                [48.109004999999996, -1.7185135],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 98.46948438825834, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a50b0541e934b7f26e3dbd00aeedcd63 = L.polyline(\n",
              "                [[48.115311, -1.702733], [48.115878, -1.704687]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3c4cc6ee8b2249646b171987b25306fa = L.polyline(\n",
              "                [[48.115878, -1.704687], [48.115996, -1.705154]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c1368ca0809a0f6d28f64c5e741cd7e2 = L.polyline(\n",
              "                [[48.115996, -1.705154], [48.11633, -1.707255]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_facb4ca0f1aebb7391e9f5cdf3fe530d = new L.RegularPolygonMarker(\n",
              "                [48.11594052267209, -1.7049344414225902],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 200.73035750327097, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c36a2df1d15ed0b235ad7b1246603191 = L.polyline(\n",
              "                [[48.107653, -1.718815], [48.107254, -1.71928]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_45f84251ed156d4da6140d9cfbe7a6bb = L.polyline(\n",
              "                [[48.107254, -1.71928], [48.107167, -1.722714]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0cf0a2c959c7031faf7c20d2a1735a36 = new L.RegularPolygonMarker(\n",
              "                [48.107220066423245, -1.7206194011790212],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.82844354928773, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fbbc098614e2f8fe1ff7fd1ebc675a08 = L.polyline(\n",
              "                [[48.098695, -1.757549], [48.101664, -1.75364]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_893409171e2272d193f41b13ea37a594 = new L.RegularPolygonMarker(\n",
              "                [48.100179499999996, -1.7555945],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -48.67730457396776, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_685ea97f8bd16c996aa8a0396640316e = L.polyline(\n",
              "                [[48.11633, -1.707255], [48.116528, -1.707776]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_33a72659349f30c8cd48fafa4182faba = new L.RegularPolygonMarker(\n",
              "                [48.116429, -1.7075155],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 209.65064415565325, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_91997c33857ba0c0de1b90a699e66ea0 = L.polyline(\n",
              "                [[48.115064, -1.66585], [48.116279, -1.666221]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1b0fde0555604a0f8248b6d05998797a = new L.RegularPolygonMarker(\n",
              "                [48.1156715, -1.6660355],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 258.4776889629483, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_099e20c2104eb2b320d5100466b14589 = L.polyline(\n",
              "                [[48.116528, -1.707776], [48.116895, -1.707995]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cee9ece8e2cb396e6120260af0d59c16 = new L.RegularPolygonMarker(\n",
              "                [48.1167115, -1.7078855],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 248.27842065962864, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f992e4e02a45826fab239b69539af508 = L.polyline(\n",
              "                [[48.107167, -1.722714], [48.107134, -1.723906]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6d6c65107dfdb5d1c0896a295dc84f12 = new L.RegularPolygonMarker(\n",
              "                [48.1071505, -1.7233100000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.62631370301807, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_865040d5f1e4022dcebb9de24bba8532 = L.polyline(\n",
              "                [[48.116895, -1.707995], [48.117027, -1.707985]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_29effdaff7ed113ca5c5c937883134d4 = L.polyline(\n",
              "                [[48.117027, -1.707985], [48.117312, -1.707957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d95e98bf667d06bf65a27f7be0632248 = L.polyline(\n",
              "                [[48.117312, -1.707957], [48.117461, -1.707947]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d8bea8b06c5fc1ebfbb20c55d6e562dc = new L.RegularPolygonMarker(\n",
              "                [48.11717797201832, -1.707970167661358],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -86.2473723690003, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7a0e487f9e2086dc76b64f40629a5bfa = L.polyline(\n",
              "                [[48.107134, -1.723906], [48.10703, -1.727083]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_facfbda7be572502aa1e1399023c5391 = new L.RegularPolygonMarker(\n",
              "                [48.107082000000005, -1.7254945],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.1945635568352, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_36043e37b99c8433d46e6472ac0d13cc = L.polyline(\n",
              "                [[48.101664, -1.75364], [48.102804, -1.751852]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_456ca0d6dd03c778ddbc5a356985d909 = new L.RegularPolygonMarker(\n",
              "                [48.102233999999996, -1.7527460000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -43.67450842335439, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f1ffe5dc42928a5bc2bbf086a0d872ef = L.polyline(\n",
              "                [[48.116279, -1.666221], [48.119286, -1.667432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e57794518b42d1622c75cd0707b42ae0 = new L.RegularPolygonMarker(\n",
              "                [48.117782500000004, -1.6668265],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 254.95171152333216, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1576133d82e0880e3a863e5cb8b5159f = L.polyline(\n",
              "                [[48.10703, -1.727083], [48.106817, -1.729587]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3aac30cdba03de06d7bb1b956c3e3289 = new L.RegularPolygonMarker(\n",
              "                [48.1069235, -1.728335],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 172.74111125998422, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e02952e1dee00c078418bf4943eb0d9d = L.polyline(\n",
              "                [[48.102804, -1.751852], [48.104035, -1.750285]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0dcdfd49383d96f6b593c94134385cff = new L.RegularPolygonMarker(\n",
              "                [48.1034195, -1.7510685000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -49.63404700784947, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3b2a9fe8670b7ca1513715f76bc70cea = L.polyline(\n",
              "                [[48.106817, -1.729587], [48.106608, -1.73069]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_898759454fff6815b3c5911ab7c00367 = new L.RegularPolygonMarker(\n",
              "                [48.1067125, -1.7301385],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 164.15828726873247, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_da14ab2ccd05ed2fd0044e8a11cbf812 = L.polyline(\n",
              "                [[48.104035, -1.750285], [48.104263, -1.75]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_041c2257d6bc8a627d5c5105f7681a99 = L.polyline(\n",
              "                [[48.104263, -1.75], [48.104896, -1.744154]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_01135393f080a7b69376e1a3fcdd3b11 = new L.RegularPolygonMarker(\n",
              "                [48.10455577195154, -1.7472961377113754],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -9.212503524019723, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5d10f310b89b36ef84d713e10b9b1db4 = L.polyline(\n",
              "                [[48.106608, -1.73069], [48.106289, -1.732024]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_38cf6a66b0cde80f3adbf7d88fdc202e = L.polyline(\n",
              "                [[48.106289, -1.732024], [48.106032, -1.73284]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6597b78f260e1bdc4f38a66ae232f32f = L.polyline(\n",
              "                [[48.106032, -1.73284], [48.105975, -1.733007]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a6e8a9b91adb551ac42060d63a1d2f2d = L.polyline(\n",
              "                [[48.105975, -1.733007], [48.105409, -1.734611]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_12860e9517f2d95e4ceebf10af97b79e = L.polyline(\n",
              "                [[48.105409, -1.734611], [48.104975, -1.736362]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4a7c54deb17fbdc7629221bf0dcdd074 = new L.RegularPolygonMarker(\n",
              "                [48.10579167175541, -1.733526537993507],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 152.14700211013457, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_341c1381afa6aaee6cbefd61f3b28ffd = L.polyline(\n",
              "                [[48.119286, -1.667432], [48.119523, -1.666892]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_158ffbed64f5ce12489e5524a062d71d = new L.RegularPolygonMarker(\n",
              "                [48.1194045, -1.667162],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -33.322409250197616, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ac645c489ce9014ea448df84bd0f7f6f = L.polyline(\n",
              "                [[48.104896, -1.744154], [48.104867, -1.743028]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ed3cf196a2a51d481f954c0b57a189fb = L.polyline(\n",
              "                [[48.104867, -1.743028], [48.10482, -1.741252]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1bfef2ca001d1c33146c069d8f5f07de = new L.RegularPolygonMarker(\n",
              "                [48.104858398586806, -1.7427029763865],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.268804868221139, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b8e003bda58654b82474097c2607f109 = L.polyline(\n",
              "                [[48.104975, -1.736362], [48.104889, -1.739152]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cf090afeb3b77d4d342fd6c39ff1d044 = new L.RegularPolygonMarker(\n",
              "                [48.104932000000005, -1.737757],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.35812588522094, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_866df8bada977106ef2795020612d363 = L.polyline(\n",
              "                [[48.10482, -1.741252], [48.104802, -1.739857]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c8e528e605ac99c6453482f1df78b274 = L.polyline(\n",
              "                [[48.104802, -1.739857], [48.104798, -1.739748]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_65296568efafd656faa32c52cb926f01 = L.polyline(\n",
              "                [[48.104798, -1.739748], [48.104867, -1.736315]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c189200d4acef21aafdb0e41efd4fac0 = new L.RegularPolygonMarker(\n",
              "                [48.104817388074835, -1.7387833730303863],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.7252888375102629, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4f1f17b7bf9120f38604154c824b7ac4 = L.polyline(\n",
              "                [[48.104889, -1.739152], [48.104909, -1.73969]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eb11dea19f1563d716985f9f3097b3c3 = L.polyline(\n",
              "                [[48.104909, -1.73969], [48.10491, -1.739835]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bc1fbba7f7c0e6e8fcab5b8235bee47c = L.polyline(\n",
              "                [[48.10491, -1.739835], [48.104961, -1.741847]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ef36adf62f0d803c4ef814cb48b92f24 = L.polyline(\n",
              "                [[48.104961, -1.741847], [48.104992, -1.743596]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fd08fb192b6e5458df29929616905658 = new L.RegularPolygonMarker(\n",
              "                [48.1049489979194, -1.7413735061534414],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 182.17460338853357, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d166949e525a2e86451ed4abe9bb6fa5 = L.polyline(\n",
              "                [[48.104867, -1.736315], [48.105313, -1.734574]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a8747c61456a9447b12e11b4ce7c2701 = new L.RegularPolygonMarker(\n",
              "                [48.105090000000004, -1.7354445],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -20.98891332996203, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0624e3f46d071b37df6bf08ffad477bb = L.polyline(\n",
              "                [[48.104992, -1.743596], [48.104421, -1.750072]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7258b4be2cd77160d322dcb0ae873e1b = new L.RegularPolygonMarker(\n",
              "                [48.104706500000006, -1.746834],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 172.4806570603315, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5ff78a0f9bde36dc4177f7b9c795ff67 = L.polyline(\n",
              "                [[48.105313, -1.734574], [48.10589, -1.732863]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fdb66e8ecab20bb4756982cfc662dc01 = L.polyline(\n",
              "                [[48.10589, -1.732863], [48.1065, -1.730642]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d5838e311eb8f2ec09081360e7bccfe9 = L.polyline(\n",
              "                [[48.1065, -1.730642], [48.10671, -1.729552]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c23b11c0eff0a185148946aeac2aaf11 = L.polyline(\n",
              "                [[48.10671, -1.729552], [48.106962, -1.726025]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c02daef8ca48f4d5d12cc238b867de8b = new L.RegularPolygonMarker(\n",
              "                [48.10653379096952, -1.7304666087772271],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -16.094493207765524, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_53375b0cbf64a2b3982f2c4c33bdd606 = L.polyline(\n",
              "                [[48.104421, -1.750072], [48.104286, -1.750252]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6ba789d82e9829faa6b46082235207f7 = L.polyline(\n",
              "                [[48.104286, -1.750252], [48.104204, -1.750367]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9be21ac86e8320889fb410976e9e6b9c = L.polyline(\n",
              "                [[48.104204, -1.750367], [48.101866, -1.753619]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9f3879ae9f530cac7d8244baf412d47f = new L.RegularPolygonMarker(\n",
              "                [48.10314237262075, -1.7518436519406801],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 132.88884078506908, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_30688b060dd2bf8e0b22759841b2fd22 = L.polyline(\n",
              "                [[48.106962, -1.726025], [48.106994, -1.724741]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a5ded29cf2aa879343e586c9db89a279 = L.polyline(\n",
              "                [[48.106994, -1.724741], [48.107016, -1.723895]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8512f0632779c45e15bbf963000120de = L.polyline(\n",
              "                [[48.107016, -1.723895], [48.107028, -1.723607]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e3641c9b05be41b9b6f9e2e607cc6318 = L.polyline(\n",
              "                [[48.107028, -1.723607], [48.107118, -1.720662]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_50839e241ed348c74a2f796cd223543e = new L.RegularPolygonMarker(\n",
              "                [48.10703605918316, -1.7233432856178048],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -2.621505033095218, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57e7061f816f738ec53688c9b989649c = L.polyline(\n",
              "                [[48.101866, -1.753619], [48.101687, -1.753905]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_41363eeeaa397310db4ff13f37e56ddd = L.polyline(\n",
              "                [[48.101687, -1.753905], [48.100301, -1.756]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f597dca72634f28cc9956cb638476a23 = new L.RegularPolygonMarker(\n",
              "                [48.101086118892624, -1.754813258239501],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 135.26990874342562, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1fcf722c80fdc6b52c1a1f6ac4e1e4b5 = L.polyline(\n",
              "                [[48.107118, -1.720662], [48.107134, -1.719556]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6b05c401c9c8058248b9a48a1a860ebe = L.polyline(\n",
              "                [[48.107134, -1.719556], [48.10721, -1.718492]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f95e97aa87ef59f408870863d349a549 = L.polyline(\n",
              "                [[48.10721, -1.718492], [48.107269, -1.717552]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e5b6e8c217f97bbb4dd114a75e0896ed = new L.RegularPolygonMarker(\n",
              "                [48.10716624189225, -1.7191046135085002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -6.10614937963291, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b6fd14aff4b20ff96bca4680ac0558be = L.polyline(\n",
              "                [[48.100301, -1.756], [48.09863, -1.75779]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1d967f4b0017cf68e8cc077245382a53 = new L.RegularPolygonMarker(\n",
              "                [48.0994655, -1.756895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 125.58058086132351, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6f2f7af373a004f6aef87956b28824d7 = L.polyline(\n",
              "                [[48.107269, -1.717552], [48.107455, -1.716209]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6868ea5f6ebacc3471226e68050205bb = L.polyline(\n",
              "                [[48.107455, -1.716209], [48.107629, -1.715254]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d4ae4af34c2fe82316ad1028809d858a = L.polyline(\n",
              "                [[48.107629, -1.715254], [48.108839, -1.710163]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_767c207e3cc91717e2c13a41a7ecc44a = new L.RegularPolygonMarker(\n",
              "                [48.10796956442747, -1.713821096280793],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -19.59488421598735, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_abdef61bf8863d6fdf6532ee897a897d = L.polyline(\n",
              "                [[48.09863, -1.75779], [48.098423, -1.757969]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b21c960ef1402f17beb9e34aa3eba2be = L.polyline(\n",
              "                [[48.098423, -1.757969], [48.088766, -1.779844]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0702f530ba246aef2e2601a812e34722 = new L.RegularPolygonMarker(\n",
              "                [48.0936603149161, -1.7687574163001238],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.54519583034266, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_664369b53969c991da1e47540cc345c6 = L.polyline(\n",
              "                [[48.108839, -1.710163], [48.109246, -1.70829]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2da98e64a256ddb78cf96ecebf19313b = L.polyline(\n",
              "                [[48.109246, -1.70829], [48.109329, -1.707043]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_519c5d1b2e9946f7bb11f0095096861d = L.polyline(\n",
              "                [[48.109329, -1.707043], [48.108962, -1.705951]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7b5c10178210a920ad682f43536470ef = L.polyline(\n",
              "                [[48.108962, -1.705951], [48.108449, -1.704419]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4f7b1b473c02e7baf3538f77d8f84f35 = L.polyline(\n",
              "                [[48.108449, -1.704419], [48.107884, -1.70285]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_98278cd37ae4183d9bb425f1296e4d77 = L.polyline(\n",
              "                [[48.107884, -1.70285], [48.107772, -1.702287]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_52e0df95ec33536145fd044f8e5dac0c = L.polyline(\n",
              "                [[48.107772, -1.702287], [48.107759, -1.702106]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_962072e138deb678688a91eca53bdb0c = L.polyline(\n",
              "                [[48.107759, -1.702106], [48.108056, -1.700659]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bc759d06e1b24b0974c3dc8413f648fa = L.polyline(\n",
              "                [[48.108056, -1.700659], [48.108348, -1.699858]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_883eeec6a4782c3f115dd889855335c6 = L.polyline(\n",
              "                [[48.108348, -1.699858], [48.108614, -1.6991]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8c0b6786490e96861dc141ce0ea3b7d1 = L.polyline(\n",
              "                [[48.108614, -1.6991], [48.109099, -1.697652]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c36524ffa730d6ecf99f24d8444c80c5 = L.polyline(\n",
              "                [[48.109099, -1.697652], [48.109126, -1.6975]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_526e6506039229ed08f62e0b20964dd6 = L.polyline(\n",
              "                [[48.109126, -1.6975], [48.108583, -1.696493]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_12a13d89b769340baf9058272cf03929 = L.polyline(\n",
              "                [[48.108583, -1.696493], [48.10828, -1.695836]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_54e44e3f0421d6ea69453a6d3d75df58 = L.polyline(\n",
              "                [[48.10828, -1.695836], [48.108084, -1.695517]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c0b9420cb3b4f1d8a1b5a866cbdacda1 = L.polyline(\n",
              "                [[48.108084, -1.695517], [48.10759, -1.694851]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a0c5a56c7463ac8cd7e622831a780ca2 = L.polyline(\n",
              "                [[48.10759, -1.694851], [48.107296, -1.693476]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c55e8b490ac552297a06d21e23a7d6dd = L.polyline(\n",
              "                [[48.107296, -1.693476], [48.107255, -1.692611]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7a7b05a1755eea12c7c4c3a56b2d4c39 = L.polyline(\n",
              "                [[48.107255, -1.692611], [48.107335, -1.691969]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ff799ffb014b0d50411ddc52de4f0607 = L.polyline(\n",
              "                [[48.107335, -1.691969], [48.107579, -1.691097]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_468c2ae61fc6b2dc8b3c4267a4fa8ec6 = L.polyline(\n",
              "                [[48.107579, -1.691097], [48.108102, -1.68946]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_045d6a9a465bbd361898880908781799 = L.polyline(\n",
              "                [[48.108102, -1.68946], [48.108759, -1.687555]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6828d361d285410872018ca601e50840 = L.polyline(\n",
              "                [[48.108759, -1.687555], [48.10907, -1.686548]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_258f4ba2a115439bae514b042ab65f8e = L.polyline(\n",
              "                [[48.10907, -1.686548], [48.109604, -1.684556]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9cd3645c4ab1acbabfa6a7755339228d = L.polyline(\n",
              "                [[48.109604, -1.684556], [48.109345, -1.684234]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0b5f7122e5b2827e41ad7172927d85e6 = L.polyline(\n",
              "                [[48.109345, -1.684234], [48.109346, -1.683611]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d60a4eeed1ae4cd37db328ffa883e580 = new L.RegularPolygonMarker(\n",
              "                [48.108706378366804, -1.6967218066581342],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 38.92276044084974, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_def80e31693bdf79ac5cfe7aa2440afa = L.polyline(\n",
              "                [[48.088766, -1.779844], [48.082481, -1.789176]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_123a24e0dbaee34f87d5d3af25667564 = new L.RegularPolygonMarker(\n",
              "                [48.0856235, -1.78451],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.76985964024388, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_87343908bda08a6acd73a7167b554db9 = L.polyline(\n",
              "                [[48.117461, -1.707947], [48.119264, -1.708209]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a3cc8985acae1bf6aa3d2c796e807dad = new L.RegularPolygonMarker(\n",
              "                [48.1183625, -1.708078],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 264.45915366796874, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c3a2fba6afa2d7083afa753746215083 = L.polyline(\n",
              "                [[48.119523, -1.666892], [48.119286, -1.667432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f4bfca37e527ee2814037af57b61ee08 = new L.RegularPolygonMarker(\n",
              "                [48.1194045, -1.667162],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.67799280013247, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_24b8cfac0b3a80ea2304b635dea008fa = L.polyline(\n",
              "                [[48.12075, -1.672223], [48.120865, -1.67181]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b880d9348a3158027a42e31f5f734a32 = new L.RegularPolygonMarker(\n",
              "                [48.1208075, -1.6720165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -22.641914058888574, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ba52dee75f771c953343bee4a21413c8 = L.polyline(\n",
              "                [[48.122377, -1.684046], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_60caf54ce295512111c4867e752eb117 = new L.RegularPolygonMarker(\n",
              "                [48.122499000000005, -1.6841255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.49123695744242, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a78f925aaa08a4958a6b94640811c783 = L.polyline(\n",
              "                [[48.085028, -1.692361], [48.085011, -1.692187]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b6cbbe6e2b2b38d8606082524b30bb8 = new L.RegularPolygonMarker(\n",
              "                [48.0850195, -1.692274],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 8.320638012053024, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e954fbfd3dcfc71fcad65d4d6e70a507 = L.polyline(\n",
              "                [[48.112687, -1.693424], [48.11269, -1.693385]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ad17cbdc9cf9daa994a493eae5e1b5e4 = L.polyline(\n",
              "                [[48.11269, -1.693385], [48.112008, -1.693103]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_28032d628cf32114280da8d847444503 = new L.RegularPolygonMarker(\n",
              "                [48.11236166781166, -1.693249238010099],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 74.56636681769939, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0732928df82ce6de2917b22821618301 = L.polyline(\n",
              "                [[48.085011, -1.692187], [48.084994, -1.691961]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_97636b4b9011a93ae308537aa50b8020 = new L.RegularPolygonMarker(\n",
              "                [48.0850025, -1.692074],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 6.424475577956898, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6c3479a5583e04c0094b9e9b99e2e263 = L.polyline(\n",
              "                [[48.120865, -1.67181], [48.120663, -1.672035]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_032078b39ca5fa64e3c22555daed9a7a = new L.RegularPolygonMarker(\n",
              "                [48.120764, -1.6719225],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 126.63355757507415, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_17c29f89d37d2c50f97934f82ed7f09a = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.122655, -1.685427]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_45fe6cdeca5ad849270983601329880c = new L.RegularPolygonMarker(\n",
              "                [48.122638, -1.684816],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 182.38718208340993, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_deb8a51b82b0c1333d94dfbd87511139 = L.polyline(\n",
              "                [[48.084994, -1.691961], [48.085589, -1.691856]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0549968eceea1f77c2032312d54427a2 = new L.RegularPolygonMarker(\n",
              "                [48.0852915, -1.6919085],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -83.27666988966368, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8d43cc79a53886544ebcc44e6444e52d = L.polyline(\n",
              "                [[48.120663, -1.672035], [48.119717, -1.672162]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_76956a7d8e4aa6b9f8e7e784d4438e02 = new L.RegularPolygonMarker(\n",
              "                [48.12019, -1.6720985],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 95.12126769163947, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6b1c2fb9d0aed67bcf86c28f653cbe96 = L.polyline(\n",
              "                [[48.112008, -1.693103], [48.1109, -1.6927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_11c5679144b248e48415ac668c41d00a = new L.RegularPolygonMarker(\n",
              "                [48.111454, -1.6929015],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 76.34987836306138, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_72f1c0e5ce9ce35910bbd86c4b75ccb9 = L.polyline(\n",
              "                [[48.119286, -1.667432], [48.120433, -1.668164]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_281901d3a1d385ba50df287c91bc790f = new L.RegularPolygonMarker(\n",
              "                [48.119859500000004, -1.667798],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.92446878725946, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3346f48df93c94973a80b7efa644a4c0 = L.polyline(\n",
              "                [[48.085589, -1.691856], [48.085835, -1.691813]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_15d743ac9cd316a1e222d859ca5362b9 = new L.RegularPolygonMarker(\n",
              "                [48.085712, -1.6918345000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -83.33989695904448, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_812dc3669c50b3feb1116f214aad48ab = L.polyline(\n",
              "                [[48.122655, -1.685427], [48.121649, -1.686309]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_23bee233af73f4c3eb74c0e700fe6ac6 = new L.RegularPolygonMarker(\n",
              "                [48.122152, -1.6858680000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.33918278040804, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_54df0ef690f59e4187d10978f8730c38 = L.polyline(\n",
              "                [[48.119717, -1.672162], [48.11817, -1.672344]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b1b09c77f58b0485415cccbbc77470f = new L.RegularPolygonMarker(\n",
              "                [48.1189435, -1.672253],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.49083563469213, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dfe3872076f1dd039cc413289e9299b4 = L.polyline(\n",
              "                [[48.085835, -1.691813], [48.086839, -1.691635]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6a61ca4309edb5e96a18bb76804eec61 = new L.RegularPolygonMarker(\n",
              "                [48.086337, -1.691724],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -83.24587042174159, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_62acfa14407beba779918c7b8e22d723 = L.polyline(\n",
              "                [[48.1109, -1.6927], [48.110579, -1.692731]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c28431c58c6ca8298c66059a5de4febe = L.polyline(\n",
              "                [[48.110579, -1.692731], [48.110494, -1.692738]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e1afdfd9426b5caed0f206c70085fcb0 = L.polyline(\n",
              "                [[48.110494, -1.692738], [48.110036, -1.692796]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1752f4610b41c0736c362d74df57f3e4 = new L.RegularPolygonMarker(\n",
              "                [48.11046767235112, -1.6927413340690722],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.83321495826743, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5c5c760d68fe4e2bb6981265f6b71148 = L.polyline(\n",
              "                [[48.119264, -1.708209], [48.120357, -1.708434]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2d29df68d7b64b5164302574c90c85b5 = new L.RegularPolygonMarker(\n",
              "                [48.1198105, -1.7083215],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 262.1752820139681, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0a74048757d09ee786d0563c4b3001d9 = L.polyline(\n",
              "                [[48.110036, -1.692796], [48.109744, -1.692837]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4719baa60f1f1efd215891efcdf3574f = L.polyline(\n",
              "                [[48.109744, -1.692837], [48.108948, -1.692932]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_569888f1e24098c02d61e0edce08615e = new L.RegularPolygonMarker(\n",
              "                [48.10949217790592, -1.692867054144394],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.55625865719233, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b16847a5190bacf4449352ae2bc8026d = L.polyline(\n",
              "                [[48.120433, -1.668164], [48.122435, -1.669444]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_14b2c54bc5254132cfb2b06930eb3c66 = new L.RegularPolygonMarker(\n",
              "                [48.121434, -1.668804],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.8873092841688, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_993049075a9c68603506155ee7165678 = L.polyline(\n",
              "                [[48.121649, -1.686309], [48.121615, -1.686338]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_76e1bc417e62f867069144a39129c629 = new L.RegularPolygonMarker(\n",
              "                [48.121632, -1.6863234999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 119.65642499590987, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7a9f32c77a12d034f4956fda9da80add = L.polyline(\n",
              "                [[48.086839, -1.691635], [48.088369, -1.691355]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8b47a44e70723d8ae0bedafce800db94 = new L.RegularPolygonMarker(\n",
              "                [48.087604, -1.691495],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -83.03043796895511, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1f96b3a64878a80c9e744b93c0bd46b3 = L.polyline(\n",
              "                [[48.121615, -1.686338], [48.121003, -1.686872]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c864e6b3522f519ce407550384e2b94e = new L.RegularPolygonMarker(\n",
              "                [48.121309, -1.686605],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.21993192118126, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1e66c8d8064987c6b6370ca2ad79389e = L.polyline(\n",
              "                [[48.11817, -1.672344], [48.117989, -1.67313]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c7dcb8bab80d4d90de06ba03e7bf22ea = new L.RegularPolygonMarker(\n",
              "                [48.1180795, -1.6727370000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 160.9690253139392, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_558c99d1b0fb3bd684a1f52f3ad9f525 = L.polyline(\n",
              "                [[48.108948, -1.692932], [48.108581, -1.692976]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9badb4f0d4336b7a110ca02dd93e65f0 = new L.RegularPolygonMarker(\n",
              "                [48.1087645, -1.692954],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.57698157714484, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_06ac71db0df30381cd8c398955bb28df = L.polyline(\n",
              "                [[48.120357, -1.708434], [48.120502, -1.708455]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4c4610e4fbcf348fc313a006c5aa5368 = L.polyline(\n",
              "                [[48.120502, -1.708455], [48.120884, -1.708523]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_94aa72ea997f5a1054f48c70c2ee9132 = new L.RegularPolygonMarker(\n",
              "                [48.12062067186422, -1.7084761248344698],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 263.22315744035285, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5168ff53153ec30461dfef5a6473ff56 = L.polyline(\n",
              "                [[48.108581, -1.692976], [48.108481, -1.693419]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bc44aa9305d2916dd4a9df70a727a7b3 = new L.RegularPolygonMarker(\n",
              "                [48.108531, -1.6931975000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 161.32154701858485, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cc71bbb17408add0cd745d8e68caeeba = L.polyline(\n",
              "                [[48.117989, -1.67313], [48.117925, -1.673537]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_70824dd7c456c83310bf44144538a95c = new L.RegularPolygonMarker(\n",
              "                [48.117957000000004, -1.6733335],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 166.74613453412326, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ba94c4ce733a9891addee2392990f86d = L.polyline(\n",
              "                [[48.121003, -1.686872], [48.120505, -1.687309]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_09e971ddc8c5dd6c69c12f0b9a6a1200 = new L.RegularPolygonMarker(\n",
              "                [48.120754000000005, -1.6870905],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.36164241528388, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c48270f8085b3c0fac087625d935d61e = L.polyline(\n",
              "                [[48.108481, -1.693419], [48.108355, -1.693986]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cfa0609b14aff35ab9affdf6fffebaf8 = new L.RegularPolygonMarker(\n",
              "                [48.108418, -1.6937025],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 161.59246393439406, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_39a21df59508565f74df6dc544b7b768 = L.polyline(\n",
              "                [[48.117925, -1.673537], [48.117934, -1.674027]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_131003399270493c8204cfe8eb6b5a7f = new L.RegularPolygonMarker(\n",
              "                [48.1179295, -1.673782],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 181.5761360848278, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_05550dfa64d514b392f42bc24ef8b3f6 = L.polyline(\n",
              "                [[48.120884, -1.708523], [48.121281, -1.708567]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8aef14a2c1807b5135b7c466750694ac = new L.RegularPolygonMarker(\n",
              "                [48.1210825, -1.708545],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 265.76862055515613, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3add11da01ec470f88646d734df49318 = L.polyline(\n",
              "                [[48.108355, -1.693986], [48.10819, -1.69466]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f2ba467a6c3c5db342a1cb0ad9786035 = new L.RegularPolygonMarker(\n",
              "                [48.1082725, -1.694323],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 159.86586933850924, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5398947f4b61bf5a81d7ff0dd8c8be86 = L.polyline(\n",
              "                [[48.117934, -1.674027], [48.118, -1.675493]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d6e03b193b58aafc8aebb10978333044 = new L.RegularPolygonMarker(\n",
              "                [48.117967, -1.67476],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 183.8585241593214, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a170ed7a6b3e141d73e01878e0be4a05 = L.polyline(\n",
              "                [[48.121281, -1.708567], [48.121283, -1.706129]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b772261d3bb199521ca53bf8797dbc76 = new L.RegularPolygonMarker(\n",
              "                [48.121282, -1.707348],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.071317072018104, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_33034b980dffc4ab8c40a117b373b649 = L.polyline(\n",
              "                [[48.120505, -1.687309], [48.120364, -1.687433]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b288683b3669c5bdf6062d9ee7a2a584 = new L.RegularPolygonMarker(\n",
              "                [48.1204345, -1.687371],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.41639960893067, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_90f6b0f4325413f4c4a4d7768f7615d5 = L.polyline(\n",
              "                [[48.10819, -1.69466], [48.108142, -1.694981]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_da8c66e45c36e2cde49f51086f4862b1 = L.polyline(\n",
              "                [[48.108142, -1.694981], [48.10831, -1.695785]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_098e24c26f0a9fff1b0237f5b8068cd4 = new L.RegularPolygonMarker(\n",
              "                [48.108193196414206, -1.6952260114108262],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 197.37706531099445, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9b023f033319241ff154a8c1fdfbb2aa = L.polyline(\n",
              "                [[48.120364, -1.687433], [48.119985, -1.687765]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_61331111d5d2479969562c3f0405bb49 = new L.RegularPolygonMarker(\n",
              "                [48.120174500000005, -1.687599],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.31856434550073, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_27b3b89c794c028af9318738d0a5ef00 = L.polyline(\n",
              "                [[48.088369, -1.691355], [48.089784, -1.691095]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ecd5d40b2d56cd796a6d12a048ab1e87 = new L.RegularPolygonMarker(\n",
              "                [48.089076500000004, -1.691225],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -83.00276133044213, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c12eaf367d7face7b34a41b4480c2e93 = L.polyline(\n",
              "                [[48.118, -1.675493], [48.118222, -1.676312]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_769ddf668dcffeac853aef1780b4461c = new L.RegularPolygonMarker(\n",
              "                [48.118111, -1.6759024999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 202.09876795714797, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_43a8c49da499efd7c4855978b7fab8b6 = L.polyline(\n",
              "                [[48.10831, -1.695785], [48.108641, -1.696459]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c077de42b81a9b52cdd760181f450c08 = new L.RegularPolygonMarker(\n",
              "                [48.1084755, -1.696122],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 216.3340680089043, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f65b08291e7a097731a1faa7db10c968 = L.polyline(\n",
              "                [[48.119985, -1.687765], [48.119791, -1.687938]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_18c86258e6401952d31c329f42d4e14d = L.polyline(\n",
              "                [[48.119791, -1.687938], [48.11903, -1.688609]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_860d4660b715094ec1978f67a5497462 = new L.RegularPolygonMarker(\n",
              "                [48.11950778582487, -1.6881877197260344],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.48253684102073, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c124e17f522b027312c3e8f6cc6735cc = L.polyline(\n",
              "                [[48.108641, -1.696459], [48.10919, -1.69746]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_214239423aeef84f03123bbed90731d3 = new L.RegularPolygonMarker(\n",
              "                [48.108915499999995, -1.6969595],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 219.39949352852062, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0683dcd849f954f04af4aff9375e98c6 = L.polyline(\n",
              "                [[48.118222, -1.676312], [48.118406, -1.676532]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_490bc094afb2e9b4c2b5c18e931d7c47 = L.polyline(\n",
              "                [[48.118406, -1.676532], [48.118845, -1.677347]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_654e22befd10fdacceb34048f3978122 = new L.RegularPolygonMarker(\n",
              "                [48.1185516297552, -1.6768023604794824],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 218.89888068648622, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6c736aa2970be9257483a823796011a4 = L.polyline(\n",
              "                [[48.122435, -1.669444], [48.121257, -1.671224]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a9bea04ae1f9ca9e4fc37bb8fb1ccb5d = new L.RegularPolygonMarker(\n",
              "                [48.121846000000005, -1.670334],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 135.2485315738096, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2a4f76d5e5d6f1e09a70e71751b306f9 = L.polyline(\n",
              "                [[48.121283, -1.706129], [48.12123, -1.706107]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e5c1b85c69fc2d9b597aaba664e26615 = L.polyline(\n",
              "                [[48.12123, -1.706107], [48.121212, -1.706033]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f8e94457d6fc9bb1c6d520fad5412411 = L.polyline(\n",
              "                [[48.121212, -1.706033], [48.121284, -1.705957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d02e65b4e08e882e108ecbc7815059f9 = new L.RegularPolygonMarker(\n",
              "                [48.12121533900423, -1.7060467270173905],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 20.020616620761757, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5a220da0aa1b02738917a1bf550aaec8 = L.polyline(\n",
              "                [[48.082481, -1.789176], [48.08083, -1.791984]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dbc2f1a03d6a3e7355dad761f6f18a46 = new L.RegularPolygonMarker(\n",
              "                [48.0816555, -1.79058],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 138.65033699876903, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b87a4431df31e4992922c4026d3e7459 = L.polyline(\n",
              "                [[48.121284, -1.705957], [48.121275, -1.704639]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1868b0575a6fdbc682b15792b6cf861e = new L.RegularPolygonMarker(\n",
              "                [48.1212795, -1.705298],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.5855757481341755, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3e23fc33be3dac496545a82288c41e74 = L.polyline(\n",
              "                [[48.10919, -1.69746], [48.109294, -1.697616]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8c645ce66e388b87754fafac24df840e = L.polyline(\n",
              "                [[48.109294, -1.697616], [48.109257, -1.697727]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5a9c1dad0292bb702f91de2c81231713 = L.polyline(\n",
              "                [[48.109257, -1.697727], [48.109149, -1.697743]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_37aa855c3582915b0d9b03e1de9b7387 = new L.RegularPolygonMarker(\n",
              "                [48.109284163208514, -1.6976455103744532],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 153.47088279552912, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_765828c35fbe2dc39bf196996497d966 = L.polyline(\n",
              "                [[48.118845, -1.677347], [48.119785, -1.680226]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_62ece6dbc1f04e4468a5e1feba39c231 = new L.RegularPolygonMarker(\n",
              "                [48.119315, -1.6787865],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 206.06350423206732, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_df905995e9ea9896e16535a7259ac4e1 = L.polyline(\n",
              "                [[48.109149, -1.697743], [48.108614, -1.6991]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2d14787b7c872c95b7982c060bd61b2b = new L.RegularPolygonMarker(\n",
              "                [48.1088815, -1.6984215],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 149.44087882505792, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c5cdcd41094b55cadec33d31a9ef9a42 = L.polyline(\n",
              "                [[48.11903, -1.688609], [48.1187, -1.688896]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7f56b14eb8a04eab3bd9a10bea95179e = new L.RegularPolygonMarker(\n",
              "                [48.118865, -1.6887525],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.1395050458157, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b2b0b95d0b5f1ff09a5a472445828135 = L.polyline(\n",
              "                [[48.089784, -1.691095], [48.09005, -1.691002]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9855975704d2b10e7fd330797b6a0dda = new L.RegularPolygonMarker(\n",
              "                [48.089917, -1.6910485],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -76.85499381077528, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_efe992677ac4550b5696ae6106e08891 = L.polyline(\n",
              "                [[48.1187, -1.688896], [48.118645, -1.68894]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_881e92713164d5515aa3d2305b17e829 = L.polyline(\n",
              "                [[48.118645, -1.68894], [48.117685, -1.689795]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_64b132ba7e60fc244b877160db87ea09 = new L.RegularPolygonMarker(\n",
              "                [48.118191794124556, -1.6893436364828165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.73511088762478, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_76838ee9116ca9e3e57eb9961e7d0dcb = L.polyline(\n",
              "                [[48.09005, -1.691002], [48.09007, -1.690937]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_03314ee2555699f0d85bb8c9b4834cb2 = L.polyline(\n",
              "                [[48.09007, -1.690937], [48.090224, -1.690947]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_08e358a908b24c837faa26065f1b877d = new L.RegularPolygonMarker(\n",
              "                [48.09012306208173, -1.690940445589723],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 267.51640976138873, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f8b473e5fa2f519d9fe0a129a67f15e0 = L.polyline(\n",
              "                [[48.121275, -1.704639], [48.121172, -1.704518]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_937b02379a87404fe63a81a33b37f63a = L.polyline(\n",
              "                [[48.121172, -1.704518], [48.121261, -1.704361]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7116e25d1a9104aa95441ee26d68ae2c = new L.RegularPolygonMarker(\n",
              "                [48.12117416208542, -1.7045141859841493],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -40.337458731629184, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_116f591ea27a027eebec1a38b0d0972b = L.polyline(\n",
              "                [[48.090224, -1.690947], [48.090235, -1.691076]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7b9a67e5a08da66946f6cb424f24cf20 = new L.RegularPolygonMarker(\n",
              "                [48.0902295, -1.6910115000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 187.27504417791368, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_695726cd5eabda4986f074a5d73c5f5f = L.polyline(\n",
              "                [[48.108614, -1.6991], [48.108348, -1.699858]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0a9f19cfde46d8e645d8af89cf778609 = new L.RegularPolygonMarker(\n",
              "                [48.108481, -1.6994790000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 152.2759774564145, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a6617ee8bfa67082c36ea8a0d487d218 = L.polyline(\n",
              "                [[48.090235, -1.691076], [48.090308, -1.692149]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_06c7103f0f02699597ef0086992eaf59 = new L.RegularPolygonMarker(\n",
              "                [48.0902715, -1.6916125],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 185.81608498485116, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1096a56dd69aa6fed2bc91b5956853eb = L.polyline(\n",
              "                [[48.121261, -1.704361], [48.12141, -1.703949]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4acf8dcc61fe19b6e8ac3727f988ba2a = L.polyline(\n",
              "                [[48.12141, -1.703949], [48.121444, -1.703783]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6201700cda5081822099be0f0817113a = new L.RegularPolygonMarker(\n",
              "                [48.12136311868275, -1.7040786315617749],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -28.446931110360723, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_461eec941badb18dab16c0d3f8af438e = L.polyline(\n",
              "                [[48.108348, -1.699858], [48.108056, -1.700659]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_592cb4fb49e926a85c5d5f266fffcbbd = new L.RegularPolygonMarker(\n",
              "                [48.108202, -1.7002585],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 151.36801038072883, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2c626dcb5652e822fe617db5c66e9e51 = L.polyline(\n",
              "                [[48.08083, -1.791984], [48.080389, -1.793711]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_36594c7583ffc5cda74ca44680cb7327 = new L.RegularPolygonMarker(\n",
              "                [48.080609499999994, -1.7928475000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 159.08272033055295, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_509a6e6e7e33c352835ba1ff1076a934 = L.polyline(\n",
              "                [[48.121444, -1.703783], [48.121583, -1.703837]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_09b66aeb0b5027f71b92c0efe0a59b10 = L.polyline(\n",
              "                [[48.121583, -1.703837], [48.121914, -1.703824]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d93a645e46f1bfe661f2c99cd6149290 = new L.RegularPolygonMarker(\n",
              "                [48.12167671210261, -1.703833319464248],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -88.49816957203912, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_63a5019537dd7ca6587759cdcdf9021e = L.polyline(\n",
              "                [[48.108056, -1.700659], [48.107759, -1.702106]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7cfb26173440df8fe79cd8bd801d302b = new L.RegularPolygonMarker(\n",
              "                [48.107907499999996, -1.7013824999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 162.91372991391736, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_338fe9f698b2060e1102f6d88599e39e = L.polyline(\n",
              "                [[48.090308, -1.692149], [48.090669, -1.692536]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_75ff5f6bc59e5f3f1cedee6e8a7fa6cd = new L.RegularPolygonMarker(\n",
              "                [48.0904885, -1.6923425],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 234.39506588098135, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_58889c74b9e00688f730a957d5d418f9 = L.polyline(\n",
              "                [[48.117685, -1.689795], [48.116868, -1.690514]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_461e91e6d3b44e7d106d9d02b37a752f = new L.RegularPolygonMarker(\n",
              "                [48.1172765, -1.6901545],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.43568778001458, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57f11cf3c07b5450e21d6f810aaca69a = L.polyline(\n",
              "                [[48.121914, -1.703824], [48.122185, -1.703748]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a398fcccef735cf4329f3a93037aca57 = new L.RegularPolygonMarker(\n",
              "                [48.1220495, -1.703786],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -79.39650883924946, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2f1323e6be9da9b179028db06f0e648d = L.polyline(\n",
              "                [[48.121257, -1.671224], [48.120865, -1.67181]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6212035cb6efa16bebd66d05f8d1c065 = new L.RegularPolygonMarker(\n",
              "                [48.121061, -1.6715170000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.94092615092077, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_37529618726ab539ac73d37647271334 = L.polyline(\n",
              "                [[48.119785, -1.680226], [48.119884, -1.680631]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c1530993cc2b917de3e0bd7e4cd6355b = new L.RegularPolygonMarker(\n",
              "                [48.119834499999996, -1.6804285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 200.11125682994657, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b40e9c3e049f038998f854842069894b = L.polyline(\n",
              "                [[48.122185, -1.703748], [48.122212, -1.703706]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7d887833efb9ee3d7e40106953c90b79 = new L.RegularPolygonMarker(\n",
              "                [48.122198499999996, -1.703727],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -43.920733291194736, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e80ac9349ee99b5b99776ebc233f0e60 = L.polyline(\n",
              "                [[48.080389, -1.793711], [48.080674, -1.793978]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_37e92e26df537b383cf330f770bcbf4f = new L.RegularPolygonMarker(\n",
              "                [48.0805315, -1.7938445],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 237.95803856130493, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_836a925bca849cadfe01e5238b085438 = L.polyline(\n",
              "                [[48.119884, -1.680631], [48.119964, -1.680667]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_447bf20a23023960c8309ac9df44434f = new L.RegularPolygonMarker(\n",
              "                [48.119924, -1.6806489999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 253.2793166817359, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_10bc74f9838606415f62e75aeef71ff3 = L.polyline(\n",
              "                [[48.122212, -1.703706], [48.122341, -1.703738]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_42375597844b7708eddbe99dc7319ab4 = new L.RegularPolygonMarker(\n",
              "                [48.1222765, -1.703722],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 260.5976047409977, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_73ee597f9b5ec7179db65c3361ccdccf = L.polyline(\n",
              "                [[48.119964, -1.680667], [48.120054, -1.680831]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_67bea64f836f1e2e4b6c9416544e24e9 = new L.RegularPolygonMarker(\n",
              "                [48.120009, -1.680749],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 219.42210055691152, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c03529698db29c80bff2e1a468dd5600 = L.polyline(\n",
              "                [[48.122341, -1.703738], [48.122967, -1.703743]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d463b7a81b47874615313f4ba34ed5b5 = new L.RegularPolygonMarker(\n",
              "                [48.122654, -1.7037404999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 269.69451655948654, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_03f919ce88f7d526aa54c086ff96a440 = L.polyline(\n",
              "                [[48.090669, -1.692536], [48.092018, -1.691744]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5a2a06fbeacbcdab51e31b06aefc5575 = new L.RegularPolygonMarker(\n",
              "                [48.0913435, -1.69214],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -68.58758904188721, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d6fb7575f7ac1fd3544ac4ea8bc88082 = L.polyline(\n",
              "                [[48.080674, -1.793978], [48.080662, -1.7944]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e981a72934af80f19da0b60cb17ff98e = new L.RegularPolygonMarker(\n",
              "                [48.080668, -1.794189],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.56291573029284, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8e2435595ad358c98111b789611ff2cc = L.polyline(\n",
              "                [[48.120054, -1.680831], [48.120664, -1.681778]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ae575ac71bf8da2fe5a9bb1f691d7f0b = new L.RegularPolygonMarker(\n",
              "                [48.120359, -1.6813045],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 223.97709085568727, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1ee690cc5bab43c7bcc94ee4d648de2e = L.polyline(\n",
              "                [[48.107759, -1.702106], [48.107772, -1.702287]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ff6dadc12860982efe5ceb6a2907dc2f = new L.RegularPolygonMarker(\n",
              "                [48.1077655, -1.7021965],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 186.1393676186172, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_99af53373bafba2dee8a533b201d68e9 = L.polyline(\n",
              "                [[48.080662, -1.7944], [48.08022, -1.794553]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_83bf8529bad66930380fa1ede2318d06 = new L.RegularPolygonMarker(\n",
              "                [48.08044099999999, -1.7944765],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 103.02140870784754, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9cd1e271eb14d4a823ba82a83b46a232 = L.polyline(\n",
              "                [[48.107772, -1.702287], [48.107916, -1.702807]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_76b52d505ea4840842f1d1267af2d800 = new L.RegularPolygonMarker(\n",
              "                [48.107844, -1.702547],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 202.52508981529672, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_18c73d28a1bdf30bf0267ca1239b63fe = L.polyline(\n",
              "                [[48.120865, -1.67181], [48.12075, -1.672223]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_efc9643f1a71dcafa48370b2985c6863 = new L.RegularPolygonMarker(\n",
              "                [48.1208075, -1.6720165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 157.35839344108865, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_acc532929e39ce479b85baf76efa4ca1 = L.polyline(\n",
              "                [[48.08022, -1.794553], [48.080102, -1.794319]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bff4171fd552ec8ec476f1c778ca327d = new L.RegularPolygonMarker(\n",
              "                [48.080161, -1.7944360000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 37.04536304927491, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e8387dd95b437225c1b37e832e495226 = L.polyline(\n",
              "                [[48.107916, -1.702807], [48.107963, -1.70293]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5c127967403b2f9569260ef7c217862b = new L.RegularPolygonMarker(\n",
              "                [48.1079395, -1.7028685000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 209.78076011497137, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0a064ad40f79c05403840597e7f94572 = L.polyline(\n",
              "                [[48.116868, -1.690514], [48.116254, -1.691065]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2c8df34262b7dc2246cbba49a904b28c = new L.RegularPolygonMarker(\n",
              "                [48.116561, -1.6907895000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.92670192507691, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cf3ffe2d8edbe45d2f4a3f3f9662297f = L.polyline(\n",
              "                [[48.122967, -1.703743], [48.12342, -1.703746]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9e7acd66094a2d20ea3ea44d807ea753 = new L.RegularPolygonMarker(\n",
              "                [48.1231935, -1.7037445],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 269.7467132269548, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_35dd52295a4ff377766f69d446877ddd = L.polyline(\n",
              "                [[48.107963, -1.70293], [48.108449, -1.704419]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dffef41d8af1bc5244f81233011573f7 = new L.RegularPolygonMarker(\n",
              "                [48.108205999999996, -1.7036745],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 206.05056981488497, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9c97e394e3b54d6db033f4749cb51257 = L.polyline(\n",
              "                [[48.080102, -1.794319], [48.07968, -1.794047]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_59f7b5fe6835b61eecfcecf9b6e0a7c8 = new L.RegularPolygonMarker(\n",
              "                [48.079891, -1.7941829999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 66.70223689254746, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3834cca73d5d1b5439dff45b9f654926 = L.polyline(\n",
              "                [[48.120664, -1.681778], [48.120742, -1.681908]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6f7fe5d5f6cef453182514690a857088 = new L.RegularPolygonMarker(\n",
              "                [48.120703, -1.681843],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 221.94896090350045, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_02ae1107d7ead87bc1e5fe14d585b418 = L.polyline(\n",
              "                [[48.07968, -1.794047], [48.07843, -1.793683]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_708ca5e2282a004eedf882f09c566393 = new L.RegularPolygonMarker(\n",
              "                [48.079055, -1.7938649999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 78.9903825762506, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a807d785faea228be2e32fc796097418 = L.polyline(\n",
              "                [[48.120742, -1.681908], [48.121162, -1.682564]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9d91e137543d509cc9cdb907fc86ed90 = new L.RegularPolygonMarker(\n",
              "                [48.120952, -1.682236],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 223.80366721821213, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d2c982009fcf28cd01972f0e84e471b8 = L.polyline(\n",
              "                [[48.12342, -1.703746], [48.124113, -1.703189]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6d3b3a28b9e247a9f7b64993b3e3e11f = new L.RegularPolygonMarker(\n",
              "                [48.1237665, -1.7034675],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -61.78560727519155, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5e01ab058f8831981c28d78ab643c698 = L.polyline(\n",
              "                [[48.116254, -1.691065], [48.115877, -1.69141]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_18ae92a276263229416f7e86d8aee548 = new L.RegularPolygonMarker(\n",
              "                [48.1160655, -1.6912375000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 121.4232017040209, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_422b196a1cad82b8423357c12b63d818 = L.polyline(\n",
              "                [[48.108449, -1.704419], [48.108962, -1.705951]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_065969dccd866b277e1c3b866d80a8c2 = new L.RegularPolygonMarker(\n",
              "                [48.1087055, -1.705185],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 206.63399835156923, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b2ba42148e3217eea3991d83c4c0c282 = L.polyline(\n",
              "                [[48.121162, -1.682564], [48.121527, -1.683112]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6d21f2bee3b12981905af6e8185763cc = new L.RegularPolygonMarker(\n",
              "                [48.1213445, -1.6828379999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 224.935895798608, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_39d033a117f554409275b2678971431f = L.polyline(\n",
              "                [[48.07843, -1.793683], [48.078038, -1.793711]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a590c25370c55e9a86dcd93a5f101a8c = new L.RegularPolygonMarker(\n",
              "                [48.078233999999995, -1.7936969999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 92.73223642823581, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bea6fca68e765e58cebfcc4dd895b552 = L.polyline(\n",
              "                [[48.092018, -1.691744], [48.092385, -1.691514]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b6fa4dfda7b63df19458c5b7d9c09a9 = new L.RegularPolygonMarker(\n",
              "                [48.0922015, -1.6916289999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -67.2860876760902, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9c75781213c44d819e220ccb2be0ab89 = L.polyline(\n",
              "                [[48.124113, -1.703189], [48.124199, -1.703046]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_790e03995ec2bdcc037786601fce997c = new L.RegularPolygonMarker(\n",
              "                [48.124156, -1.7031175],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -42.0172118481258, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_58be98c8f6ba46507095120f38e09eae = L.polyline(\n",
              "                [[48.115877, -1.69141], [48.115667, -1.6916]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_89d2c914f80c580023424e467d6789ad = new L.RegularPolygonMarker(\n",
              "                [48.115772, -1.691505],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 121.13389638468729, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1adf7194b980bf9986ab55f6b3fdcf2f = L.polyline(\n",
              "                [[48.121527, -1.683112], [48.122377, -1.684046]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_575c9df55845702f2c8fe0c3a1d0cfcd = new L.RegularPolygonMarker(\n",
              "                [48.121952, -1.683579],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 233.7396778547482, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f23126c13888f37ebfaa5fde9d94a264 = L.polyline(\n",
              "                [[48.124199, -1.703046], [48.124584, -1.702763]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_70698ac0fee7e19d48713f92155a2759 = new L.RegularPolygonMarker(\n",
              "                [48.1243915, -1.7029045],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -63.86442689763464, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ca0a83a767a08408b45d1a1591312382 = L.polyline(\n",
              "                [[48.078038, -1.793711], [48.077749, -1.793922]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_04ef66831d26d404c3079db2968a0f42 = new L.RegularPolygonMarker(\n",
              "                [48.0778935, -1.7938165000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 116.00304697668733, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fde1e48b1fc445cc86d13fe53a642834 = L.polyline(\n",
              "                [[48.115667, -1.6916], [48.11503, -1.692149]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5bb41e88a131a804c3c4d2fc8707780a = new L.RegularPolygonMarker(\n",
              "                [48.115348499999996, -1.6918745],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 119.91638073437613, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1b0e48ee4f5e827a03b3c052092678f7 = L.polyline(\n",
              "                [[48.077749, -1.793922], [48.077635, -1.793891]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_65fbab2d7bd585171635a987e773f250 = new L.RegularPolygonMarker(\n",
              "                [48.077692, -1.7939064999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 79.70267405492166, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_730480db5496c5b6e06cc6d65b58a28a = L.polyline(\n",
              "                [[48.092385, -1.691514], [48.094253, -1.690456]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3dc002a39010ee61cdb743d8fb1e4263 = new L.RegularPolygonMarker(\n",
              "                [48.093319, -1.690985],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -69.2789171876737, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_80dc2d7bb6037e7cab104b79011d38ea = L.polyline(\n",
              "                [[48.077635, -1.793891], [48.077421, -1.793574]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_117b13fd04d8a68b18fccc568aeef2bf = new L.RegularPolygonMarker(\n",
              "                [48.077528, -1.7937325],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 45.29652824916252, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_aac8c43788ec1bcdef22b2ccc8aee050 = L.polyline(\n",
              "                [[48.108962, -1.705951], [48.109329, -1.707043]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4c6c0e86cf6bbed8eac32f8555a84fe0 = new L.RegularPolygonMarker(\n",
              "                [48.1091455, -1.7064970000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 206.71790586395173, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_14b5ed414fd41b71271ab747c8b08a0f = L.polyline(\n",
              "                [[48.124584, -1.702763], [48.124967, -1.700155]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c131ea05bffa9e3d3fb62861669a3066 = new L.RegularPolygonMarker(\n",
              "                [48.1247755, -1.701459],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -12.40867496617588, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57564a0cbb9b287d704e91a750d9558f = L.polyline(\n",
              "                [[48.077421, -1.793574], [48.077399, -1.793401]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_907856bd83f67ae887e0c5a32edd378c = L.polyline(\n",
              "                [[48.077399, -1.793401], [48.077536, -1.79297]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c223c141bbf9173a775114c6b7805ef5 = L.polyline(\n",
              "                [[48.077536, -1.79297], [48.077814, -1.792865]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ccd30afdbb3224906a101321c092173e = L.polyline(\n",
              "                [[48.077814, -1.792865], [48.078018, -1.793031]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_357fcf18ce534887e71f71c80d03761f = new L.RegularPolygonMarker(\n",
              "                [48.07757548008585, -1.7929550884567838],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -75.83722537630426, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c8aa5189f2de30b3e88bf96668ff41d2 = L.polyline(\n",
              "                [[48.109329, -1.707043], [48.109471, -1.707661]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_221c980409025cf514ea853d1f56ad89 = new L.RegularPolygonMarker(\n",
              "                [48.1094, -1.7073520000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 198.9896675762467, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ce5b98a88d95056655b287f97fe979ef = L.polyline(\n",
              "                [[48.11503, -1.692149], [48.113997, -1.693079]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b8f31e98302099b27cefc47a8e4ba5a7 = new L.RegularPolygonMarker(\n",
              "                [48.1145135, -1.6926139999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 121.00930658526391, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d02e24e6a5f0c88a27988dcaa6247ae5 = L.polyline(\n",
              "                [[48.078018, -1.793031], [48.082416, -1.789078]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9d0e8eb2e9b14db9542e50b5627e5240 = new L.RegularPolygonMarker(\n",
              "                [48.080217000000005, -1.7910545],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -59.01704830703278, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cf08af7e81d28e581a86f1b1136ace58 = L.polyline(\n",
              "                [[48.109471, -1.707661], [48.108926, -1.710198]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_34e8940fd25b6f19d87c407ebea88371 = new L.RegularPolygonMarker(\n",
              "                [48.1091985, -1.7089295],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 162.16661072080382, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_12ca30b2912f7460f0de54126428cfd5 = L.polyline(\n",
              "                [[48.124967, -1.700155], [48.126037, -1.692996]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_789e73fd29c0c52e95f76a88042f1d47 = new L.RegularPolygonMarker(\n",
              "                [48.125502, -1.6965755],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -12.623757086789595, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1c9d45acf98c41e96ee8c9d7ed8f4aed = L.polyline(\n",
              "                [[48.113997, -1.693079], [48.11283, -1.693421]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_74e814eb0e512700d6f6c80ab0205d6e = new L.RegularPolygonMarker(\n",
              "                [48.1134135, -1.69325],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 101.07094683084264, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fdbe7cfaa53ca747a789aa8e99aefbd7 = L.polyline(\n",
              "                [[48.108926, -1.710198], [48.10857, -1.711867]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2d74e8037e33fe8aa3b4348ad00e6c69 = new L.RegularPolygonMarker(\n",
              "                [48.108748, -1.7110325],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 162.28465071871503, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a1698ab58b4a3c8b7a6e3fadfa5cb447 = L.polyline(\n",
              "                [[48.094253, -1.690456], [48.094402, -1.690374]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f764678d91af77aea98afc7352f99c6b = L.polyline(\n",
              "                [[48.094402, -1.690374], [48.094519, -1.690317]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_af29e7094b32027c43157bcda802aba8 = L.polyline(\n",
              "                [[48.094519, -1.690317], [48.094719, -1.690222]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2fe07e0ae047248d416c11432d317ffa = L.polyline(\n",
              "                [[48.094719, -1.690222], [48.095682, -1.692122]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_71b495fdfda7e84dde4233f135232684 = new L.RegularPolygonMarker(\n",
              "                [48.09505214663793, -1.6908792986625918],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 217.19429939060672, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ed60b1624bcc9fd8b35f2bdef2405b83 = L.polyline(\n",
              "                [[48.10857, -1.711867], [48.108347, -1.712826]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_429221db107daec435a853c4d5108256 = new L.RegularPolygonMarker(\n",
              "                [48.1084585, -1.7123465],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 160.79972518205318, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_80850d30d3372e4d49bc0da9cb237cc4 = L.polyline(\n",
              "                [[48.11283, -1.693421], [48.11269, -1.693385]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4be38324d7495eddf29944513ece80ca = L.polyline(\n",
              "                [[48.11269, -1.693385], [48.112008, -1.693103]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5fb723e4bb0455ec10265e54682bdef4 = new L.RegularPolygonMarker(\n",
              "                [48.112417454342165, -1.6932723051678737],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 74.56636681769939, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2ef6bd9aed94a80930e65a790d32c846 = L.polyline(\n",
              "                [[48.108347, -1.712826], [48.107764, -1.715311]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_78be4cd3cb9017375702d5f624037067 = new L.RegularPolygonMarker(\n",
              "                [48.108055500000006, -1.7140685],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 160.64188912217787, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bea3d5519d33697289d83287368900e8 = L.polyline(\n",
              "                [[48.082416, -1.789078], [48.098695, -1.757549]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c07c85e7fe71fe446dbe2d5e559ff0ad = new L.RegularPolygonMarker(\n",
              "                [48.0905555, -1.7733135],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -37.71515899455727, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3c1008c7175a39b8f39b5b4d01d6b7b6 = L.polyline(\n",
              "                [[48.112008, -1.693103], [48.1109, -1.6927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_be43dc1715b3f61d9800a9e76dce64c6 = new L.RegularPolygonMarker(\n",
              "                [48.111454, -1.6929015],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 76.34987836306138, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_14e4b8eeda094d4758768f1ecd31e186 = L.polyline(\n",
              "                [[48.095682, -1.692122], [48.096348, -1.692637]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_55fd56dbddfb9dfda2eefe57f83a19ed = new L.RegularPolygonMarker(\n",
              "                [48.096014999999994, -1.6923795],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 242.68577871134374, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_06f22b7b3baaaa6d911144c5172fa595 = L.polyline(\n",
              "                [[48.107764, -1.715311], [48.107658, -1.715766]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d10c087b40d4b555a75695513b4f4977 = L.polyline(\n",
              "                [[48.107658, -1.715766], [48.107564, -1.716329]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b04b7ede28eee625fcd16202e4a23701 = L.polyline(\n",
              "                [[48.107564, -1.716329], [48.107535, -1.716471]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5b1665e757cee7223737c3294b691127 = L.polyline(\n",
              "                [[48.107535, -1.716471], [48.10745, -1.717096]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f961633f03bb1eb6daf7c1baf35d0f36 = new L.RegularPolygonMarker(\n",
              "                [48.1075863370767, -1.716195215168301],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 165.96160144875293, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_56eb89dbf394ef72bff15a358a86a157 = L.polyline(\n",
              "                [[48.1109, -1.6927], [48.110579, -1.692731]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_aed6415b45ec0b8e51ca9698d57e0e83 = new L.RegularPolygonMarker(\n",
              "                [48.1107395, -1.6927155],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 93.68940786083746, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2a8f411265a9e9d90a52189409f08024 = L.polyline(\n",
              "                [[48.096348, -1.692637], [48.098679, -1.694542]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_10cd9ff42c5379829064ddafc2eb53a1 = new L.RegularPolygonMarker(\n",
              "                [48.0975135, -1.6935894999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 241.3745660664049, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_45971a29c7e0717e7c8214d8e1f99fa3 = L.polyline(\n",
              "                [[48.10745, -1.717096], [48.107387, -1.717553]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4e2e9f2d467e0b6276f86b4ee9363786 = new L.RegularPolygonMarker(\n",
              "                [48.1074185, -1.7173245000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 168.33521937016565, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bf4785699378480c050c26a1199dc617 = L.polyline(\n",
              "                [[48.110579, -1.692731], [48.110494, -1.692738]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ab1008f27cf300eb6ce14ec75154a21d = L.polyline(\n",
              "                [[48.110494, -1.692738], [48.110036, -1.692796]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_88d00a26bc0ac840e2a5f8ef5a10af4b = new L.RegularPolygonMarker(\n",
              "                [48.110307412333256, -1.692761629005833],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.83321495826743, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8bf79f8e7665d9827a89a0abbcffcc52 = L.polyline(\n",
              "                [[48.107387, -1.717553], [48.107283, -1.718662]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b85f158fd177dbb440342b1eca21471 = new L.RegularPolygonMarker(\n",
              "                [48.107335000000006, -1.7181075],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 172.00598096663947, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_092aa904e33bd84e52c7b52b9e64d2dd = L.polyline(\n",
              "                [[48.110036, -1.692796], [48.109744, -1.692837]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_97bceeb476feb3d359f71fec6749eef2 = new L.RegularPolygonMarker(\n",
              "                [48.10989, -1.6928165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 95.35600889854044, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f03c65d4fb046b74b92ec2a613876f75 = L.polyline(\n",
              "                [[48.107283, -1.718662], [48.107254, -1.71928]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9f5600dd0aac4f56c1a9795a5b4d23c6 = new L.RegularPolygonMarker(\n",
              "                [48.1072685, -1.7189709999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 175.98035486118852, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_81d9d97ef3da7d80fe453a1534af7a19 = L.polyline(\n",
              "                [[48.126037, -1.692996], [48.126066, -1.692813]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_67445d5dd96a18252525c251ef9a0c08 = new L.RegularPolygonMarker(\n",
              "                [48.1260515, -1.6929045],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -13.355419875053343, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_595ae4acb6a9bd41d599a4327c805933 = L.polyline(\n",
              "                [[48.109744, -1.692837], [48.108948, -1.692932]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dc233a2db200ae24d6085d0ad10a0c31 = new L.RegularPolygonMarker(\n",
              "                [48.109346, -1.6928845],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.55625865719233, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_87b540ce88261ddcdb5f114c0b9146f2 = L.polyline(\n",
              "                [[48.126066, -1.692813], [48.126897, -1.68754]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_35ec64809b44636b91e92dc8ed386a98 = new L.RegularPolygonMarker(\n",
              "                [48.1264815, -1.6901765],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -13.286329816718904, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f7e96c6f87e07b431946efae38e2aecc = L.polyline(\n",
              "                [[48.107254, -1.71928], [48.107167, -1.722714]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9c315b47ff02536ef392d6e05091eba4 = new L.RegularPolygonMarker(\n",
              "                [48.107210499999994, -1.720997],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.82844354928773, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fcae2f7325692673276e254b10a3b680 = L.polyline(\n",
              "                [[48.108948, -1.692932], [48.108581, -1.692976]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4467d4f6780cd08676a90e3601ce72b2 = L.polyline(\n",
              "                [[48.108581, -1.692976], [48.108136, -1.693042]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_42990bbf8d2eb01dbf2a8db75389ef85 = L.polyline(\n",
              "                [[48.108136, -1.693042], [48.108042, -1.693056]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_60cfcc16eda67a5e3bef97eda29a4e1b = new L.RegularPolygonMarker(\n",
              "                [48.108494687149005, -1.6929888014565526],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 95.65576834725715, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0cf68448815f55a54d34b398581ffa04 = L.polyline(\n",
              "                [[48.107167, -1.722714], [48.107134, -1.723906]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2f4d366f4c8320f6c8012e977667d7c0 = new L.RegularPolygonMarker(\n",
              "                [48.1071505, -1.7233100000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.62631370301807, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fcdfc989acd770b6e4ea4df865d5393a = L.polyline(\n",
              "                [[48.108042, -1.693056], [48.107729, -1.693102]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6dede676dcc7ffb5d23588630cafefad = new L.RegularPolygonMarker(\n",
              "                [48.107885499999995, -1.693079],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 95.60467074093512, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_150c7d614adcffc8825e2cb475958935 = L.polyline(\n",
              "                [[48.098679, -1.694542], [48.098747, -1.694495]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_363589a49ecec86902584a4c1e26970f = L.polyline(\n",
              "                [[48.098747, -1.694495], [48.100087, -1.694448]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7efdb082ee8a544fcaeab65d6f42043b = new L.RegularPolygonMarker(\n",
              "                [48.09937954303458, -1.6944728137890857],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -88.658152599012, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9d7134f578147b7e4dd2541272ad0acc = L.polyline(\n",
              "                [[48.107729, -1.693102], [48.10767, -1.693109]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_806c0417b7bc5f011f1a2cdf265f5bc8 = L.polyline(\n",
              "                [[48.10767, -1.693109], [48.106744, -1.693223]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5e3f854977f73dbbcee2378ba187d1a7 = new L.RegularPolygonMarker(\n",
              "                [48.10723649290462, -1.6931623691240536],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.6995003185688, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_358ea2f32c04d652f75f541275264fd2 = L.polyline(\n",
              "                [[48.107134, -1.723906], [48.10703, -1.727083]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_800c045d9644338698c776a115919fe1 = new L.RegularPolygonMarker(\n",
              "                [48.107082000000005, -1.7254945],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.1945635568352, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ff88fcbc651036e7204e35247174bbd4 = L.polyline(\n",
              "                [[48.106744, -1.693223], [48.106241, -1.693287]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4418144f73effd05451563152dde0a76 = new L.RegularPolygonMarker(\n",
              "                [48.1064925, -1.693255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.85632504115196, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c42fc82f75b02b55d7270c530e534d11 = L.polyline(\n",
              "                [[48.126897, -1.68754], [48.127061, -1.686548]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dc80a8ed8b2141c8aabe1e42de4faa05 = new L.RegularPolygonMarker(\n",
              "                [48.126979, -1.687044],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -13.91148920735489, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fb066c8893f454ac7d538192a43a5569 = L.polyline(\n",
              "                [[48.100087, -1.694448], [48.100402, -1.69454]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_52a163b6bca9c0e87b5cd68d3a0322a1 = new L.RegularPolygonMarker(\n",
              "                [48.1002445, -1.694494],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 258.96314376006734, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d96fc2578904f26dc1f011a1ef4f4a34 = L.polyline(\n",
              "                [[48.106241, -1.693287], [48.105641, -1.693361]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6bc34c27a366c253c6c4047f62817643 = new L.RegularPolygonMarker(\n",
              "                [48.105941, -1.693324],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 94.70808209938068, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_83d765194fa4dbb4e7a2063c5359b2ba = L.polyline(\n",
              "                [[48.10703, -1.727083], [48.106817, -1.729587]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fbdcee6c75dcf7c2139c5964699a8138 = new L.RegularPolygonMarker(\n",
              "                [48.1069235, -1.728335],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 172.74111125998422, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cb4effb20ef7591b497c4267881cf9c2 = L.polyline(\n",
              "                [[48.100402, -1.69454], [48.102984, -1.694308]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dfce7688a1ef4d77c1ae58598a9040fb = new L.RegularPolygonMarker(\n",
              "                [48.101693, -1.694424],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -86.56618953561676, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7a3a85aed82ce96be36ebb23378b49d7 = L.polyline(\n",
              "                [[48.127061, -1.686548], [48.127089, -1.68642]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d78ca41f0dae5e0c76fe349a0217456f = L.polyline(\n",
              "                [[48.127089, -1.68642], [48.127514, -1.68483]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6eba36724e57cfe76ccaefdeee39148b = new L.RegularPolygonMarker(\n",
              "                [48.12728478590559, -1.6856875303767327],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -21.824528625037544, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6a27841c8e84ae191ae4a8627eeeffc7 = L.polyline(\n",
              "                [[48.105641, -1.693361], [48.105149, -1.693432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f5b1688fdf77e30eb8dee54299a86ad6 = L.polyline(\n",
              "                [[48.105149, -1.693432], [48.105028, -1.693461]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_baf8872897527e4e180b40e44662f1f1 = new L.RegularPolygonMarker(\n",
              "                [48.105334009700286, -1.6934053014456907],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 95.50428681380646, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_96021a3cf3b3fbbdeecccb36ebcb8367 = L.polyline(\n",
              "                [[48.106817, -1.729587], [48.106608, -1.73069]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_faf1b05cbb8e8b13c1b94073b0c24bb8 = new L.RegularPolygonMarker(\n",
              "                [48.1067125, -1.7301385],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 164.15828726873247, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0989c8992a47a47b3699ac61b4d30780 = L.polyline(\n",
              "                [[48.105028, -1.693461], [48.104988, -1.693471]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5ec572d23f7bf0bc6fb883b83a79e1b8 = L.polyline(\n",
              "                [[48.104988, -1.693471], [48.103539, -1.693989]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_37291e96d56b29cfee1d3b1493ac0bf8 = new L.RegularPolygonMarker(\n",
              "                [48.10428322100027, -1.6937229499805775],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 103.42668478164916, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f8b91103b772f2d6d32cd0e86fd5cd8c = L.polyline(\n",
              "                [[48.127514, -1.68483], [48.127656, -1.684232]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3b220e34ddc485699b232a8661c39dd2 = new L.RegularPolygonMarker(\n",
              "                [48.127584999999996, -1.684531],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -19.583563890154977, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e8c28b06b96e8131f2d827ed89b1e270 = L.polyline(\n",
              "                [[48.106608, -1.73069], [48.106289, -1.732024]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_48e30fd20e6a2b9e6347db0a323837c4 = new L.RegularPolygonMarker(\n",
              "                [48.1064485, -1.731357],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 160.29732078321985, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e841fe2e5e85cd4c29eab4091b7c688a = L.polyline(\n",
              "                [[48.127656, -1.684232], [48.127816, -1.683429]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_41427f17c3f2f352abfa4ce9bb727d56 = new L.RegularPolygonMarker(\n",
              "                [48.127736, -1.6838305],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -16.621637460503365, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a6a0f5ced687c5dacc20eb83c9f98434 = L.polyline(\n",
              "                [[48.106289, -1.732024], [48.106032, -1.73284]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_65c93781384c503bf50c0ec8a3d5ce98 = new L.RegularPolygonMarker(\n",
              "                [48.1061605, -1.732432],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 154.74900904877705, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ef9bb6134bcbecc477021550641be24f = L.polyline(\n",
              "                [[48.127816, -1.683429], [48.127835, -1.683328]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2d6759c2af8df5b84558826986e096e1 = L.polyline(\n",
              "                [[48.127835, -1.683328], [48.12794, -1.682867]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_358094b19ee6a82786a898be7eb75609 = L.polyline(\n",
              "                [[48.12794, -1.682867], [48.130613, -1.676472]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cd1ce3499a2bf758db9b8c769fe6746d = new L.RegularPolygonMarker(\n",
              "                [48.12917157489365, -1.6799205273307602],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -32.058675516538116, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c6184a048362894afd674fc32608fbdd = L.polyline(\n",
              "                [[48.106032, -1.73284], [48.105975, -1.733007]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a8df5a6539d6945ca4d736fc3d1df278 = new L.RegularPolygonMarker(\n",
              "                [48.1060035, -1.7329235],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 152.9265812341942, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7ab37eb2b988aa7ca4714054da837dfe = L.polyline(\n",
              "                [[48.103539, -1.693989], [48.103334, -1.694081]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c44c32bab62a058acd79c82680276bbd = new L.RegularPolygonMarker(\n",
              "                [48.1034365, -1.694035],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 106.6829916700296, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_41a29e01db3be3569bfe4b961928be75 = L.polyline(\n",
              "                [[48.105975, -1.733007], [48.105409, -1.734611]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d1a7155d0851dd184d2414f73ced873a = new L.RegularPolygonMarker(\n",
              "                [48.105692000000005, -1.733809],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 152.14700211013457, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_25cbe7c5b32f0beba2a49844980f9a7a = L.polyline(\n",
              "                [[48.102984, -1.694308], [48.103334, -1.694081]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4fc92be6f8e0fe78a780c73a1ceafbcf = new L.RegularPolygonMarker(\n",
              "                [48.103159, -1.6941945],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -66.58214162882875, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_657cc4315d567f65a9649614a8576379 = L.polyline(\n",
              "                [[48.103334, -1.694081], [48.102984, -1.694308]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3d22840241b701c36e0a82b76a9a6a4f = L.polyline(\n",
              "                [[48.102984, -1.694308], [48.100244, -1.694531]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_84322313dd9cdfcce851a99f6ef80928 = new L.RegularPolygonMarker(\n",
              "                [48.101804516449405, -1.694403994464154],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 93.11111005377589, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c27aeee64d2cd0e2907cfd7cc7cbdacf = L.polyline(\n",
              "                [[48.103334, -1.694081], [48.103539, -1.693989]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f5c3fe0a27d6c752194f889f04d5f2ed = L.polyline(\n",
              "                [[48.103539, -1.693989], [48.104988, -1.693471]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fc3dde75a6e3c89d30fba3d4d21940b6 = new L.RegularPolygonMarker(\n",
              "                [48.1041594116371, -1.6937672103326316],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -76.57370079747446, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_da8e9f3a834fc918229189e9f131f558 = L.polyline(\n",
              "                [[48.105409, -1.734611], [48.104975, -1.736362]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d267cb36309a6c4d0c9b5da79b74d9b7 = L.polyline(\n",
              "                [[48.104975, -1.736362], [48.104889, -1.739152]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_335310a9ebc6889609ab41ea306524c4 = new L.RegularPolygonMarker(\n",
              "                [48.10496074477621, -1.7368244659812246],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.35812588522094, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c8e1c342e7b2ebdbfb06b5ee0a48d6ad = L.polyline(\n",
              "                [[48.104988, -1.693471], [48.105028, -1.693461]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ec06fa7e19a4cc1bae766331454d63b5 = L.polyline(\n",
              "                [[48.105028, -1.693461], [48.105149, -1.693432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_af909fae2b6389e9395ea6e57c260f96 = L.polyline(\n",
              "                [[48.105149, -1.693432], [48.105641, -1.693361]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5fe5808df16e5e35438caee1d474328e = new L.RegularPolygonMarker(\n",
              "                [48.1053138253277, -1.6934082142311648],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -84.49576603677563, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_832ed3433f0a7d7375dbfeb01272e4a0 = L.polyline(\n",
              "                [[48.104889, -1.739152], [48.104909, -1.73969]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fcc31b1c8eafb49ee7996d3f6718a72e = new L.RegularPolygonMarker(\n",
              "                [48.104899, -1.739421],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 183.18656953421117, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_38e5b3f5e681b50ba3e40c32cb3d81f2 = L.polyline(\n",
              "                [[48.105641, -1.693361], [48.106241, -1.693287]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b6185e6e0751db09768a033b3cbabbec = new L.RegularPolygonMarker(\n",
              "                [48.105941, -1.693324],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -85.29197298478395, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a4ec36df247ebd35cff844f8469a7820 = L.polyline(\n",
              "                [[48.104909, -1.73969], [48.10491, -1.739835]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_42dcc21177ce2a4254c7263a3ac39710 = L.polyline(\n",
              "                [[48.10491, -1.739835], [48.104961, -1.741847]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_54ab795a924d6076506421e6712a92a9 = new L.RegularPolygonMarker(\n",
              "                [48.104933663492716, -1.7407685479871688],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 182.17460338853357, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_366d5f2551544e524b023881f49ff618 = L.polyline(\n",
              "                [[48.100244, -1.694531], [48.100087, -1.694448]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_defbd06ba673ba6d152f65bc6158addb = L.polyline(\n",
              "                [[48.100087, -1.694448], [48.098747, -1.694495]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_61fbe9ec2c1da96a843f854a87c7a594 = new L.RegularPolygonMarker(\n",
              "                [48.099500253645516, -1.6944685799094485],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 91.34188238330648, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_50aebbbabfb7278a4105c22049825679 = L.polyline(\n",
              "                [[48.106241, -1.693287], [48.106744, -1.693223]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9c3c46c7d522c08a67be4035eed1805a = new L.RegularPolygonMarker(\n",
              "                [48.1064925, -1.693255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -85.14372259961802, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5b344bca9026788f31302a64cac9b82e = L.polyline(\n",
              "                [[48.104961, -1.741847], [48.104992, -1.743596]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_12eaabbeb28197f0bfdc16f5bb699fb3 = new L.RegularPolygonMarker(\n",
              "                [48.10497650000001, -1.7427215],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 181.5210830047563, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d285ff263c98763f91c31acdbc0ffd2c = L.polyline(\n",
              "                [[48.106744, -1.693223], [48.10767, -1.693109]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4ba324801a4faee53ef895f3a15be1e3 = new L.RegularPolygonMarker(\n",
              "                [48.107207, -1.693166],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -85.30058454253547, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8dde56667f1476e0fdd1a2d2e0824864 = L.polyline(\n",
              "                [[48.130613, -1.676472], [48.130631, -1.676393]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0b3101d2ea86d70445a9bdd8d77c667e = L.polyline(\n",
              "                [[48.130631, -1.676393], [48.131203, -1.673965]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a0e9dd020608c1e8afc35189c5100afb = new L.RegularPolygonMarker(\n",
              "                [48.130907727533845, -1.6752183593493533],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -19.442543645718203, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cb17ceb1f3acd81375c10e864e897644 = L.polyline(\n",
              "                [[48.098747, -1.694495], [48.098679, -1.694542]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3f4bcb22e9a420d7d63ee6c7babd2b0c = L.polyline(\n",
              "                [[48.098679, -1.694542], [48.096348, -1.692637]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_078b5b0a5990358d55ba40b9305287cc = new L.RegularPolygonMarker(\n",
              "                [48.09754636477477, -1.6936163585997182],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 61.37314820816289, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_01513fe04f41fb7b79e648fbffa048c0 = L.polyline(\n",
              "                [[48.104992, -1.743596], [48.104421, -1.750072]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cb5a4de2338dbb4d1937e6132a6b3aec = new L.RegularPolygonMarker(\n",
              "                [48.104706500000006, -1.746834],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 172.4806570603315, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_84499e7237ae8e9dbc4e8eafe4e7afd1 = L.polyline(\n",
              "                [[48.10767, -1.693109], [48.107729, -1.693102]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a3d57450bf6805f5ab1958535aba667e = L.polyline(\n",
              "                [[48.107729, -1.693102], [48.108042, -1.693056]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0ae080555134235e196637f6dd901a34 = L.polyline(\n",
              "                [[48.108042, -1.693056], [48.108136, -1.693042]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dcee83e6ae37ea67197dc5e7adad5e3e = L.polyline(\n",
              "                [[48.108136, -1.693042], [48.108581, -1.692976]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b0be84a8a97389b47d4054161ce1131c = new L.RegularPolygonMarker(\n",
              "                [48.10812556428944, -1.6930435542547644],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -84.32068412894009, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fd103b2d1b29f7abcd743a6c7b480730 = L.polyline(\n",
              "                [[48.131203, -1.673965], [48.131358, -1.673031]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2f92f86865fba45215ca69c81f577184 = new L.RegularPolygonMarker(\n",
              "                [48.1312805, -1.673498],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -13.963557850598903, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0e35b43e9426928af69171501a7928ca = L.polyline(\n",
              "                [[48.098695, -1.757549], [48.101664, -1.75364]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_70f756bb71617a9d6d8f32abd1c90764 = new L.RegularPolygonMarker(\n",
              "                [48.100179499999996, -1.7555945],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -48.67730457396776, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_12170cc350562f864d32157326a1a350 = L.polyline(\n",
              "                [[48.108581, -1.692976], [48.108948, -1.692932]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e37a43a1f1e2926358c42c18c78a52a0 = new L.RegularPolygonMarker(\n",
              "                [48.1087645, -1.692954],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -85.42305117703191, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5e16d1572bf3118120780c59022c6893 = L.polyline(\n",
              "                [[48.131358, -1.673031], [48.131375, -1.672675]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b92a4afd2937f7e872495aab02e1d2d9 = new L.RegularPolygonMarker(\n",
              "                [48.1313665, -1.672853],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -4.092547582904999, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7c2b3ac4389ad90cd7868b222909221f = L.polyline(\n",
              "                [[48.108948, -1.692932], [48.109744, -1.692837]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b95145884535f7af1f9b85149edd9a36 = new L.RegularPolygonMarker(\n",
              "                [48.109346, -1.6928845],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -85.44381206274106, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_81a4b087cb9145cfd4fb98f644b37e4e = L.polyline(\n",
              "                [[48.131375, -1.672675], [48.131378, -1.672599]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_81ba6b52e2291bacc246ce5fda7fc727 = L.polyline(\n",
              "                [[48.131378, -1.672599], [48.131379, -1.672513]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_042e7f044b1e871ea7573505ace63fc8 = L.polyline(\n",
              "                [[48.131379, -1.672513], [48.131379, -1.672379]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2945a0898a8b4a989518a8877798eac9 = L.polyline(\n",
              "                [[48.131379, -1.672379], [48.128751, -1.665415]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d6fc5102e968444bbb57aa7e61eb380b = new L.RegularPolygonMarker(\n",
              "                [48.13011367560622, -1.6690259866520893],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 29.481073901975094, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9321b364f4487fdf351a9540aa0b4024 = L.polyline(\n",
              "                [[48.109744, -1.692837], [48.110036, -1.692796]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_314104614184855368157a59d0e52349 = new L.RegularPolygonMarker(\n",
              "                [48.10989, -1.6928165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -84.64402162289537, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e7736bc7e6714dde1a0f05e7462cee62 = L.polyline(\n",
              "                [[48.096348, -1.692637], [48.095682, -1.692122]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_eb9178dba323d2fdd33bbfa81a584158 = new L.RegularPolygonMarker(\n",
              "                [48.096014999999994, -1.6923795],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 62.68539541477003, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a46894d500a5aedb4f638e9f483e1858 = L.polyline(\n",
              "                [[48.104421, -1.750072], [48.104286, -1.750252]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9855e24a83c0fa45d06de5c3048cac69 = new L.RegularPolygonMarker(\n",
              "                [48.1043535, -1.750162],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 131.68091284363427, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2b80701455166086c1145028143df358 = L.polyline(\n",
              "                [[48.110036, -1.692796], [48.110494, -1.692738]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6bfd56df240925f1d0a4b47f5c466a23 = new L.RegularPolygonMarker(\n",
              "                [48.110265, -1.692767],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -85.16682821875347, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4648a64d78c80a17d6ef4ef9dedd76e6 = L.polyline(\n",
              "                [[48.104286, -1.750252], [48.104204, -1.750367]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_aae32886381e9cb80b4299cf8c718b79 = L.polyline(\n",
              "                [[48.104204, -1.750367], [48.101866, -1.753619]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_344f3ca315901cb167bbfc12e42dc7a8 = new L.RegularPolygonMarker(\n",
              "                [48.10307615750037, -1.7519357526983814],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 132.88884078506908, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_81ab8dc529c30a1bfd9bd5838177b6bf = L.polyline(\n",
              "                [[48.095682, -1.692122], [48.094719, -1.690222]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7913b1093601d8a0fa655c59461b5fde = new L.RegularPolygonMarker(\n",
              "                [48.0952005, -1.691172],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 37.192885305010705, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_99898f82d46901895037f9393934b022 = L.polyline(\n",
              "                [[48.110494, -1.692738], [48.110579, -1.692731]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_93afafddec672df0193c5f01335ef5f6 = L.polyline(\n",
              "                [[48.110579, -1.692731], [48.1109, -1.6927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_235b2ced84d2703d50784d0d2be4fe4b = new L.RegularPolygonMarker(\n",
              "                [48.1106970241562, -1.6927196020285291],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -86.31061521665632, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ec503a8da34fb2a946e8b0ce49952460 = L.polyline(\n",
              "                [[48.101664, -1.75364], [48.102804, -1.751852]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7ba9fd66ee856fc9b7ecf04a7865365d = new L.RegularPolygonMarker(\n",
              "                [48.102233999999996, -1.7527460000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -43.67450842335439, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1fb1884631c6113f41ce8c6740c41b7b = L.polyline(\n",
              "                [[48.1109, -1.6927], [48.112008, -1.693103]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e195e1dbb5b1f18d6054266781488f6b = new L.RegularPolygonMarker(\n",
              "                [48.111454, -1.6929015],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 256.3501783744117, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e23556417ce8d39e36903b87d8c6ae81 = L.polyline(\n",
              "                [[48.102804, -1.751852], [48.104035, -1.750285]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a0ef2d0822b79479366fa5e437a9642d = new L.RegularPolygonMarker(\n",
              "                [48.1034195, -1.7510685000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -49.63404700784947, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f5596fc886a01a7516cffa68497748d4 = L.polyline(\n",
              "                [[48.094719, -1.690222], [48.094519, -1.690317]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bf9608ac49dc2362bd15335c59763ac6 = new L.RegularPolygonMarker(\n",
              "                [48.094618999999994, -1.6902694999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 107.60185633849923, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3f583ebf7ae0d33dee5867aa1b90d1fb = L.polyline(\n",
              "                [[48.112008, -1.693103], [48.11269, -1.693385]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c0a094bbed23555e2532872a30ea8278 = new L.RegularPolygonMarker(\n",
              "                [48.112349, -1.693244],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 254.5665767541716, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_adfe5cff278cf829e627ecd5378dde39 = L.polyline(\n",
              "                [[48.094519, -1.690317], [48.094402, -1.690374]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6d7892d99118ebaa63a96f511bc275ad = new L.RegularPolygonMarker(\n",
              "                [48.0944605, -1.6903455],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 108.02435892101218, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8efe6467a68149686a068fdd43d06e02 = L.polyline(\n",
              "                [[48.101866, -1.753619], [48.101687, -1.753905]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_522d1c7fd1811a58758782ee14ca352f = new L.RegularPolygonMarker(\n",
              "                [48.1017765, -1.753762],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 136.8567254808089, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3734aaccee107f30e1b3174136a8a698 = L.polyline(\n",
              "                [[48.094402, -1.690374], [48.094253, -1.690456]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6f13a5921f3602cbee8ae32d0ae32fcb = new L.RegularPolygonMarker(\n",
              "                [48.094327500000006, -1.690415],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 110.18207334487084, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_71cbfb7e27c5c0fd522560a9e244ad72 = L.polyline(\n",
              "                [[48.101687, -1.753905], [48.100301, -1.756]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_40bd17ad71aacd7a800ad8682a00a786 = new L.RegularPolygonMarker(\n",
              "                [48.100994, -1.7549525],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 135.26990874342562, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_91dc75072d7dc818df0e112f731ad360 = L.polyline(\n",
              "                [[48.104035, -1.750285], [48.104263, -1.75]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e541c84a8cca341cbe3f9d7f212a4ba1 = new L.RegularPolygonMarker(\n",
              "                [48.10414900000001, -1.7501425],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -50.14756625052161, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ac7a93e27eaf0cd65d6351efe486a6bf = L.polyline(\n",
              "                [[48.094253, -1.690456], [48.092385, -1.691514]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4405f9f6d6d458375b296a619d7f1d87 = new L.RegularPolygonMarker(\n",
              "                [48.093319, -1.690985],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 110.72187021154295, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e81978506f33bd54d077567bd619a9c1 = L.polyline(\n",
              "                [[48.104263, -1.75], [48.104896, -1.744154]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_08698e2c5f5a710f632ffb7194301113 = new L.RegularPolygonMarker(\n",
              "                [48.1045795, -1.747077],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -9.212503524019723, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7e0e3bc535c577f3a5a117c4acc9b531 = L.polyline(\n",
              "                [[48.11269, -1.693385], [48.11283, -1.693421]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2b63eb52eb179f49afe99a2d5841858c = L.polyline(\n",
              "                [[48.11283, -1.693421], [48.113006, -1.695026]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b24523923379df06aff6a25c1552edcc = new L.RegularPolygonMarker(\n",
              "                [48.11290652178972, -1.6941188265482814],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 189.3275922075826, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_85fa19a123327def28d1b3a1980ed4a0 = L.polyline(\n",
              "                [[48.100301, -1.756], [48.09863, -1.75779]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c6d5b665021d021be0ad8c55c35d1e7d = new L.RegularPolygonMarker(\n",
              "                [48.0994655, -1.756895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 125.58058086132351, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_081898109a9497d2abe209187869824e = L.polyline(\n",
              "                [[48.128751, -1.665415], [48.128137, -1.66447]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f9bfa965f34c11a975ea04a6e8de4093 = new L.RegularPolygonMarker(\n",
              "                [48.128444, -1.6649425],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 44.22857939515211, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f40ad5a18125ab05baa4a9935dcc5e72 = L.polyline(\n",
              "                [[48.113006, -1.695026], [48.113348, -1.696204]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a29a8d1caf9bed72aecb2ead91126379 = new L.RegularPolygonMarker(\n",
              "                [48.113177, -1.695615],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.50153253607607, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b96e8efd7193a55ba90cb9127f2d72be = L.polyline(\n",
              "                [[48.092385, -1.691514], [48.092018, -1.691744]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dea0f7f1930aecfbeb83acbe7be6ed55 = new L.RegularPolygonMarker(\n",
              "                [48.0922015, -1.6916289999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 112.71408349453847, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_16e04538c6c72b55debef78c046a5e73 = L.polyline(\n",
              "                [[48.128137, -1.66447], [48.128041, -1.664503]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3a29203f5c9e579c8942b8282a0137a8 = L.polyline(\n",
              "                [[48.128041, -1.664503], [48.127425, -1.664856]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_91caba3829ac1783cacca6107a91194b = new L.RegularPolygonMarker(\n",
              "                [48.127778986551654, -1.6646531473169932],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 110.93179644373043, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8b9d87f54f02224ec0a63eb9cd798cc4 = L.polyline(\n",
              "                [[48.104896, -1.744154], [48.104867, -1.743028]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f5010dc4ad8cf12ade65e6ca712d836f = new L.RegularPolygonMarker(\n",
              "                [48.1048815, -1.743591],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.208301063700361, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a1e85ba29d537547dfae91f4b2da81f6 = L.polyline(\n",
              "                [[48.092018, -1.691744], [48.090669, -1.692536]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_63a7f399a5c713eab41c40bb8733f1f2 = new L.RegularPolygonMarker(\n",
              "                [48.0913435, -1.69214],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 111.41300037298254, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_720fa9156fca43922bc1ca061e17e8d6 = L.polyline(\n",
              "                [[48.09863, -1.75779], [48.098423, -1.757969]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f4b07680bd17273e45a04e29448160ed = new L.RegularPolygonMarker(\n",
              "                [48.0985265, -1.7578795],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.00711350312056, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_77a1640b90932cf05a1d6af9a014e1a9 = L.polyline(\n",
              "                [[48.113348, -1.696204], [48.113275, -1.696246]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1c5eccb1328ff02ba7dc41a0effed793 = L.polyline(\n",
              "                [[48.113275, -1.696246], [48.112687, -1.693424]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bc4681369f60866e7a9c53b5c8047122 = new L.RegularPolygonMarker(\n",
              "                [48.11299262096392, -1.6948907727213904],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 17.33091624319526, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_801f7c50d8822dff00c9b4582551de75 = L.polyline(\n",
              "                [[48.098423, -1.757969], [48.088766, -1.779844]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8891f9ce4b62e01fd91dda40b78d4646 = new L.RegularPolygonMarker(\n",
              "                [48.093594499999995, -1.7689065],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.54519583034266, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e5b719ef60d99404b31799fa9a60b8c0 = L.polyline(\n",
              "                [[48.104867, -1.743028], [48.10482, -1.741252]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_68b5137274358ceab170f331f650d59e = new L.RegularPolygonMarker(\n",
              "                [48.1048435, -1.74214],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.268804868221139, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ae793b7b43a0e0b0af1359f408cc0292 = L.polyline(\n",
              "                [[48.127425, -1.664856], [48.12723, -1.665026]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2471a4241873d7374c54107994f2500f = L.polyline(\n",
              "                [[48.12723, -1.665026], [48.126523, -1.665478]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ec91e1f5cae6242cacdac30e8836c8ee = new L.RegularPolygonMarker(\n",
              "                [48.12698028465712, -1.665185648281443],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 113.10986376843101, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d5396f9edddea226717bf0c202f2f8a0 = L.polyline(\n",
              "                [[48.10482, -1.741252], [48.104802, -1.739857]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2f6f76c698fce6f49ad2a0d0c7c50ab1 = new L.RegularPolygonMarker(\n",
              "                [48.104811, -1.7405545],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 1.106461244385244, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_841080a4f7654c9e53b4f30b938a9331 = L.polyline(\n",
              "                [[48.126523, -1.665478], [48.126003, -1.665814]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cedf8a9687ab3903fa9a85bafd84ffda = new L.RegularPolygonMarker(\n",
              "                [48.126262999999994, -1.665646],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 113.33076205062349, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cb5a95ec6fe28ba92e78e82714e63eba = L.polyline(\n",
              "                [[48.090669, -1.692536], [48.090324, -1.692741]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2cb8e48aefc79b4602de0cebb4e9e237 = new L.RegularPolygonMarker(\n",
              "                [48.0904965, -1.6926385000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 111.64827321202537, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bae10efd5b2b85ddea555521cf93111a = L.polyline(\n",
              "                [[48.104802, -1.739857], [48.104798, -1.739748]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e881315faf90a682921d416b44213f71 = L.polyline(\n",
              "                [[48.104798, -1.739748], [48.104867, -1.736315]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3262f28d544ec66956969f7bb98536c1 = new L.RegularPolygonMarker(\n",
              "                [48.10483140345237, -1.7380860572175703],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.7252888375102629, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c09466ddc2638ee9a82eb9fd10dfc2f6 = L.polyline(\n",
              "                [[48.126003, -1.665814], [48.125144, -1.666769]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_390e8d58dfa8f28dbfc55c9aeee48073 = new L.RegularPolygonMarker(\n",
              "                [48.1255735, -1.6662914999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 126.57941649625207, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ae5972f988a78d466768d78cf0d2a630 = L.polyline(\n",
              "                [[48.090324, -1.692741], [48.088587, -1.693779]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0394e1378d60163c313a7efebb9883d9 = new L.RegularPolygonMarker(\n",
              "                [48.0894555, -1.69326],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 111.76061933477177, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6d9cabd5d68449b24078b040a2630045 = L.polyline(\n",
              "                [[48.125144, -1.666769], [48.124894, -1.667137]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_699f50ab289b8c33ee8e8f66af520048 = new L.RegularPolygonMarker(\n",
              "                [48.125018999999995, -1.666953],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.49645668834387, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4b3345c19cd6b2d7853ace777596307c = L.polyline(\n",
              "                [[48.104867, -1.736315], [48.105313, -1.734574]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_587af5363857231d56f462f3886b9d98 = new L.RegularPolygonMarker(\n",
              "                [48.105090000000004, -1.7354445],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -20.98891332996203, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_aa3b83403b3c648c3cc56b920b90a56f = L.polyline(\n",
              "                [[48.124894, -1.667137], [48.124864, -1.667097]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_732543641cb67324cc56f0a91b6433de = L.polyline(\n",
              "                [[48.124864, -1.667097], [48.124834, -1.66706]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ba05d5dc768b0a76d39adfbb1617b070 = L.polyline(\n",
              "                [[48.124834, -1.66706], [48.123783, -1.665571]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9019a148152da729f6142173b04480db = new L.RegularPolygonMarker(\n",
              "                [48.124337201909434, -1.6663561633141217],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 46.597975361919566, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b1fae9c8d739e968c461105001eea67c = L.polyline(\n",
              "                [[48.105313, -1.734574], [48.10589, -1.732863]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_944447c440d3bfc4630ee5cd33697b39 = new L.RegularPolygonMarker(\n",
              "                [48.105601500000006, -1.7337185000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -26.79516440049158, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d8fe35dd1781950cc89ab9f00fcb057d = L.polyline(\n",
              "                [[48.088587, -1.693779], [48.086443, -1.69506]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d3ea54c5df91cc355facceb3755d6206 = new L.RegularPolygonMarker(\n",
              "                [48.087514999999996, -1.6944195],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 111.75812979609205, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_88c1a44cce5fbf9a02419aba5f4e78eb = L.polyline(\n",
              "                [[48.10589, -1.732863], [48.1065, -1.730642]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_73365fbaa8c961610184fc8eca5adafb = new L.RegularPolygonMarker(\n",
              "                [48.106195, -1.7317525],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -22.35853199956091, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ed660230d26f7127b3c455e45b4836b7 = L.polyline(\n",
              "                [[48.123783, -1.665571], [48.12334, -1.664937]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7c1c44776eedf3d75f7135f725ca51a9 = L.polyline(\n",
              "                [[48.12334, -1.664937], [48.123044, -1.664533]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_217d8fc52d07c9e149d91050b29d1745 = new L.RegularPolygonMarker(\n",
              "                [48.12341674021202, -1.6650468268497163],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 46.308434811096674, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6f9df9068fe8e6c0016cea6e29b6b197 = L.polyline(\n",
              "                [[48.1065, -1.730642], [48.10671, -1.729552]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_278629253d09296c80afa46691fa3ee7 = new L.RegularPolygonMarker(\n",
              "                [48.106605, -1.730097],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -16.094493207765524, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_150ed15a75aa4e3df09ec8070838ba41 = L.polyline(\n",
              "                [[48.123044, -1.664533], [48.12171, -1.664584]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9db3e60e8e9bae1266d36c5224c0be3e = new L.RegularPolygonMarker(\n",
              "                [48.122377, -1.6645585],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 91.46193085681023, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4c9369c6d04dcc0b7a9733abff3cc4df = L.polyline(\n",
              "                [[48.10671, -1.729552], [48.106962, -1.726025]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_70c1276dd8cfc9281f085586ccfb84aa = new L.RegularPolygonMarker(\n",
              "                [48.106836, -1.7277885],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -6.1087445320512614, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_550eb61ba58440f4b226fd292cfc95fa = L.polyline(\n",
              "                [[48.086443, -1.69506], [48.085873, -1.695401]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_37911609fc8034b09eed80b1a6cbf702 = new L.RegularPolygonMarker(\n",
              "                [48.086158, -1.6952305],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 111.78352842534406, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bf1fb855adf249db95393d51cb471450 = L.polyline(\n",
              "                [[48.12171, -1.664584], [48.121171, -1.663986]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0b23ddaef1d549fb53125272614b7429 = new L.RegularPolygonMarker(\n",
              "                [48.1214405, -1.664285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 53.47517632285664, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bda67ed19744e269e9fe9a610142cd7c = L.polyline(\n",
              "                [[48.085873, -1.695401], [48.085698, -1.693183]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_578044a1a167e6a3341146d769010b24 = new L.RegularPolygonMarker(\n",
              "                [48.0857855, -1.694292],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 6.735206391925047, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4e8cf7691be155fc40facb8baa29ff21 = L.polyline(\n",
              "                [[48.106962, -1.726025], [48.106994, -1.724741]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_78b96cbf89017462f0aab621969f1d0d = new L.RegularPolygonMarker(\n",
              "                [48.106978, -1.725383],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -2.1379350689779386, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f96f8420cb4c34b749b6539a85062398 = L.polyline(\n",
              "                [[48.121171, -1.663986], [48.121139, -1.664043]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_33a36ec0beb42e93b09a110c230fa9e7 = L.polyline(\n",
              "                [[48.121139, -1.664043], [48.120671, -1.66479]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_260f3cafe9d9646c9da4613cbf3151b7 = new L.RegularPolygonMarker(\n",
              "                [48.12092201443688, -1.6643893423411324],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 136.8174056419073, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6b40b4e4cd46b809d76eb9d1a559d19f = L.polyline(\n",
              "                [[48.106994, -1.724741], [48.107016, -1.723895]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0103012aa6b984538b0cec2b80ff90f2 = new L.RegularPolygonMarker(\n",
              "                [48.107005, -1.724318],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -2.2305319416789757, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_01989252d9bbd67e6456f071a646c977 = L.polyline(\n",
              "                [[48.120671, -1.66479], [48.120327, -1.665374]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7274ac052dc954df164bb062e573839b = new L.RegularPolygonMarker(\n",
              "                [48.120499, -1.665082],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 138.57596878316676, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e3a09c0bef5cf4757baa14f21f94d32a = L.polyline(\n",
              "                [[48.107016, -1.723895], [48.107028, -1.723607]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a03fb894db98a5c454fa9dbdff448cb5 = L.polyline(\n",
              "                [[48.107028, -1.723607], [48.107118, -1.720662]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_37b9fa9aa0b4054d803e99708a11dfd7 = new L.RegularPolygonMarker(\n",
              "                [48.10706859539151, -1.7222786285778338],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -2.621505033095218, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5443d4c152d0728536037bf9f92e6f0b = L.polyline(\n",
              "                [[48.085698, -1.693183], [48.08568, -1.692989]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_65ea73c7b3d311814addbd9af8843e1d = new L.RegularPolygonMarker(\n",
              "                [48.085689, -1.693086],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 7.907356902986393, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_17108d111a737f6459d8f185fbaf748a = L.polyline(\n",
              "                [[48.120327, -1.665374], [48.119715, -1.666453]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2ce5aee41fd459c9bc74f9c6eb1f849e = new L.RegularPolygonMarker(\n",
              "                [48.120021, -1.6659134999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 139.64806096850575, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_64eb2e8c9a9c07cb3dc03dce26a458bf = L.polyline(\n",
              "                [[48.08568, -1.692989], [48.085661, -1.692733]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_89a0fef510b5732a788c58e1532b45a9 = L.polyline(\n",
              "                [[48.085661, -1.692733], [48.085418, -1.692778]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_13659d588203f44c8f613dc5b41c8d6b = L.polyline(\n",
              "                [[48.085418, -1.692778], [48.085256, -1.692809]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d8738084764fc23c54e3491445161ca4 = L.polyline(\n",
              "                [[48.085256, -1.692809], [48.085028, -1.692361]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9ca3fae19a19ddaf59da6d2140b0b2df = new L.RegularPolygonMarker(\n",
              "                [48.08535708173923, -1.6927896571980479],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 97.28471258228834, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_54deeac89c417759f00be1f5f9aa930f = L.polyline(\n",
              "                [[48.119715, -1.666453], [48.119523, -1.666892]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ad08fcfbd52a8fa518e455761e648e55 = new L.RegularPolygonMarker(\n",
              "                [48.119619, -1.6666725],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.7697032578534, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d691a3b5471bd402b89c6c365f438864 = L.polyline(\n",
              "                [[48.107118, -1.720662], [48.107134, -1.719556]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b316a54c49c873c4137ac7850519e63b = L.polyline(\n",
              "                [[48.107134, -1.719556], [48.10721, -1.718492]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a1c6eb7fa067eba8b2a8de7af1d00f6d = L.polyline(\n",
              "                [[48.10721, -1.718492], [48.107269, -1.717552]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_70c75af02416401b923f5375f854bb1a = L.polyline(\n",
              "                [[48.107269, -1.717552], [48.107502, -1.716411]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9c3a5bc7925b7d3a3baafaafcf26261e = L.polyline(\n",
              "                [[48.107502, -1.716411], [48.107564, -1.716329]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5eee1ffdffc2475b18ab1b3347af61b9 = L.polyline(\n",
              "                [[48.107564, -1.716329], [48.107769, -1.716325]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8b6730a991340a4dc156e3486971cadd = L.polyline(\n",
              "                [[48.107769, -1.716325], [48.110178, -1.71797]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f29c08bccc6e744bbce55e622aaef442 = L.polyline(\n",
              "                [[48.110178, -1.71797], [48.115406, -1.719152]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f5aa46e9795805fb78bf6147062a595a = L.polyline(\n",
              "                [[48.115406, -1.719152], [48.116569, -1.719309]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1dbb6e0ff532b403516733b437f4a664 = L.polyline(\n",
              "                [[48.116569, -1.719309], [48.11813, -1.714944]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2343831477f3980ba8fd871f3a8a9fba = L.polyline(\n",
              "                [[48.11813, -1.714944], [48.117915, -1.714041]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dd4436a9e10e396b6713ce0d440e56c0 = L.polyline(\n",
              "                [[48.117915, -1.714041], [48.117788, -1.713661]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b7d6aedaa088027626e229bf55d735fb = L.polyline(\n",
              "                [[48.117788, -1.713661], [48.116804, -1.710629]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57201bea937022e5cbc0757d3d3b4d1c = L.polyline(\n",
              "                [[48.116804, -1.710629], [48.116611, -1.710249]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f4c565dafc98cff916d54a3b2be975c7 = L.polyline(\n",
              "                [[48.116611, -1.710249], [48.116399, -1.709903]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_522c1b11e05c829d34ad57cfe67741cd = L.polyline(\n",
              "                [[48.116399, -1.709903], [48.116419, -1.709672]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b46153f04696049c80a5e02ef5387516 = L.polyline(\n",
              "                [[48.116419, -1.709672], [48.116205, -1.708064]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_60a00563f41bbc38ee532199fa8935fd = L.polyline(\n",
              "                [[48.116205, -1.708064], [48.116342, -1.707809]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_37aa4afdef3618f2ecb082e4d9c8c85e = L.polyline(\n",
              "                [[48.116342, -1.707809], [48.116528, -1.707776]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c0bf6bf41c1ac8c4b4493763c30f048a = L.polyline(\n",
              "                [[48.116528, -1.707776], [48.116895, -1.707995]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_89370197a148fbcf616e00f82ef5b627 = L.polyline(\n",
              "                [[48.116895, -1.707995], [48.117027, -1.707985]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1c1513d12acb1c43251cc41573b0b5f5 = L.polyline(\n",
              "                [[48.117027, -1.707985], [48.117312, -1.707957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1bf159ae52ae9489fd7d4be4b4845b3f = L.polyline(\n",
              "                [[48.117312, -1.707957], [48.117461, -1.707947]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f526f79772f41281c29b9b7cde47b225 = new L.RegularPolygonMarker(\n",
              "                [48.1153101013297, -1.719130318242484],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;red&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 261.4162873980412, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_12e7d89ad0f0a7abf98b7588e7baf6d4 = L.polyline(\n",
              "                [[48.110605, -1.534649], [48.109496, -1.533845]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8a94a263fb2154f28031fd9d97342005 = new L.RegularPolygonMarker(\n",
              "                [48.1100505, -1.534247],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 64.1695209570893, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3a685d347e86d3e114ae46c2e13f4ba1 = L.polyline(\n",
              "                [[48.11958, -1.602242], [48.119515, -1.601692]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b09d2f57fdee6d9e6f6d87127a666624 = new L.RegularPolygonMarker(\n",
              "                [48.119547499999996, -1.601967],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 10.03888778285284, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_edbe8d4bad77582d8c63c4af8a7eb480 = L.polyline(\n",
              "                [[48.112687, -1.693424], [48.11269, -1.693385]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5e1e44a248eb8e80539ac83605c5c8a4 = new L.RegularPolygonMarker(\n",
              "                [48.112688500000004, -1.6934045],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -6.572177205191068, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_51c2dd1562ee4bb11fed751a4de5e1a4 = L.polyline(\n",
              "                [[48.117461, -1.707947], [48.117312, -1.707957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dcc64afbe66bb50e4faad8b2997bded2 = new L.RegularPolygonMarker(\n",
              "                [48.117386499999995, -1.7079520000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 92.56547203125885, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6a2d3feacdccd2f367f7f1f062ddc8f8 = L.polyline(\n",
              "                [[48.122377, -1.684046], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b38a6e8c9ada3f232a15f1fd71f3eab = new L.RegularPolygonMarker(\n",
              "                [48.122499000000005, -1.6841255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.49123695744242, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_686aef9f0709b6e9caa151cc9044c5c1 = L.polyline(\n",
              "                [[48.119523, -1.666892], [48.119286, -1.667432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_58b2baec271d7aba3a06b9712c1ba3b6 = new L.RegularPolygonMarker(\n",
              "                [48.1194045, -1.667162],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.67799280013247, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2c89ff3e58af5186d50d870737362a5b = L.polyline(\n",
              "                [[48.11269, -1.693385], [48.11283, -1.693421]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7e84f0607a81b0464bb3909c6dfcbf4c = new L.RegularPolygonMarker(\n",
              "                [48.11276, -1.693403],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 260.2581212868197, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1adc6b4da19a7fb49e5ea09c4c030a24 = L.polyline(\n",
              "                [[48.117312, -1.707957], [48.117027, -1.707985]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f7de9878708c212940fafbc27e4313da = new L.RegularPolygonMarker(\n",
              "                [48.1171695, -1.7079710000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 93.75264847739328, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bf3d2feda1f48e0adcca91edafcf169a = L.polyline(\n",
              "                [[48.11283, -1.693421], [48.113006, -1.695026]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c0f201dfd2ea4c32bc8a6826aba3fa63 = new L.RegularPolygonMarker(\n",
              "                [48.112918, -1.6942235],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 189.3275922075826, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b442d3adebfdf9d3a2845028f6560e26 = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.123517, -1.68462]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7454168fe18a79bc32558377dc928b91 = new L.RegularPolygonMarker(\n",
              "                [48.123069, -1.6844125],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 252.81954258733236, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1276bb4f433163c78141cae01d3535a3 = L.polyline(\n",
              "                [[48.119286, -1.667432], [48.119113, -1.666125]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_589e4fad05df457a5df8a9f31d9f64ba = new L.RegularPolygonMarker(\n",
              "                [48.1191995, -1.6667785],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 11.214310661673238, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_33faf23762167172a9b100f3e55a29e5 = L.polyline(\n",
              "                [[48.119515, -1.601692], [48.120868, -1.602703]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_887fb63b3e1ca90e8f5fab7a92d1c4a0 = new L.RegularPolygonMarker(\n",
              "                [48.120191500000004, -1.6021975],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 243.4890979909424, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cdc89845ec9d98d605a494ef46a40653 = L.polyline(\n",
              "                [[48.117027, -1.707985], [48.116895, -1.707995]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_63c32e1a119b4e17289de348ef6640d3 = L.polyline(\n",
              "                [[48.116895, -1.707995], [48.116333, -1.708121]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_df45877077058c92ee3eb5d8f03c6311 = new L.RegularPolygonMarker(\n",
              "                [48.11667935249625, -1.7080433480168542],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 98.51283502619594, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1fe8764749a1a75f9400f2b4564d8964 = L.polyline(\n",
              "                [[48.109496, -1.533845], [48.109426, -1.533924]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6ab8b2895f6affb048e4d7816b3df7bc = new L.RegularPolygonMarker(\n",
              "                [48.109460999999996, -1.5338845],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 127.00017462412322, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b29c84a05a124b618753fee02ef2928e = L.polyline(\n",
              "                [[48.119113, -1.666125], [48.118952, -1.665013]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8c9c8f290b929b6d9783eec20ff66828 = new L.RegularPolygonMarker(\n",
              "                [48.1190325, -1.665569],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 12.236242116081883, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9e02e3944afea7555cbe08ca48c2630e = L.polyline(\n",
              "                [[48.109426, -1.533924], [48.109207, -1.533891]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d8ef934c87f402f68a80c160313f1ca7 = L.polyline(\n",
              "                [[48.109207, -1.533891], [48.109174, -1.533853]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cf81b8e9088cbf52a133db712c377c66 = L.polyline(\n",
              "                [[48.109174, -1.533853], [48.109125, -1.533533]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d4e58361f81608a29b2820a4e15a5427 = new L.RegularPolygonMarker(\n",
              "                [48.10919060754032, -1.5338721238343065],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 52.443956947079414, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4049d00df7a39f2ac52b64109c63a63f = L.polyline(\n",
              "                [[48.116333, -1.708121], [48.116205, -1.708064]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c99d05686455153d8bbf73f019207694 = new L.RegularPolygonMarker(\n",
              "                [48.116269, -1.7080925],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 73.44276207086133, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dd7b8e6d9bb99935cd7af8532c95e8f1 = L.polyline(\n",
              "                [[48.123517, -1.68462], [48.124109, -1.684868]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d3efa3f081fc74fd20b9804989467f63 = new L.RegularPolygonMarker(\n",
              "                [48.123813, -1.684744],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 254.3770767990033, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a7940607611c845b185db951564b2ef0 = L.polyline(\n",
              "                [[48.109125, -1.533533], [48.109132, -1.533492]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_21b02a11483aa7774d576992dc5c433f = new L.RegularPolygonMarker(\n",
              "                [48.1091285, -1.5335125],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -14.342997419181032, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eb6c437209934d6e565b7edd51f84e62 = L.polyline(\n",
              "                [[48.113006, -1.695026], [48.113348, -1.696204]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8c0e99a071788bf183d98fccd15eb4d9 = new L.RegularPolygonMarker(\n",
              "                [48.113177, -1.695615],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.50153253607607, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9b36fa104ae9d89a23b1d4dc61cd3e8b = L.polyline(\n",
              "                [[48.109132, -1.533492], [48.109298, -1.533303]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ca5b728d6c5f6a483cfe24ce642ed449 = new L.RegularPolygonMarker(\n",
              "                [48.109215000000006, -1.5333975],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -52.75698331511503, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_261a0fa9dbef7c1d3478a126badc3e40 = L.polyline(\n",
              "                [[48.116205, -1.708064], [48.115764, -1.705571]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0834c90dabed1bda6c4be74cecf23a1c = new L.RegularPolygonMarker(\n",
              "                [48.115984499999996, -1.7068175],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 14.83927133572466, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_abf82a4ca1b03d6768794d726b06b8de = L.polyline(\n",
              "                [[48.118952, -1.665013], [48.118865, -1.664387]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2f3a0c3f3ff93d364fdccfaa44007849 = new L.RegularPolygonMarker(\n",
              "                [48.1189085, -1.6647],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 11.759586220241701, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_36fd184eb93400c1460bc385a2f9b172 = L.polyline(\n",
              "                [[48.109298, -1.533303], [48.109488, -1.533397]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_114c205b69a1f3aa6893461998f8f23a = L.polyline(\n",
              "                [[48.109488, -1.533397], [48.109774, -1.533409]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_77b6d0e5121fa1ecab7f96714d8f9d87 = new L.RegularPolygonMarker(\n",
              "                [48.10953096061313, -1.5333988025432082],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 268.39524305835533, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_093fcbf33915455058da1d98a41d75d5 = L.polyline(\n",
              "                [[48.118865, -1.664387], [48.11883, -1.664161]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1783b1d269540ce3ee52cec61a02a589 = new L.RegularPolygonMarker(\n",
              "                [48.1188475, -1.664274],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 13.060401320499892, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_71513cefb655b27702a4f34373829dd0 = L.polyline(\n",
              "                [[48.124109, -1.684868], [48.124177, -1.684902]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bba139340c2e97cbf20df643d71651d0 = new L.RegularPolygonMarker(\n",
              "                [48.124143000000004, -1.684885],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 251.5430944089391, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_34c4f61c20571660ecda40771fe39d02 = L.polyline(\n",
              "                [[48.109774, -1.533409], [48.110108, -1.533305]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_55d4f5fe487fe4a48c63e5e9433006ae = new L.RegularPolygonMarker(\n",
              "                [48.109941, -1.533357],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -78.2551272302338, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2a27fa16de5448e38b5fddc134a3ae1e = L.polyline(\n",
              "                [[48.11883, -1.664161], [48.118666, -1.663057]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0cd4b08e38d2b6e79540774cdcf1770c = new L.RegularPolygonMarker(\n",
              "                [48.118748, -1.6636090000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 12.544558297464476, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_813a68019b17ef9e909aeaddc4b31fe1 = L.polyline(\n",
              "                [[48.120868, -1.602703], [48.121024, -1.602692]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8752c07e8ce3ba718899fc319ddd1037 = new L.RegularPolygonMarker(\n",
              "                [48.120946, -1.6026975],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -87.30499125916833, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2e9224be9f15a7992840281c2b8fc5de = L.polyline(\n",
              "                [[48.124177, -1.684902], [48.124729, -1.68515]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e1bb3e08340209ee15577a09b9bae84a = new L.RegularPolygonMarker(\n",
              "                [48.124453, -1.685026],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 253.30621151933667, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_70fa084655e42e29174cbfe622f1bbc7 = L.polyline(\n",
              "                [[48.121024, -1.602692], [48.121147, -1.602588]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5b4f6ca5c47f8df7442f307a15c88d30 = new L.RegularPolygonMarker(\n",
              "                [48.1210855, -1.60264],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -60.55792707794008, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_daddb28d5be819b682389b5508e1e038 = L.polyline(\n",
              "                [[48.110108, -1.533305], [48.110654, -1.532982]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_342db5068427ae30219d13ee5b9106e1 = new L.RegularPolygonMarker(\n",
              "                [48.110381, -1.5331435],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -68.44643133397665, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c2751521b66c2d45052bc8cc337f1a4d = L.polyline(\n",
              "                [[48.121147, -1.602588], [48.121222, -1.602792]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_59b7efc5a1d64214c607277f677728bf = new L.RegularPolygonMarker(\n",
              "                [48.1211845, -1.60269],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 208.84318401945188, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5395818fb5006e6f8e29e582febd7084 = L.polyline(\n",
              "                [[48.113348, -1.696204], [48.114028, -1.698443]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2d4d005d1ea6ebd7abaf508802252987 = new L.RegularPolygonMarker(\n",
              "                [48.113687999999996, -1.6973235],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 204.46097304158997, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1fe2aa12e893d4db080ee36c8962300c = L.polyline(\n",
              "                [[48.121222, -1.602792], [48.121083, -1.602885]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3ec3b20644ecbe8b2b14e6cecac71b1d = new L.RegularPolygonMarker(\n",
              "                [48.1211525, -1.6028384999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 114.06745266445631, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eb93670189c4d273ade5dae2295563cc = L.polyline(\n",
              "                [[48.118666, -1.663057], [48.118577, -1.662278]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_939574ee53da98e8750f944997eb1c81 = new L.RegularPolygonMarker(\n",
              "                [48.1186215, -1.6626675],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 9.711024057042081, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_febc6ebbf755faeedd98019c668990da = L.polyline(\n",
              "                [[48.124729, -1.68515], [48.125725, -1.685583]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8fb39340d233e642d1683e6c68098c2d = new L.RegularPolygonMarker(\n",
              "                [48.125227, -1.6853665],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 253.8179436364884, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3af92ecf84e13c2780b8790d5d830a6b = L.polyline(\n",
              "                [[48.121083, -1.602885], [48.119998, -1.606416]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b1e9b8ae3d559e350a0c146e81308a44 = new L.RegularPolygonMarker(\n",
              "                [48.120540500000004, -1.6046505],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 155.28484710585775, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e115a05ebe534121ca94d92cea55c535 = L.polyline(\n",
              "                [[48.110654, -1.532982], [48.110747, -1.53293]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a19bbe4ac55cd407691ba982e724e2ec = L.polyline(\n",
              "                [[48.110747, -1.53293], [48.112135, -1.539873]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2f8c86c30705d8ba442564f413d413f9 = new L.RegularPolygonMarker(\n",
              "                [48.111426797039535, -1.5363304544996295],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 196.67099455527347, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fe485513e67c4e5405b8e73520000f34 = L.polyline(\n",
              "                [[48.118577, -1.662278], [48.118505, -1.661957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_734cdfb659a18034889d3094d38165fb = L.polyline(\n",
              "                [[48.118505, -1.661957], [48.118352, -1.660854]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_60f20e3d28a82f7f7dd9c42a32eaac06 = new L.RegularPolygonMarker(\n",
              "                [48.11845149105482, -1.6615712459703538],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 11.737498576224112, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_89c2a132eb8a667d9ab504fff2a75071 = L.polyline(\n",
              "                [[48.115764, -1.705571], [48.115672, -1.705086]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fada9e02f2eb58e258bbe811201a2f00 = new L.RegularPolygonMarker(\n",
              "                [48.115718, -1.7053285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 15.861058123528949, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2e1d432b18375a1ca01d6becea4d43b8 = L.polyline(\n",
              "                [[48.118352, -1.660854], [48.118236, -1.659943]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3636e624d3735f46a95b1231c3ed5dc6 = new L.RegularPolygonMarker(\n",
              "                [48.118294000000006, -1.6603984999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 10.798175995292738, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5be03dc327db26c2711b1c0d4f6d2a82 = L.polyline(\n",
              "                [[48.125725, -1.685583], [48.125997, -1.685723]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3962bf1e3753c752dd622974e9b3ffea = new L.RegularPolygonMarker(\n",
              "                [48.125861, -1.685653],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 251.0391555256802, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ed41af51b584fea9e5a5c7348c6b76d6 = L.polyline(\n",
              "                [[48.115672, -1.705086], [48.115202, -1.702755]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fdff3062fc8427b18cbb2796ea6cd2e9 = new L.RegularPolygonMarker(\n",
              "                [48.115437, -1.7039205000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 16.803868369814467, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d2cd11252e4ffcb9f182072ec97e72c7 = L.polyline(\n",
              "                [[48.125997, -1.685723], [48.127089, -1.68642]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_da10e64dec85956d7568c958d619d2de = new L.RegularPolygonMarker(\n",
              "                [48.126543, -1.6860715000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.92417182765797, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dc5ff959f46c94d25a1e2974de50eed4 = L.polyline(\n",
              "                [[48.118236, -1.659943], [48.117682, -1.659531]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_673b3b2f0370f1ce0207bcb65e429f8b = new L.RegularPolygonMarker(\n",
              "                [48.117959, -1.659737],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 63.596287793948875, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b5ecb5a7de63d043896bce6c31c5e74e = L.polyline(\n",
              "                [[48.114028, -1.698443], [48.114481, -1.699927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5003891b69e57a61b9868ba8cc9d12ac = new L.RegularPolygonMarker(\n",
              "                [48.1142545, -1.699185],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 204.57097775645957, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f1b0f342f15fc57deedd303bb826951a = L.polyline(\n",
              "                [[48.117682, -1.659531], [48.117096, -1.659066]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_04f710461df224a928cc62d53117233a = L.polyline(\n",
              "                [[48.117096, -1.659066], [48.116626, -1.658651]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9e86bdb19a5b06990a61079dc21cd03f = new L.RegularPolygonMarker(\n",
              "                [48.11714791597425, -1.6591071961229154],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 62.087147521644255, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_21b4805f4bea9930417ec1d096248287 = L.polyline(\n",
              "                [[48.127089, -1.68642], [48.127514, -1.68483]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_61c5217764cdb45b0002363039abfc9c = new L.RegularPolygonMarker(\n",
              "                [48.1273015, -1.685625],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -21.824528625037544, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ff8fa67cd7658bdd29e16993a01d1a20 = L.polyline(\n",
              "                [[48.119998, -1.606416], [48.119578, -1.607087]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_02bd842092b5a972515f41d2335c8ac8 = new L.RegularPolygonMarker(\n",
              "                [48.119788, -1.6067515],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 136.84423081548695, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a723ed92892cf1f3cb9ae3d3acfacd99 = L.polyline(\n",
              "                [[48.114481, -1.699927], [48.114549, -1.700154]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3dc9da4b833ccecba78d19c8e95f7106 = new L.RegularPolygonMarker(\n",
              "                [48.114515, -1.7000405],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 204.16497393826955, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9a7e85a44f1d61a44542004998b454e9 = L.polyline(\n",
              "                [[48.116626, -1.658651], [48.116577, -1.658617]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0cb784a416fe02bba973e24ec3dd0c69 = L.polyline(\n",
              "                [[48.116577, -1.658617], [48.116167, -1.658293]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c02d4eacbd79313f5ef09e27d52ebd0b = new L.RegularPolygonMarker(\n",
              "                [48.11639587836429, -1.6584738697317802],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 62.184534205550875, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1aac5615c890ff48bbdbb82d943507c2 = L.polyline(\n",
              "                [[48.115202, -1.702755], [48.114677, -1.700999]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0df6718b5162319898b5a92c8708ea91 = new L.RegularPolygonMarker(\n",
              "                [48.1149395, -1.701877],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 24.122641980004374, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8d9aa303f01373b0be3169cc853b17b8 = L.polyline(\n",
              "                [[48.114549, -1.700154], [48.114591, -1.700289]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5821e9d2c880abab354eebdce28eeb5a = L.polyline(\n",
              "                [[48.114591, -1.700289], [48.114756, -1.700846]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9893afa5931afd8fa7c463edadc28183 = new L.RegularPolygonMarker(\n",
              "                [48.11465333663386, -1.7004994333639913],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.9268595662412, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6d45324cf741bf547e4897dd25778988 = L.polyline(\n",
              "                [[48.116167, -1.658293], [48.115939, -1.658113]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a08ef62d45ced5fd335562e79d4aa2e5 = new L.RegularPolygonMarker(\n",
              "                [48.116052999999994, -1.6582029999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 62.20749316711925, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_85d22c4cf0dcc6b38c9fff1f7e06e6da = L.polyline(\n",
              "                [[48.119578, -1.607087], [48.119287, -1.607508]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4be75438040e753bd742f7b6acbb39a3 = new L.RegularPolygonMarker(\n",
              "                [48.1194325, -1.6072975],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.00380167263413, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b2f38952fb706b5323fbb5b09359b72b = L.polyline(\n",
              "                [[48.115939, -1.658113], [48.114603, -1.65704]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3ea7a4f9ba4f41c6acea7751ec558df4 = new L.RegularPolygonMarker(\n",
              "                [48.115271, -1.6575765],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 61.79911662107844, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cc4d4f4939ec45b1e9aac88079df7123 = L.polyline(\n",
              "                [[48.114756, -1.700846], [48.115311, -1.702733]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9b7a80a59450c1f13d9e9a56fb2c189a = new L.RegularPolygonMarker(\n",
              "                [48.115033499999996, -1.7017895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.77587870828341, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_449f9cb0b564f5e25aba3cc1ec5d882f = L.polyline(\n",
              "                [[48.112135, -1.539873], [48.114772, -1.560952]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b0f60f79f76715e6e95ba667c5a1890c = new L.RegularPolygonMarker(\n",
              "                [48.113453500000006, -1.5504125],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 190.62045302307115, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_036abbcfb0fd6778441edf0cac2092c5 = L.polyline(\n",
              "                [[48.119287, -1.607508], [48.11897, -1.607996]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_022843a39712607cab01ad7d1d18069a = new L.RegularPolygonMarker(\n",
              "                [48.1191285, -1.607752],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 135.78284824774255, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_778eecba608cbe8f1e3f134aa04a3040 = L.polyline(\n",
              "                [[48.127514, -1.68483], [48.127656, -1.684232]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3a299f53d00bff275a42c1211db740c5 = new L.RegularPolygonMarker(\n",
              "                [48.127584999999996, -1.684531],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -19.583563890154977, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_be6f3562820c3e2d545d2cb8aee9a58c = L.polyline(\n",
              "                [[48.11897, -1.607996], [48.118917, -1.608269]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_61128b43fbf676a86e464eb135148a2f = new L.RegularPolygonMarker(\n",
              "                [48.1189435, -1.6081325],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 163.78527042099464, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_971ca187be8b3a6bb56cff7a570a9fe3 = L.polyline(\n",
              "                [[48.127656, -1.684232], [48.127816, -1.683429]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_51bc72391438a0572d6aca4ece309a13 = new L.RegularPolygonMarker(\n",
              "                [48.127736, -1.6838305],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -16.621637460503365, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4bf5eb06c7e48ab38538f9b516d84301 = L.polyline(\n",
              "                [[48.114677, -1.700999], [48.114585, -1.700692]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ffcd09bd4ceccc37adcf62b3deb6c5aa = new L.RegularPolygonMarker(\n",
              "                [48.114631, -1.7008455],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 24.17302357715603, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_35aeab15fbbcef8bb08e3163defa496c = L.polyline(\n",
              "                [[48.118917, -1.608269], [48.118933, -1.608331]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_77282baf0b33a5efcbaf1b5b336deafc = new L.RegularPolygonMarker(\n",
              "                [48.118925000000004, -1.6082999999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 201.13469627476366, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_77a6da2239f2777ddcf3dffbd264fce3 = L.polyline(\n",
              "                [[48.114603, -1.65704], [48.114601, -1.656254]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c9216273900b880ca337729f9dbf351a = new L.RegularPolygonMarker(\n",
              "                [48.114602000000005, -1.656647],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.21807279638390753, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_54bb81758a1d818b73438cfdbb7b2ab1 = L.polyline(\n",
              "                [[48.118933, -1.608331], [48.119064, -1.608461]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c3631f1a86b555714e1644af39bebabb = new L.RegularPolygonMarker(\n",
              "                [48.118998500000004, -1.608396],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 236.47598763261863, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_905f7e16bd153a6d52053ceda3f653ad = L.polyline(\n",
              "                [[48.114585, -1.700692], [48.114481, -1.699927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f61904838ba9bee62d27b92331786b81 = new L.RegularPolygonMarker(\n",
              "                [48.114532999999994, -1.7003095],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 11.509114102347553, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_77417aba1adef69aa04eb89083223161 = L.polyline(\n",
              "                [[48.119064, -1.608461], [48.119792, -1.608877]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4318f6ba4ef39f2e2f0471aff6c5f653 = new L.RegularPolygonMarker(\n",
              "                [48.119428, -1.608669],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 249.1195842680458, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_acf054e32a398eb6aafa0c015d8efdaf = L.polyline(\n",
              "                [[48.114601, -1.656254], [48.11461, -1.656032]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_32269beb596602af7506cdc46a50da4d = new L.RegularPolygonMarker(\n",
              "                [48.114605499999996, -1.656143],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -3.4749247781466437, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_94c8560cd9eaaa108be68f31eaa3e6a0 = L.polyline(\n",
              "                [[48.127816, -1.683429], [48.127835, -1.683328]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cde28db884fc7542da8b847c133e23c8 = L.polyline(\n",
              "                [[48.127835, -1.683328], [48.12794, -1.682867]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_44fd2d43fbd1579c64f761460fface63 = new L.RegularPolygonMarker(\n",
              "                [48.127876189033856, -1.6831471605275496],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -18.841726885820563, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ccb015c3242f79f464a5baaa1d727cf0 = L.polyline(\n",
              "                [[48.115311, -1.702733], [48.115878, -1.704687]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5100d886b7f429fdcab88dc4f7399120 = new L.RegularPolygonMarker(\n",
              "                [48.1155945, -1.70371],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.49208313777308, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_be905b238900a556e8a40063239fbea2 = L.polyline(\n",
              "                [[48.11461, -1.656032], [48.11467, -1.655334]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2967a0547b8ebfc5699b824f2c6681cb = new L.RegularPolygonMarker(\n",
              "                [48.114639999999994, -1.655683],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -7.336810012556285, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a3da37affc27fb728ad9f3234aa3ed1d = L.polyline(\n",
              "                [[48.114481, -1.699927], [48.114787, -1.699668]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2a6f13f20c88537b545ef109062991be = new L.RegularPolygonMarker(\n",
              "                [48.114633999999995, -1.6997974999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -60.529477069896956, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_289ba5085dd4b3363b0c9fb70fa828fa = L.polyline(\n",
              "                [[48.12794, -1.682867], [48.130613, -1.676472]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d321fde1fe3b4620e7c05514b07cbda5 = new L.RegularPolygonMarker(\n",
              "                [48.1292765, -1.6796695],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -32.058675516538116, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cae5cad29a3fc81efa46d610f3e67714 = L.polyline(\n",
              "                [[48.11467, -1.655334], [48.114717, -1.653968]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_866fb51308113180f14ec90b1e0bef49 = new L.RegularPolygonMarker(\n",
              "                [48.1146935, -1.654651],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -2.9506464749277086, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_467fe8c6ea77dfe0924783b5aa9eb03e = L.polyline(\n",
              "                [[48.119792, -1.608877], [48.120114, -1.608998]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7174c9431000fe506e5bceaa6382b073 = new L.RegularPolygonMarker(\n",
              "                [48.119952999999995, -1.6089375],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 255.91752704133052, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_71eb560516ee70b2d052c487278b9cab = L.polyline(\n",
              "                [[48.114787, -1.699668], [48.118157, -1.69263]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7b2cdd12e3c3d09575b852d15d197aab = new L.RegularPolygonMarker(\n",
              "                [48.116472, -1.6961490000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -35.65145830913803, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5fc568923a111c78e2a338d60b2b47c8 = L.polyline(\n",
              "                [[48.120114, -1.608998], [48.120474, -1.609373]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_af9c60905fb16a4cc0bb8576693ed94d = new L.RegularPolygonMarker(\n",
              "                [48.120294, -1.6091855],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 235.18599647462088, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b997b8316dcd07997cd8dac372ea92e6 = L.polyline(\n",
              "                [[48.114717, -1.653968], [48.114729, -1.653632]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6591ef7655769c4ce326ae4d2494104f = L.polyline(\n",
              "                [[48.114729, -1.653632], [48.11473, -1.652589]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_cec201404e9100c38424c89723dd6cb3 = new L.RegularPolygonMarker(\n",
              "                [48.1147293386974, -1.6532787386095456],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.08266836622176754, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8b103d17aece531b71b5fdf409048a8c = L.polyline(\n",
              "                [[48.120474, -1.609373], [48.122907, -1.610939]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3f1765a750f2d1bd42163056ed441e7e = new L.RegularPolygonMarker(\n",
              "                [48.1216905, -1.610156],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 246.7488901425329, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b7674110622e1dec0a587e858b65735d = L.polyline(\n",
              "                [[48.115878, -1.704687], [48.115996, -1.705154]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2308d313e099d757693c4b218dde67f3 = new L.RegularPolygonMarker(\n",
              "                [48.115937, -1.7049205],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 200.73035750327097, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e786c2d308aa261fb552be5f1d46d85e = L.polyline(\n",
              "                [[48.11473, -1.652589], [48.114288, -1.648873]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_de49a389d6033780b6922264deeff03c = new L.RegularPolygonMarker(\n",
              "                [48.114509, -1.650731],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 10.100245653146487, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e861386e0014f4dea2313020f312dc4c = L.polyline(\n",
              "                [[48.115996, -1.705154], [48.11633, -1.707255]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e20ed09599405576de2cb7fd571537c7 = L.polyline(\n",
              "                [[48.11633, -1.707255], [48.116528, -1.707776]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c91309d4a679797c1602fdb94c949efc = new L.RegularPolygonMarker(\n",
              "                [48.11620932892126, -1.7064959283340275],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 193.39443032879882, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d17daa06ece7dfef714b948a6ac904fc = L.polyline(\n",
              "                [[48.114288, -1.648873], [48.114071, -1.648021]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3ccdb1a3e52c92aa92a745992b2eca92 = new L.RegularPolygonMarker(\n",
              "                [48.114179500000006, -1.648447],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 20.880561604390437, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0edcc77bf1b75d22023c28832f8510f0 = L.polyline(\n",
              "                [[48.116528, -1.707776], [48.116895, -1.707995]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b0b22b6f3c907833cf3054ae7da73c95 = new L.RegularPolygonMarker(\n",
              "                [48.1167115, -1.7078855],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 248.27842065962864, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7f7e7ff876afb1d540aa72468d99f7e5 = L.polyline(\n",
              "                [[48.114071, -1.648021], [48.113932, -1.647537]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8c214bf0cc8024db30c7a5e1f95f1139 = new L.RegularPolygonMarker(\n",
              "                [48.1140015, -1.6477789999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 23.2747888716449, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_88374fac23a9175d8b29ce28c8e34e02 = L.polyline(\n",
              "                [[48.122907, -1.610939], [48.12309, -1.610951]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_130cb70efb0310d2a57cfb385f323c6e = L.polyline(\n",
              "                [[48.12309, -1.610951], [48.123129, -1.610924]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8f32471f268264602fdebeba1b6137d9 = new L.RegularPolygonMarker(\n",
              "                [48.12301997231415, -1.6109464080205997],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 267.49361324579866, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b14689e2f63e2151d5bf23dfca270c0a = L.polyline(\n",
              "                [[48.113932, -1.647537], [48.113919, -1.64588]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6a8740f62bc89868f88ceff96f18afc9 = new L.RegularPolygonMarker(\n",
              "                [48.1139255, -1.6467085],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.672628877537619, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_192176d9f0ce8e3fda9872a8a2f05939 = L.polyline(\n",
              "                [[48.123129, -1.610924], [48.123211, -1.610957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_96056b807970698b0b7a2a01b860c797 = L.polyline(\n",
              "                [[48.123211, -1.610957], [48.123241, -1.611026]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_00ca76b4e077519f7e20c2c30628fc97 = new L.RegularPolygonMarker(\n",
              "                [48.123196593555804, -1.610951202284654],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 254.96305077017627, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_09133bc05590ba45afb4775225a534ea = L.polyline(\n",
              "                [[48.116895, -1.707995], [48.117027, -1.707985]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1ca37e6b341a5de4a5566d77fa970b4d = new L.RegularPolygonMarker(\n",
              "                [48.116961, -1.7079900000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -87.10464044949964, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_97c76e0b4aec24a89dc6b6515b60ee87 = L.polyline(\n",
              "                [[48.123241, -1.611026], [48.12338, -1.611189]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e41032c5f76660635195f5417d1053b5 = new L.RegularPolygonMarker(\n",
              "                [48.1233105, -1.6111075000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 231.94669711329402, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_50d2c304b276e158dbe14e595859cc36 = L.polyline(\n",
              "                [[48.117027, -1.707985], [48.117312, -1.707957]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2530a0c1f3ef5a644ae32e882a0c1fd5 = new L.RegularPolygonMarker(\n",
              "                [48.1171695, -1.7079710000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -86.2473723690003, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_58a25ebeb40edf32b49d2579787a851d = L.polyline(\n",
              "                [[48.12338, -1.611189], [48.124616, -1.61254]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3e5a981f3eb2eb03acbf779e85f9a227 = new L.RegularPolygonMarker(\n",
              "                [48.123998, -1.6118645],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 233.8849559818936, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_587a8bdc14cee9ebb21968a24cf2d01f = L.polyline(\n",
              "                [[48.117312, -1.707957], [48.117461, -1.707947]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7a84c6c58f9ccb3887b24a1a2f565878 = new L.RegularPolygonMarker(\n",
              "                [48.117386499999995, -1.7079520000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -87.43453541384167, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f1aa1df724479fd5b78a5b7bd11c500d = L.polyline(\n",
              "                [[48.113919, -1.64588], [48.113911, -1.643321]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e7ff4a8cfb2b692370ce9109e9982d30 = new L.RegularPolygonMarker(\n",
              "                [48.113915000000006, -1.6446005000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 0.2673279752909252, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f47121eb1a3e84a8e739745995be3231 = L.polyline(\n",
              "                [[48.130613, -1.676472], [48.130631, -1.676393]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_83d91fe96c33749c3fd556fa14c8132d = L.polyline(\n",
              "                [[48.130631, -1.676393], [48.131203, -1.673965]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_555549c745f1ee80fdbdab4f4acde49a = new L.RegularPolygonMarker(\n",
              "                [48.130907727533845, -1.6752183593493533],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -19.442543645718203, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_130f3a59f94c57ca673c5d718bee6e42 = L.polyline(\n",
              "                [[48.124616, -1.61254], [48.124805, -1.612613]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_dfa580c26cd9ba76eddbed21c8434439 = new L.RegularPolygonMarker(\n",
              "                [48.124710500000006, -1.6125765],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 255.54276692158555, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_767983f122415b0ad2d539d4c67ac43a = L.polyline(\n",
              "                [[48.113911, -1.643321], [48.113895, -1.642143]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7b97ae7432df02a71e0032693c21b59d = new L.RegularPolygonMarker(\n",
              "                [48.113903, -1.642732],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 1.1649945213166006, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_eec4fd5ec1c1fc4e00e55aabaa237cd6 = L.polyline(\n",
              "                [[48.124805, -1.612613], [48.124866, -1.612586]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2095994a76dbe3030e182628ae936b11 = L.polyline(\n",
              "                [[48.124866, -1.612586], [48.124973, -1.61268]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e3f44f7feaf4648f3b7a2a8ad1c83441 = L.polyline(\n",
              "                [[48.124973, -1.61268], [48.12499, -1.612747]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_62ad76f827bea0e2e20c54e2bbec658a = L.polyline(\n",
              "                [[48.12499, -1.612747], [48.125143, -1.612974]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3fdbe7c6aa6e085ab61d96ad265e440f = L.polyline(\n",
              "                [[48.125143, -1.612974], [48.127179, -1.613519]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e846f920d13d7dfe2541b727be2a686a = new L.RegularPolygonMarker(\n",
              "                [48.125938847979114, -1.6131870339629746],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 259.8697481627381, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ba5faaa7b5d7815e029bd0c310115196 = L.polyline(\n",
              "                [[48.113895, -1.642143], [48.113942, -1.639872]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fef4942a7c8c6de2b7658011808d3382 = new L.RegularPolygonMarker(\n",
              "                [48.1139185, -1.6410075],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.776319442420757, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5f68549669b59c737da0f8b5e6e06348 = L.polyline(\n",
              "                [[48.118157, -1.69263], [48.11973, -1.69028]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2a1ffa40d653d7a0339ca803e1710b0d = new L.RegularPolygonMarker(\n",
              "                [48.1189435, -1.691455],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -45.076955219134724, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d7a77e57ff967e8470eff1237dd16b93 = L.polyline(\n",
              "                [[48.131203, -1.673965], [48.131358, -1.673031]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_12bd91dbbb885b4cd95527a418975414 = new L.RegularPolygonMarker(\n",
              "                [48.1312805, -1.673498],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -13.963557850598903, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4ad8e2ebcd2669f7338ab79c1ccbebed = L.polyline(\n",
              "                [[48.113942, -1.639872], [48.113872, -1.639759]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1112663ba7d87378aac236e103bb8288 = L.polyline(\n",
              "                [[48.113872, -1.639759], [48.112931, -1.639713]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b6998ef63ea163619f448379e8c9a6dc = new L.RegularPolygonMarker(\n",
              "                [48.11345301401285, -1.639738518219544],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 88.13063104339196, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3b3c86ddff225d0d5b6a3070fd05eea4 = L.polyline(\n",
              "                [[48.131358, -1.673031], [48.131375, -1.672675]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a333d38ed0d553ad3d3e65ad53f4da7b = L.polyline(\n",
              "                [[48.131375, -1.672675], [48.131378, -1.672599]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0b6c3d30f0174781f26074d7b97d7e07 = L.polyline(\n",
              "                [[48.131378, -1.672599], [48.131379, -1.672513]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3e97c04463fb8d659de6592bab7a89be = L.polyline(\n",
              "                [[48.131379, -1.672513], [48.131379, -1.672379]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5b085707c48bbc06d16f7cbf7aa483a0 = L.polyline(\n",
              "                [[48.131379, -1.672379], [48.128751, -1.665415]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c80baa1dc86fd297ce7da7b8fc42802b = new L.RegularPolygonMarker(\n",
              "                [48.13017233792615, -1.669181437335492],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 29.481073901975094, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f2f87e50c1dc20aadb90fdd2ec62238f = L.polyline(\n",
              "                [[48.112931, -1.639713], [48.112847, -1.639639]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_632940e7828ebbca74e3c23a9e4f8991 = L.polyline(\n",
              "                [[48.112847, -1.639639], [48.112794, -1.639478]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1c988fee76d4ee38ce36635dfaba6e3a = L.polyline(\n",
              "                [[48.112794, -1.639478], [48.111414, -1.625766]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4f94b4d0a8e6404a9cdcfcb02d74a6f6 = new L.RegularPolygonMarker(\n",
              "                [48.11212017428009, -1.6327827113975515],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 8.566820813953925, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d22bc2b0c7bef24deb4c2554825efa99 = L.polyline(\n",
              "                [[48.127179, -1.613519], [48.126878, -1.619723]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_acdab7ec800b9d040ed5632528052d8f = new L.RegularPolygonMarker(\n",
              "                [48.127028499999994, -1.6166209999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 175.84497413953613, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_064f965cc390215341a58152d2d5e016 = L.polyline(\n",
              "                [[48.11973, -1.69028], [48.120523, -1.689899]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_bc14d7906d61f0edd92a042e8b3b508c = new L.RegularPolygonMarker(\n",
              "                [48.1201265, -1.6900895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -72.21716517655358, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_74973d1d9c5199ceffdc51d444a7caea = L.polyline(\n",
              "                [[48.114772, -1.560952], [48.11607, -1.566804]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_34ab432952471bb796a52039a0a6d228 = new L.RegularPolygonMarker(\n",
              "                [48.115421, -1.5638779999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 198.37998680611037, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_aa4dd16f2a44c28410796dc51acaf7a3 = L.polyline(\n",
              "                [[48.120523, -1.689899], [48.122816, -1.688693]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_4b2b0f3f521e1f4ec8117ba97bc3571f = new L.RegularPolygonMarker(\n",
              "                [48.121669499999996, -1.6892960000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -70.65440343493117, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0128f9cbf73c78800388f285a1d57fe2 = L.polyline(\n",
              "                [[48.11607, -1.566804], [48.118182, -1.567643]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_88d770a3cfb99359f58b8cd3901680f3 = new L.RegularPolygonMarker(\n",
              "                [48.117126, -1.5672234999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 255.14681005451297, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b892ef63d4de4278517f82d76df3e7ca = L.polyline(\n",
              "                [[48.122816, -1.688693], [48.122762, -1.687643]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ceb778404384aada883ed90750d7853d = new L.RegularPolygonMarker(\n",
              "                [48.122789, -1.6881680000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 4.405107523144537, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_62d5e1d08da1883ca15d124a20a4fbae = L.polyline(\n",
              "                [[48.126878, -1.619723], [48.127085, -1.620607]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_fd55577f1030986a71e88972f48619c9 = new L.RegularPolygonMarker(\n",
              "                [48.1269815, -1.620165],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 199.3319806809808, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d17700a93cc68f8a30ed3fe99eeeafc7 = L.polyline(\n",
              "                [[48.122762, -1.687643], [48.122733, -1.687115]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8c7a2b8df501e39582c2c485b9a7a110 = new L.RegularPolygonMarker(\n",
              "                [48.1227475, -1.687379],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 4.703444760517044, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b6596ab4acfd4f100483fbeddb6a0c8a = L.polyline(\n",
              "                [[48.127085, -1.620607], [48.127229, -1.620738]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_70d8c3bf6bd26ee2c6e71eb6189af6da = L.polyline(\n",
              "                [[48.127229, -1.620738], [48.127279, -1.620844]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_df019f4137d0b8368ef9ba6ca9bbddae = new L.RegularPolygonMarker(\n",
              "                [48.12719407093691, -1.6207062242551036],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 238.73304126858983, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b55fae7cf17ca2f6ad4f9fa48a1a03f2 = L.polyline(\n",
              "                [[48.122733, -1.687115], [48.122721, -1.68676]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_8a8f9aa5164e845d092446f11e8ea0c1 = new L.RegularPolygonMarker(\n",
              "                [48.122727, -1.6869375],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.8987410053626945, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0e8aafec1ee303d7327f1f1986d02bdd = L.polyline(\n",
              "                [[48.128751, -1.665415], [48.128137, -1.66447]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_770334669f26a34d3b1bde0f6026e483 = new L.RegularPolygonMarker(\n",
              "                [48.128444, -1.6649425],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 44.22857939515211, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fd44fd8eed30bc387d9653c9d9a21693 = L.polyline(\n",
              "                [[48.127279, -1.620844], [48.127267, -1.621297]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_312e098074902c6e3fe21b9d4ffbecc0 = new L.RegularPolygonMarker(\n",
              "                [48.127273, -1.6210705],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.72747581170177, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_05593a6f808fde6a1517f3fde042f343 = L.polyline(\n",
              "                [[48.118182, -1.567643], [48.118247, -1.56753]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_99e2d8e28b469b976b9d11bbc41c12f5 = new L.RegularPolygonMarker(\n",
              "                [48.11821449999999, -1.5675865],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -40.7492444615471, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_28c0368bfeec98a2ad4699d3443e66a7 = L.polyline(\n",
              "                [[48.122721, -1.68676], [48.122655, -1.685427]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6deae0f513fe1152a8e0cd7a6ccfe3b7 = new L.RegularPolygonMarker(\n",
              "                [48.122688, -1.6860935000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 4.241458698300434, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_abdc136044ba0042df42e44738679de7 = L.polyline(\n",
              "                [[48.118247, -1.56753], [48.118441, -1.567474]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9d8328acc446048cbad9405c886c5461 = new L.RegularPolygonMarker(\n",
              "                [48.11834399999999, -1.5675020000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -79.09239901565627, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a68e161f9f8379586291280a89b3904c = L.polyline(\n",
              "                [[48.127267, -1.621297], [48.127173, -1.621443]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_62c14f991da9d9ff74e0e5b94c09160e = new L.RegularPolygonMarker(\n",
              "                [48.12722, -1.62137],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 136.0329965649217, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8acc1927942a26885f5b1863762ed1d0 = L.polyline(\n",
              "                [[48.118441, -1.567474], [48.118586, -1.567963]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a8b20f3d9fcc7925be22cd43b0b5701a = new L.RegularPolygonMarker(\n",
              "                [48.1185135, -1.5677185],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 203.94947947149785, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6574762ee2948f51dec7b7fa1448c86b = L.polyline(\n",
              "                [[48.127173, -1.621443], [48.127094, -1.622063]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_55a8d2a82346358e06b8f84ee51a3405 = new L.RegularPolygonMarker(\n",
              "                [48.1271335, -1.621753],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 169.19271585725346, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_df7fb13ffe52b2ee04de651faa2c38fc = L.polyline(\n",
              "                [[48.118586, -1.567963], [48.118736, -1.568494]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6e3eb538aa2951097caba51496f60dcf = new L.RegularPolygonMarker(\n",
              "                [48.118661, -1.5682285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 202.93549445595374, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_329097afa98379500d31892450b6f7df = L.polyline(\n",
              "                [[48.128137, -1.66447], [48.128041, -1.664503]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b176db577e51e3da04b1e2f5f25a93bc = new L.RegularPolygonMarker(\n",
              "                [48.128089, -1.6644865],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 102.92240729374276, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e4696b7ca688d3b24bce058bd43908fb = L.polyline(\n",
              "                [[48.127094, -1.622063], [48.127188, -1.628872]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_eeb291bd5148985a2d773f605d79ccae = new L.RegularPolygonMarker(\n",
              "                [48.127140999999995, -1.6254675],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 181.18739510096412, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f356392d0e1b7afd33528674ea9e3305 = L.polyline(\n",
              "                [[48.118736, -1.568494], [48.117521, -1.574991]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5daa2809010eac374ea542318e5adfc2 = new L.RegularPolygonMarker(\n",
              "                [48.1181285, -1.5717425],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 164.35362865690809, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0640d715968cb4e3bb815a13fe10f4df = L.polyline(\n",
              "                [[48.128041, -1.664503], [48.127425, -1.664856]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_6240c294b1af7e273834fd32f27ee0f0 = new L.RegularPolygonMarker(\n",
              "                [48.127733000000006, -1.6646795],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 110.93179644373043, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dfe520c0606750b3763339dec1fe78d1 = L.polyline(\n",
              "                [[48.122655, -1.685427], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1f6b0a14cf034f71f34c2db11a3f6105 = new L.RegularPolygonMarker(\n",
              "                [48.122638, -1.684816],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 2.386272212344494, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_14fdef214c1941ae93506eb1c8f39ae7 = L.polyline(\n",
              "                [[48.111414, -1.625766], [48.111359, -1.625276]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_11f9594b314419c9d6575bedd4437cd7 = new L.RegularPolygonMarker(\n",
              "                [48.1113865, -1.625521],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 9.542619167925764, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_bb9c104e62d7c5df33bbf16fdbd6c719 = L.polyline(\n",
              "                [[48.127425, -1.664856], [48.12723, -1.665026]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1786471d35d2b78862890b8e6546891e = new L.RegularPolygonMarker(\n",
              "                [48.1273275, -1.6649409999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.19533568853478, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7f46d4d914c48baa1a6ab870958117d8 = L.polyline(\n",
              "                [[48.111359, -1.625276], [48.111384, -1.62504]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_16ee6d844990a2d0d719560fb8163e75 = L.polyline(\n",
              "                [[48.111384, -1.62504], [48.111482, -1.622926]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2853c8361f5f8432629e557648623f61 = new L.RegularPolygonMarker(\n",
              "                [48.11142747500359, -1.6241021820654662],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -3.972486035159136, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fb9cbd6a74193b69a366c7f8aa013c2e = L.polyline(\n",
              "                [[48.12723, -1.665026], [48.126523, -1.665478]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1fa179547fc65c9ff1573f204d1b97c6 = new L.RegularPolygonMarker(\n",
              "                [48.126876499999995, -1.665252],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 113.10986376843101, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0079fe457f9ad9a97123490798813b04 = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.122377, -1.684046]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e0384e56089fa7144ed474e73d6f6af4 = new L.RegularPolygonMarker(\n",
              "                [48.122499000000005, -1.6841255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 66.49111857052387, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6a017f5c1c2774b83da3a2fa0d17bcc7 = L.polyline(\n",
              "                [[48.126523, -1.665478], [48.126003, -1.665814]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_57dc2426a59137b81521d8b44d628eae = new L.RegularPolygonMarker(\n",
              "                [48.126262999999994, -1.665646],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 113.33076205062349, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6c17b4c09901c45e43e4285720c86b56 = L.polyline(\n",
              "                [[48.111482, -1.622926], [48.11135, -1.622165]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b7e99afb80f81775e568ef1632b956e1 = L.polyline(\n",
              "                [[48.11135, -1.622165], [48.111288, -1.62213]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b653f2cdeb4198cc5e11ec8c0b695ea0 = L.polyline(\n",
              "                [[48.111288, -1.62213], [48.111299, -1.62095]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b7a10c0ffbd471c70f6154e0dbcd1693 = new L.RegularPolygonMarker(\n",
              "                [48.11128937500405, -1.6219824995660341],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -0.8003341313389996, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_59d222df1a13b013faa6f39a406843ba = L.polyline(\n",
              "                [[48.126003, -1.665814], [48.125144, -1.666769]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_eab6e080d57574250b1c3d5868dbe397 = new L.RegularPolygonMarker(\n",
              "                [48.1255735, -1.6662914999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 126.57941649625207, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7e31860c6460efbc63708f289fd7ee3f = L.polyline(\n",
              "                [[48.111299, -1.62095], [48.111469, -1.620341]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_785cb2369caaa6c10bafc4229380557c = L.polyline(\n",
              "                [[48.111469, -1.620341], [48.107814, -1.616596]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a71a4c813b1b993afdbdfc34efc64012 = new L.RegularPolygonMarker(\n",
              "                [48.10982366319958, -1.61865514875032],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 55.62067074842403, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f09dfcbf27023f4ae31d03f9ede3957f = L.polyline(\n",
              "                [[48.117521, -1.574991], [48.117097, -1.575338]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_427c8ab5e5f8283e2f3cce109eaa08e4 = new L.RegularPolygonMarker(\n",
              "                [48.117309000000006, -1.5751645],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 118.65089180465608, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e220bae51cda17664c9acce711b18db4 = L.polyline(\n",
              "                [[48.125144, -1.666769], [48.124894, -1.667137]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5f089a8349009cdf329990e3bcc06f8e = new L.RegularPolygonMarker(\n",
              "                [48.125018999999995, -1.666953],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 134.49645668834387, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_be8bb8e673a98a621f7ae81791b6a8e7 = L.polyline(\n",
              "                [[48.117097, -1.575338], [48.116871, -1.575719]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c5907b8553d0e11398986d6f91c5d38b = new L.RegularPolygonMarker(\n",
              "                [48.116984, -1.5755284999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 138.3789230551463, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_69e3bf89763ecaff4618eb4ae31acd24 = L.polyline(\n",
              "                [[48.124894, -1.667137], [48.124864, -1.667097]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6f5467453db1b9c2fb29e6837bf7f5c3 = L.polyline(\n",
              "                [[48.124864, -1.667097], [48.124834, -1.66706]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ae139a625b6acd70996d1cffc99f4d9b = L.polyline(\n",
              "                [[48.124834, -1.66706], [48.123783, -1.665571]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_eb533c679e7feeb2c3085a5c6b243fad = new L.RegularPolygonMarker(\n",
              "                [48.124337201909434, -1.6663561633141217],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 46.597975361919566, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3aaff684e4b2405fe683562c897b7c35 = L.polyline(\n",
              "                [[48.116871, -1.575719], [48.116364, -1.580788]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c5637e41fd4c3b2694c33c641e601772 = new L.RegularPolygonMarker(\n",
              "                [48.116617500000004, -1.5782535000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 171.4814260990421, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e61f111807c3fd4b05d4c71c4bbb3a0b = L.polyline(\n",
              "                [[48.127188, -1.628872], [48.129716, -1.630694]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ca710299afc3db8bc82645be07705ad9 = new L.RegularPolygonMarker(\n",
              "                [48.128451999999996, -1.6297830000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 244.3103753235722, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_94aff4186a3531ada07ab68510a1bffd = L.polyline(\n",
              "                [[48.123783, -1.665571], [48.12334, -1.664937]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a486468a7ed98ff9d3ec735f7f6f3394 = L.polyline(\n",
              "                [[48.12334, -1.664937], [48.123044, -1.664533]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ea3f07a99fe3d4dcc151fbcf09156bf3 = new L.RegularPolygonMarker(\n",
              "                [48.12341674021202, -1.6650468268497163],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 46.308434811096674, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_47b142b3fdc7e412c89c7ff1545901df = L.polyline(\n",
              "                [[48.107814, -1.616596], [48.107713, -1.6167]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ef6c1bc0913f205279c24405948904f9 = new L.RegularPolygonMarker(\n",
              "                [48.1077635, -1.616648],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 124.51110263264525, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6b189643ff706ec7cc6c6376e409c6f3 = L.polyline(\n",
              "                [[48.123044, -1.664533], [48.12171, -1.664584]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_44334c18eede73c85141ba4457093179 = new L.RegularPolygonMarker(\n",
              "                [48.122377, -1.6645585],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 91.46193085681023, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_087971402b48c774ba1608b2b0324937 = L.polyline(\n",
              "                [[48.107713, -1.6167], [48.107499, -1.61671]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_0e8c41fb6e2efbb88f33fdc80f400014 = new L.RegularPolygonMarker(\n",
              "                [48.107606, -1.616705],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 91.78719608027669, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dc85a388f13a82ff187b2d11ddf303f4 = L.polyline(\n",
              "                [[48.116364, -1.580788], [48.116286, -1.581391]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a500aa167ae3e47239d9ac91853f4659 = new L.RegularPolygonMarker(\n",
              "                [48.116325, -1.5810895],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 169.0348813271042, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e968645ea8f4e14c489a4cb517170f5d = L.polyline(\n",
              "                [[48.107499, -1.61671], [48.107326, -1.616482]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_13926e1085b82dfc691ef0fd8b8a2601 = L.polyline(\n",
              "                [[48.107326, -1.616482], [48.104654, -1.614601]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_12d3801990c1b41ba94b08ecd4e6eb62 = new L.RegularPolygonMarker(\n",
              "                [48.10609435831758, -1.6156149648186233],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 64.82214583241924, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cc5af3b833da5d089e016712f857c320 = L.polyline(\n",
              "                [[48.116286, -1.581391], [48.116238, -1.581823]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8651647c05f81490e873a369dee4e49c = L.polyline(\n",
              "                [[48.116238, -1.581823], [48.116241, -1.581895]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_448b62fc41525e851b47eaa08c643324 = L.polyline(\n",
              "                [[48.116241, -1.581895], [48.116197, -1.581993]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f723b6e6a65546fa9e990be43dbd29c4 = L.polyline(\n",
              "                [[48.116197, -1.581993], [48.115787, -1.586244]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9471900e05aa2a73efeac1c3626a2b4b = new L.RegularPolygonMarker(\n",
              "                [48.11602197686434, -1.5838076910967858],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 171.78126319093764, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_96dcb8b5663c25252176165d6efaf1b3 = L.polyline(\n",
              "                [[48.129716, -1.630694], [48.132567, -1.633002]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_609d8c8b97aafa0ea99933bd946b5f6f = new L.RegularPolygonMarker(\n",
              "                [48.1311415, -1.6318480000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 241.61806624885912, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c231e063f695a515e8cea5d96d165a46 = L.polyline(\n",
              "                [[48.12171, -1.664584], [48.121171, -1.663986]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0ba5267f3060793d4d02695824db63a7 = L.polyline(\n",
              "                [[48.121171, -1.663986], [48.121139, -1.664043]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c3a103d387113db46d892287107adb9d = L.polyline(\n",
              "                [[48.121139, -1.664043], [48.120671, -1.66479]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_970f7aea87d12b5f13238c749c3f3334 = new L.RegularPolygonMarker(\n",
              "                [48.121150653670945, -1.664022241898632],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 139.93681467181185, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_920193712d7ae70b9c3c972026e4dc9a = L.polyline(\n",
              "                [[48.104654, -1.614601], [48.103313, -1.611269]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b3b8e39a2c3702d4e1706390dad6a13e = new L.RegularPolygonMarker(\n",
              "                [48.1039835, -1.612935],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 31.075468615863542, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3f8ef2b7ec852d399e6ae4e7f93be910 = L.polyline(\n",
              "                [[48.120671, -1.66479], [48.120327, -1.665374]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_b7ebec7bba13271e9b52292587fa7ad0 = new L.RegularPolygonMarker(\n",
              "                [48.120499, -1.665082],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 138.57596878316676, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57bc0230ff82b3951a76b5d868f7fe91 = L.polyline(\n",
              "                [[48.115787, -1.586244], [48.11545, -1.588048]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ceefbec4ce21cfd26c67c9970b2e24f4 = new L.RegularPolygonMarker(\n",
              "                [48.1156185, -1.587146],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 164.36870761513484, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c7901b363305555c30231d4f1674601c = L.polyline(\n",
              "                [[48.120327, -1.665374], [48.119715, -1.666453]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_38299199cc65ef944db16b185bc7fa86 = new L.RegularPolygonMarker(\n",
              "                [48.120021, -1.6659134999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 139.64806096850575, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b1e6d05c59940a81ebe772a260f488de = L.polyline(\n",
              "                [[48.11545, -1.588048], [48.11527, -1.588925]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d4ad63629a5d8c2848663e106022331b = L.polyline(\n",
              "                [[48.11527, -1.588925], [48.115277, -1.589004]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fa21e5904cfec918cb3037cd7da68fa5 = L.polyline(\n",
              "                [[48.115277, -1.589004], [48.115245, -1.589067]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b7385a7bcfc6cccb3a5be89d10c91451 = L.polyline(\n",
              "                [[48.115245, -1.589067], [48.114976, -1.590501]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ea4dfafcc0844ebf79f54c7de836b4dd = new L.RegularPolygonMarker(\n",
              "                [48.115207683251725, -1.5892659301748238],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 164.30665130251123, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b77814110de627a0c57894135a27c797 = L.polyline(\n",
              "                [[48.119715, -1.666453], [48.119523, -1.666892]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c1ed825dc485d7a66b561d0427f8156d = new L.RegularPolygonMarker(\n",
              "                [48.119619, -1.6666725],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 146.7697032578534, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_70ecf302b78c7cab0f0d41a2df297bb6 = L.polyline(\n",
              "                [[48.103313, -1.611269], [48.102357, -1.610182]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a3f1996156b3b4eef6c809d74156b78b = new L.RegularPolygonMarker(\n",
              "                [48.102835, -1.6107255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 52.790072954319356, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_1ff0ac0d062dc2d603104de0dfdc0320 = L.polyline(\n",
              "                [[48.132567, -1.633002], [48.132665, -1.633106]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5ccccbfe8e378ffaf0c8f495c2b332c0 = L.polyline(\n",
              "                [[48.132665, -1.633106], [48.132701, -1.633232]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_08d876d61a3f4b4ea18a3375606c0ba5 = L.polyline(\n",
              "                [[48.132701, -1.633232], [48.132194, -1.634797]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_851928e2ce800163aa8f61f6c5552241 = new L.RegularPolygonMarker(\n",
              "                [48.13249365768704, -1.6338720211435298],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 154.1086190484208, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d566fa0551d28a6b9a2fda523e750a20 = L.polyline(\n",
              "                [[48.114976, -1.590501], [48.114649, -1.59215]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c0c97cbc84d714c668d2203e593fb802 = new L.RegularPolygonMarker(\n",
              "                [48.1148125, -1.5913255],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 163.45817787186195, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b6d9b83a4e249e6ee1cad7527dbe1e92 = L.polyline(\n",
              "                [[48.102357, -1.610182], [48.10194, -1.610344]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7eab0e49d96aea13639217865fc07384 = L.polyline(\n",
              "                [[48.10194, -1.610344], [48.1012, -1.609505]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d340c800b96e7b7252ffc2fca8680347 = new L.RegularPolygonMarker(\n",
              "                [48.10174157492671, -1.610119028869611],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 52.86833574447749, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_004c918bb66cb77dcd2d7e2b960b21d1 = L.polyline(\n",
              "                [[48.132194, -1.634797], [48.131951, -1.635525]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_af10a1e7b0fa8dc76d3c2a63965296ee = new L.RegularPolygonMarker(\n",
              "                [48.1320725, -1.635161],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 153.42949895505348, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c6020184b97ecfb6319c3124c333ff0b = L.polyline(\n",
              "                [[48.114649, -1.59215], [48.11468, -1.592383]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9f29ad28f313a38c5964f6a2277b9156 = L.polyline(\n",
              "                [[48.11468, -1.592383], [48.114611, -1.592522]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0d937763d41bfc67be3b91f4e54b0568 = L.polyline(\n",
              "                [[48.114611, -1.592522], [48.114459, -1.593662]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_5c207f8e583eeb50ca3738801542b9aa = new L.RegularPolygonMarker(\n",
              "                [48.11456184501494, -1.5928906623879349],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 168.70661743707916, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2b9b3bb7394988e4fe8ec188a39305bf = L.polyline(\n",
              "                [[48.1012, -1.609505], [48.101216, -1.608747]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7684b5f067fbdbba5c0d0822b1aece5b = new L.RegularPolygonMarker(\n",
              "                [48.101208, -1.6091259999999998],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -1.810669273713387, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e3c2043159b4eb32907b3e6eb57092ec = L.polyline(\n",
              "                [[48.131951, -1.635525], [48.129696, -1.642972]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1333a40b1d4ae9b70eeceeddfd1c119f = new L.RegularPolygonMarker(\n",
              "                [48.130823500000005, -1.6392484999999999],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 155.59950516457292, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_dd649d3f107741b603e50ce59696a86d = L.polyline(\n",
              "                [[48.101216, -1.608747], [48.101441, -1.608263]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_196d1c4aa19ce34a2902a161b597530f = new L.RegularPolygonMarker(\n",
              "                [48.1013285, -1.608505],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -34.84252320333926, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3db9c5f137987daf32547f9d887c5503 = L.polyline(\n",
              "                [[48.114459, -1.593662], [48.114439, -1.594368]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_3c6e712c0f1df3e3faa872f9c37dd2a1 = new L.RegularPolygonMarker(\n",
              "                [48.11444899999999, -1.594015],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 177.5706223495929, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cf8f7d4b4882654761129311e7187efd = L.polyline(\n",
              "                [[48.101441, -1.608263], [48.101972, -1.607976]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d7e86ed7499bb9f697c5215314e1f444 = new L.RegularPolygonMarker(\n",
              "                [48.101706500000006, -1.6081195],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -70.15333287004297, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7b96403eb8aab2fd3efa5ad12c6ae4d9 = L.polyline(\n",
              "                [[48.114439, -1.594368], [48.114439, -1.595201]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_2faae7995a42ecf2d656ddd279424cfb = new L.RegularPolygonMarker(\n",
              "                [48.114439, -1.5947845],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 180.00031007581373, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4b7f9980149ebe541807ee9c23482156 = L.polyline(\n",
              "                [[48.101972, -1.607976], [48.105177, -1.602476]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f2b0ce9afb2ea63e0554326328f34ae7 = new L.RegularPolygonMarker(\n",
              "                [48.1035745, -1.605226],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -41.11083091427495, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ee7c6b3f194bd4af1d23a1be01f51978 = L.polyline(\n",
              "                [[48.114439, -1.595201], [48.114542, -1.595488]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a34b77f72bc49c06e86bd13ec5096d2c = L.polyline(\n",
              "                [[48.114542, -1.595488], [48.114588, -1.595503]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3b6c9638ed63f86a6f0ea8b326c82676 = L.polyline(\n",
              "                [[48.114588, -1.595503], [48.114668, -1.595673]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_baac7520f8ba3ea0a4eccf8c89389206 = L.polyline(\n",
              "                [[48.114668, -1.595673], [48.114571, -1.595877]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cb4334596aa441137edd9baea371e78e = L.polyline(\n",
              "                [[48.114571, -1.595877], [48.114424, -1.596311]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0224db56127c160eb8e1be1163fca1aa = L.polyline(\n",
              "                [[48.114424, -1.596311], [48.114396, -1.598916]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fffeb731e8d3605eabc828a790b96de2 = L.polyline(\n",
              "                [[48.114396, -1.598916], [48.114432, -1.600862]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c0337455ce5baaf7069463f741f23bc5 = L.polyline(\n",
              "                [[48.114432, -1.600862], [48.114486, -1.60093]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_92ede671554dc7b47fca62e21e6f8a22 = L.polyline(\n",
              "                [[48.114486, -1.60093], [48.114695, -1.600967]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c4c8827b52239ee7a8f372af0aed09f3 = L.polyline(\n",
              "                [[48.114695, -1.600967], [48.11849, -1.600846]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_c4b205c671e5ab09b31a72b7758a1e1d = new L.RegularPolygonMarker(\n",
              "                [48.11448213319596, -1.6009251306912116],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 229.94499123767957, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a3b1798fc7fa474fc2fd54c06b76d37a = L.polyline(\n",
              "                [[48.105177, -1.602476], [48.110057, -1.590622]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_818f1d2fe5ef1f70ba45c680cd0aceb7 = new L.RegularPolygonMarker(\n",
              "                [48.107617, -1.596549],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -31.65933965464709, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c94628e4e8c404e131a4d1600654836a = L.polyline(\n",
              "                [[48.129696, -1.642972], [48.129672, -1.643067]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e46e33cf8ed24ce6b30381f0ce2fc874 = L.polyline(\n",
              "                [[48.129672, -1.643067], [48.129419, -1.643927]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a4095efbdbcd2e502bda6edf84f2e346 = L.polyline(\n",
              "                [[48.129419, -1.643927], [48.129277, -1.644396]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5960feea3d8835efeec3af28524c0ceb = L.polyline(\n",
              "                [[48.129277, -1.644396], [48.128979, -1.645536]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_e59b9ff2d6acc68dd4d8ddb091f71887 = new L.RegularPolygonMarker(\n",
              "                [48.129322768919344, -1.6442448336396442],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 155.59999272330757, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a0723f1e92a18cd20c48b4731c33ee51 = L.polyline(\n",
              "                [[48.11849, -1.600846], [48.118589, -1.600801]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f01ab7a27382bb4212d256f841d6e48f = L.polyline(\n",
              "                [[48.118589, -1.600801], [48.118676, -1.60101]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_71116ff8dc05f9f644b093c15daf9f8e = L.polyline(\n",
              "                [[48.118676, -1.60101], [48.119515, -1.601692]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a477399e7b4bedc56e7e7733733596e4 = new L.RegularPolygonMarker(\n",
              "                [48.11897768683698, -1.6012552329235037],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 241.51329513846804, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57ced849ac7f408e3c94d2083a4b05b3 = L.polyline(\n",
              "                [[48.128979, -1.645536], [48.128174, -1.648521]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_397a8e99492bd2e728d05a2c7ddbbeb2 = new L.RegularPolygonMarker(\n",
              "                [48.1285765, -1.6470285],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 158.0003812072286, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_21388647ebde4723961090268023b853 = L.polyline(\n",
              "                [[48.119515, -1.601692], [48.11958, -1.602242]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_a2a1d1540925f8f8df707790688152d2 = new L.RegularPolygonMarker(\n",
              "                [48.119547499999996, -1.601967],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 190.03929727932473, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f2ed191cb72dc60fa96ca7d70396ce87 = L.polyline(\n",
              "                [[48.128174, -1.648521], [48.128054, -1.649043]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b396bbf0b55f41c08f0a259908ba0d0f = L.polyline(\n",
              "                [[48.128054, -1.649043], [48.127674, -1.651588]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_1da6d1697e9efb6d88f1ac99040ae175 = new L.RegularPolygonMarker(\n",
              "                [48.12790421579902, -1.6500461599776044],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 167.39154251668378, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8164d3b4e41d0be1c55b1b40ffd8a85c = L.polyline(\n",
              "                [[48.110057, -1.590622], [48.113366, -1.580537]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_9dd700e73d0ae7d598b675fcbca15b54 = new L.RegularPolygonMarker(\n",
              "                [48.1117115, -1.5855795000000001],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -26.174147750252395, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a153a2c70302463ee7963ff09d9f325b = L.polyline(\n",
              "                [[48.127674, -1.651588], [48.127778, -1.651942]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a2dd5bc22380745029155286b9920e6d = L.polyline(\n",
              "                [[48.127778, -1.651942], [48.127749, -1.652168]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_43c8ec7a1678590aa34debe490b8c0d9 = L.polyline(\n",
              "                [[48.127749, -1.652168], [48.127516, -1.652466]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f79ae96b9ddb99726218e7ff563c14ae = L.polyline(\n",
              "                [[48.127516, -1.652466], [48.127411, -1.652479]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4cbe297ad7641d7a3a33b38c42084f79 = L.polyline(\n",
              "                [[48.127411, -1.652479], [48.12732, -1.652453]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7512ab8d6ab3439036d6e0c6ee5d88c8 = L.polyline(\n",
              "                [[48.12732, -1.652453], [48.127027, -1.65282]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_87668168baa66087d605ee3184c9f8e0 = L.polyline(\n",
              "                [[48.127027, -1.65282], [48.126011, -1.654692]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_30cc50745084024a76dca47437fa2e6d = L.polyline(\n",
              "                [[48.126011, -1.654692], [48.125838, -1.655009]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0efe75d34d19e3b0df8bc0342872d57c = L.polyline(\n",
              "                [[48.125838, -1.655009], [48.125463, -1.655754]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_602ce49ffa557112dd0a66ed570e3b4b = L.polyline(\n",
              "                [[48.125463, -1.655754], [48.125145, -1.656526]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_844a9b4ab8c4bcbd50580af487614599 = L.polyline(\n",
              "                [[48.125145, -1.656526], [48.12506, -1.656729]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_7c3f23d1005c7bc0f4d7a6942ba51aca = new L.RegularPolygonMarker(\n",
              "                [48.12640407850599, -1.6539677451149404],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 140.88610769913632, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6587b744bb5b2cad78fa2fc9df067228 = L.polyline(\n",
              "                [[48.113366, -1.580537], [48.114709, -1.561914]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_d55cb91f84868fc649a516410a1e28a0 = new L.RegularPolygonMarker(\n",
              "                [48.114037499999995, -1.5712255000000002],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: -6.171740141539814, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_57d7034ddae191181de5e17f22d78b5e = L.polyline(\n",
              "                [[48.12506, -1.656729], [48.124925, -1.65702]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_67122820a86b61e70ce9c19c17471205 = L.polyline(\n",
              "                [[48.124925, -1.65702], [48.124475, -1.657942]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_028ad95f1a168de7d86d8dab28b48555 = L.polyline(\n",
              "                [[48.124475, -1.657942], [48.124387, -1.658125]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5e01378dcdace7cb28adf9b0f4c3c558 = L.polyline(\n",
              "                [[48.124387, -1.658125], [48.123494, -1.659649]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_420704fa6415dc331ce978e220d5ce8b = L.polyline(\n",
              "                [[48.123494, -1.659649], [48.123276, -1.65997]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ecb06e8a9e407f7745340e1f9f4bcd7c = L.polyline(\n",
              "                [[48.123276, -1.65997], [48.12226, -1.661759]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d24a32ddf8a454bbe07b8465af417428 = L.polyline(\n",
              "                [[48.12226, -1.661759], [48.121942, -1.662391]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c2478fbc04c751648408ee0eddd8aef5 = L.polyline(\n",
              "                [[48.121942, -1.662391], [48.121787, -1.662742]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f02a212fa1f53bd2759518b8b08b2fbe = L.polyline(\n",
              "                [[48.121787, -1.662742], [48.121171, -1.663986]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ab155c382e1bd5a71c665a7aab6389ad = L.polyline(\n",
              "                [[48.121171, -1.663986], [48.121139, -1.664043]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_4fde42517dff91e0cae559ddab998fc6 = L.polyline(\n",
              "                [[48.121139, -1.664043], [48.120671, -1.66479]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a62c6d6601bb61e383f55e340d25678c = L.polyline(\n",
              "                [[48.120671, -1.66479], [48.120327, -1.665374]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_b64c08603f3f88f9b03058df3a8d59fc = L.polyline(\n",
              "                [[48.120327, -1.665374], [48.119715, -1.666453]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2e2c691d7969b4ca7ac3fd7a887af079 = L.polyline(\n",
              "                [[48.119715, -1.666453], [48.119286, -1.667432]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_053207d1d3431ccab526fd229ac1162d = new L.RegularPolygonMarker(\n",
              "                [48.12212538560909, -1.6620265355190453],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 142.99295399046352, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_ea25b35d760d199c85afa23898236ebe = L.polyline(\n",
              "                [[48.114709, -1.561914], [48.110936, -1.535457]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_ae68284b5136784d30fcfbbe3b6a0f2e = new L.RegularPolygonMarker(\n",
              "                [48.1128225, -1.5486855],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 12.046955000527191, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_237d573aecbc59ae175f898d44c89109 = L.polyline(\n",
              "                [[48.119286, -1.667432], [48.119062, -1.66786]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f7f9ff863836818b225918050c7c7daa = L.polyline(\n",
              "                [[48.119062, -1.66786], [48.118792, -1.668375]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9c7fe32fb954fcbc6f4e1fef7c5aa104 = L.polyline(\n",
              "                [[48.118792, -1.668375], [48.118337, -1.670151]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e20045d4754254c45c552569e12093d4 = L.polyline(\n",
              "                [[48.118337, -1.670151], [48.11817, -1.672344]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5d1c95a5e50572b42046d57b781c6f12 = L.polyline(\n",
              "                [[48.11817, -1.672344], [48.117989, -1.67313]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_33512a90e452bf529f824a99712fbb9e = L.polyline(\n",
              "                [[48.117989, -1.67313], [48.117925, -1.673537]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_74da9dfe12187962e086a622db8f3496 = L.polyline(\n",
              "                [[48.117925, -1.673537], [48.117934, -1.674027]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_481c491a3d2138a69ad4cc835380a408 = L.polyline(\n",
              "                [[48.117934, -1.674027], [48.118, -1.675493]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_537b820d8c54551daaa3dd8e778ee75a = L.polyline(\n",
              "                [[48.118, -1.675493], [48.118222, -1.676312]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d76352722e8549453a64e5142ad046cb = L.polyline(\n",
              "                [[48.118222, -1.676312], [48.118406, -1.676532]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0e763c5fc37155b47266b6e2c70c366b = L.polyline(\n",
              "                [[48.118406, -1.676532], [48.118845, -1.677347]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_190958117eefba6fa4ca89e1f1393f22 = L.polyline(\n",
              "                [[48.118845, -1.677347], [48.119785, -1.680226]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_fd8e10cc999399f296784625633aab34 = L.polyline(\n",
              "                [[48.119785, -1.680226], [48.119884, -1.680631]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cdae4b59e7cac7adbec7019e7d132f9b = L.polyline(\n",
              "                [[48.119884, -1.680631], [48.119964, -1.680667]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5218a5d78e56fb7815a6a57e03424907 = L.polyline(\n",
              "                [[48.119964, -1.680667], [48.120054, -1.680831]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6e0ff4d08af05c6d82d4796aa464a2b7 = L.polyline(\n",
              "                [[48.120054, -1.680831], [48.120664, -1.681778]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5c7fbde21b1481c1eb3a5e119da302b1 = L.polyline(\n",
              "                [[48.120664, -1.681778], [48.120742, -1.681908]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6b78bf02f12feb372726c73a1552d8f0 = L.polyline(\n",
              "                [[48.120742, -1.681908], [48.121162, -1.682564]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_34ffc9d558e71a6c36b0367cbeb79fa6 = L.polyline(\n",
              "                [[48.121162, -1.682564], [48.121527, -1.683112]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_8ae350ae074f62693427e99653e385a7 = L.polyline(\n",
              "                [[48.121527, -1.683112], [48.122621, -1.684205]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f153aee614b947deed38e483b3091e76 = new L.RegularPolygonMarker(\n",
              "                [48.11849021699203, -1.6766883481742658],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 218.89888068648622, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_0e22cae3d53c9eda166ff640f9d9d55a = L.polyline(\n",
              "                [[48.110936, -1.535457], [48.110605, -1.534649]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_f0e2349b4f4537fa06145cd15e1d0940 = new L.RegularPolygonMarker(\n",
              "                [48.1107705, -1.535053],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 31.53031364562149, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2f4ce7ef2161553462b216c5ec402ed8 = L.polyline(\n",
              "                [[48.122621, -1.684205], [48.122655, -1.685427]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c3fe1e14108557ae69978af59f50c62c = L.polyline(\n",
              "                [[48.122655, -1.685427], [48.121649, -1.686309]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_e52ad1adbecdf1a5a418ab47b54d5ed7 = L.polyline(\n",
              "                [[48.121649, -1.686309], [48.121615, -1.686338]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_5e300a628820a44f99239ef2a55323f2 = L.polyline(\n",
              "                [[48.121615, -1.686338], [48.121003, -1.686872]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f3dbf3584d210f51c4c22ecef062dd2a = L.polyline(\n",
              "                [[48.121003, -1.686872], [48.120505, -1.687309]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_7ee6a5a892212e7ff971902f997c7a55 = L.polyline(\n",
              "                [[48.120505, -1.687309], [48.120364, -1.687433]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c45bc1d5400baff6fbefcde24371c287 = L.polyline(\n",
              "                [[48.120364, -1.687433], [48.119985, -1.687765]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_11e562897b05e19ee7caa8bd0594bc95 = L.polyline(\n",
              "                [[48.119985, -1.687765], [48.119791, -1.687938]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_2d667a391752ef461fffa8d59d27afe8 = L.polyline(\n",
              "                [[48.119791, -1.687938], [48.11903, -1.688609]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6aa5334320d6036ca9bae93fbb425251 = L.polyline(\n",
              "                [[48.11903, -1.688609], [48.1187, -1.688896]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_3025bbd8801c89537976bd98793ff49e = L.polyline(\n",
              "                [[48.1187, -1.688896], [48.118645, -1.68894]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_18d3a9b8f5f553cefb595447f6d0fad2 = L.polyline(\n",
              "                [[48.118645, -1.68894], [48.117685, -1.689795]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f4f44625ae49883c7713d470447a6435 = L.polyline(\n",
              "                [[48.117685, -1.689795], [48.116868, -1.690514]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_c75d37f38ffb6393267956be3d333022 = L.polyline(\n",
              "                [[48.116868, -1.690514], [48.116254, -1.691065]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_101eb1b98e529bb5e0d66ff889d8476d = L.polyline(\n",
              "                [[48.116254, -1.691065], [48.115877, -1.69141]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_cb24cc1d762c19eb84601a96ee2e11cb = L.polyline(\n",
              "                [[48.115877, -1.69141], [48.115667, -1.6916]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_9f3ce2162520d22881ee0c5759e81e69 = L.polyline(\n",
              "                [[48.115667, -1.6916], [48.11503, -1.692149]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_f0d7225e167c6c75d679b65f5d9f7393 = L.polyline(\n",
              "                [[48.11503, -1.692149], [48.113997, -1.693079]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_d2005077816b7601536278e2d5f25ef5 = L.polyline(\n",
              "                [[48.113997, -1.693079], [48.11283, -1.693421]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_a81f9887d4cbe849443a3ddf17c0d7c2 = L.polyline(\n",
              "                [[48.11283, -1.693421], [48.113006, -1.695026]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_edc51e577c9db41c8f834de32040e19a = L.polyline(\n",
              "                [[48.113006, -1.695026], [48.113348, -1.696204]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_96021131f1564a4d38510e43006c4051 = L.polyline(\n",
              "                [[48.113348, -1.696204], [48.113275, -1.696246]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var poly_line_6af918be31506e0c9583fae0cd0f1db4 = L.polyline(\n",
              "                [[48.113275, -1.696246], [48.112687, -1.693424]],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.8, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var regular_polygon_marker_32fc814a14a70b8fd2c1cf1f652c2603 = new L.RegularPolygonMarker(\n",
              "                [48.116436287748726, -1.6909014160430789],\n",
              "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;green&quot;, &quot;fillOpacity&quot;: 1.0, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;numberOfSides&quot;: 3, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 6, &quot;rotation&quot;: 120.92670192507691, &quot;stroke&quot;: true, &quot;weight&quot;: 3}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var marker_0633279d92b55a1289684517a3cdd183 = L.marker(\n",
              "                [48.08963, -1.78095],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_450d027c2dc51373cf510346d6a9bb08 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;home&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;blue&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_0633279d92b55a1289684517a3cdd183.setIcon(icon_450d027c2dc51373cf510346d6a9bb08);\n",
              "        \n",
              "    \n",
              "        var popup_e475c9489e0d847ddb1b683662af5e30 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_75abf0e921604d2f3cc04c7cee366559 = $(`&lt;div id=&quot;html_75abf0e921604d2f3cc04c7cee366559&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;D1&lt;/div&gt;`)[0];\n",
              "                popup_e475c9489e0d847ddb1b683662af5e30.setContent(html_75abf0e921604d2f3cc04c7cee366559);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_0633279d92b55a1289684517a3cdd183.bindPopup(popup_e475c9489e0d847ddb1b683662af5e30)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_08323d94d91939a22134ac77393bab86 = L.marker(\n",
              "                [48.11063, -1.534622],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_0c7b2062fbce2a0041033e76b1afe7ba = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;home&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;blue&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_08323d94d91939a22134ac77393bab86.setIcon(icon_0c7b2062fbce2a0041033e76b1afe7ba);\n",
              "        \n",
              "    \n",
              "        var popup_4009a476f9c9df99f2ff537c44bac34f = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_ff1d4f2112853247fa837d94c0b55744 = $(`&lt;div id=&quot;html_ff1d4f2112853247fa837d94c0b55744&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;D2&lt;/div&gt;`)[0];\n",
              "                popup_4009a476f9c9df99f2ff537c44bac34f.setContent(html_ff1d4f2112853247fa837d94c0b55744);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_08323d94d91939a22134ac77393bab86.bindPopup(popup_4009a476f9c9df99f2ff537c44bac34f)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_d30b7d79f5e9c2535d86d5be8b7c4731 = L.marker(\n",
              "                [48.1090057, -1.68361],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_87be14d747e55fa990c2fc56190caa5c = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_d30b7d79f5e9c2535d86d5be8b7c4731.setIcon(icon_87be14d747e55fa990c2fc56190caa5c);\n",
              "        \n",
              "    \n",
              "        var popup_1732de0e5863c2bc0543fc6286cc5b2d = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_c161e9c6d77930402c82cac3b025cbfd = $(`&lt;div id=&quot;html_c161e9c6d77930402c82cac3b025cbfd&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C1&lt;/div&gt;`)[0];\n",
              "                popup_1732de0e5863c2bc0543fc6286cc5b2d.setContent(html_c161e9c6d77930402c82cac3b025cbfd);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_d30b7d79f5e9c2535d86d5be8b7c4731.bindPopup(popup_1732de0e5863c2bc0543fc6286cc5b2d)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_078483398e70728d6a6e8615da71c45d = L.marker(\n",
              "                [48.1196207, -1.6669879],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_a60bac12b6c43c7f05bc6ad8ac31cf9c = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_078483398e70728d6a6e8615da71c45d.setIcon(icon_a60bac12b6c43c7f05bc6ad8ac31cf9c);\n",
              "        \n",
              "    \n",
              "        var popup_c1e63dc6c4394f952526ac49ad853ca5 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_9a621b1303f139b5cc47613fc884576c = $(`&lt;div id=&quot;html_9a621b1303f139b5cc47613fc884576c&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C2&lt;/div&gt;`)[0];\n",
              "                popup_c1e63dc6c4394f952526ac49ad853ca5.setContent(html_9a621b1303f139b5cc47613fc884576c);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_078483398e70728d6a6e8615da71c45d.bindPopup(popup_c1e63dc6c4394f952526ac49ad853ca5)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_1e99a239c995e88fae803b6753978c43 = L.marker(\n",
              "                [48.122445, -1.6839187],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_9ef4f29f6a362eac849f12ef7bf354b8 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_1e99a239c995e88fae803b6753978c43.setIcon(icon_9ef4f29f6a362eac849f12ef7bf354b8);\n",
              "        \n",
              "    \n",
              "        var popup_d8b52398a5d8736b4d1a09ed25ad28aa = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_fd994b2f581899965464fab80ddca324 = $(`&lt;div id=&quot;html_fd994b2f581899965464fab80ddca324&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C3&lt;/div&gt;`)[0];\n",
              "                popup_d8b52398a5d8736b4d1a09ed25ad28aa.setContent(html_fd994b2f581899965464fab80ddca324);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_1e99a239c995e88fae803b6753978c43.bindPopup(popup_d8b52398a5d8736b4d1a09ed25ad28aa)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_e56169f19783b3225af6a0ab24005a0c = L.marker(\n",
              "                [48.1174576, -1.7077382],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_1be5667aecf46edc9de113f887d1387c = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_e56169f19783b3225af6a0ab24005a0c.setIcon(icon_1be5667aecf46edc9de113f887d1387c);\n",
              "        \n",
              "    \n",
              "        var popup_c820dda0c3005c526d9cd3e0eec8637c = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_7fcea73376d827ac32a342ff6389e56c = $(`&lt;div id=&quot;html_7fcea73376d827ac32a342ff6389e56c&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C4&lt;/div&gt;`)[0];\n",
              "                popup_c820dda0c3005c526d9cd3e0eec8637c.setContent(html_7fcea73376d827ac32a342ff6389e56c);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_e56169f19783b3225af6a0ab24005a0c.bindPopup(popup_c820dda0c3005c526d9cd3e0eec8637c)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_1e8bebd3b5149599bd95773a6af68b5d = L.marker(\n",
              "                [48.0849474, -1.6923783],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_e48bcfee98ab8415e3f990a6a8977315 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_1e8bebd3b5149599bd95773a6af68b5d.setIcon(icon_e48bcfee98ab8415e3f990a6a8977315);\n",
              "        \n",
              "    \n",
              "        var popup_9053c18e98b370b9e687c7d9d7426bfd = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_68e16ead0094c36cd7e3e315091c5cf9 = $(`&lt;div id=&quot;html_68e16ead0094c36cd7e3e315091c5cf9&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C5&lt;/div&gt;`)[0];\n",
              "                popup_9053c18e98b370b9e687c7d9d7426bfd.setContent(html_68e16ead0094c36cd7e3e315091c5cf9);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_1e8bebd3b5149599bd95773a6af68b5d.bindPopup(popup_9053c18e98b370b9e687c7d9d7426bfd)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_dd7613b09ee97c0e1926315527cf458c = L.marker(\n",
              "                [48.1208677, -1.6723544],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_587ff72a9ab01c90d32269c628c115f1 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_dd7613b09ee97c0e1926315527cf458c.setIcon(icon_587ff72a9ab01c90d32269c628c115f1);\n",
              "        \n",
              "    \n",
              "        var popup_25cd64edc6126e32b011928d8751f98e = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_9bd1c3e8f936c1c31ce28212c7aa308b = $(`&lt;div id=&quot;html_9bd1c3e8f936c1c31ce28212c7aa308b&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C6&lt;/div&gt;`)[0];\n",
              "                popup_25cd64edc6126e32b011928d8751f98e.setContent(html_9bd1c3e8f936c1c31ce28212c7aa308b);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_dd7613b09ee97c0e1926315527cf458c.bindPopup(popup_25cd64edc6126e32b011928d8751f98e)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_9083e1ab0b3881a93ac95c2ad1e5be6c = L.marker(\n",
              "                [48.1126842986276, -1.6934232628134347],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_94595831c52a8b7f0327adce7d681363 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_9083e1ab0b3881a93ac95c2ad1e5be6c.setIcon(icon_94595831c52a8b7f0327adce7d681363);\n",
              "        \n",
              "    \n",
              "        var popup_ebdc4bf68305c810ee6fbc6dec5531b9 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_cab992509b6ce3aca638bedefaa40c4f = $(`&lt;div id=&quot;html_cab992509b6ce3aca638bedefaa40c4f&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C7&lt;/div&gt;`)[0];\n",
              "                popup_ebdc4bf68305c810ee6fbc6dec5531b9.setContent(html_cab992509b6ce3aca638bedefaa40c4f);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_9083e1ab0b3881a93ac95c2ad1e5be6c.bindPopup(popup_ebdc4bf68305c810ee6fbc6dec5531b9)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_056380fdf047aa9dfdd6ea38b4bfbb28 = L.marker(\n",
              "                [48.1195623, -1.602953],\n",
              "                {}\n",
              "            ).addTo(map_40f5a78893ed8ed0521268bf60f71f27);\n",
              "        \n",
              "    \n",
              "            var icon_89522e1d8bcd0047e920c8356e89d2d3 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;star&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;orange&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_056380fdf047aa9dfdd6ea38b4bfbb28.setIcon(icon_89522e1d8bcd0047e920c8356e89d2d3);\n",
              "        \n",
              "    \n",
              "        var popup_c59416cae85649004f270ba780ef1c49 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_3f7797eb6cef45ddfbb320820bd58527 = $(`&lt;div id=&quot;html_3f7797eb6cef45ddfbb320820bd58527&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;C8&lt;/div&gt;`)[0];\n",
              "                popup_c59416cae85649004f270ba780ef1c49.setContent(html_3f7797eb6cef45ddfbb320820bd58527);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_056380fdf047aa9dfdd6ea38b4bfbb28.bindPopup(popup_c59416cae85649004f270ba780ef1c49)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "&lt;/script&gt;\n",
              "&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    }
  ]
}